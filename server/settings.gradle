/*
 * This file was generated by the Gradle "init" task.
 *
 * The settings file is used to specify which projects to include in your build.
 *
 * Detailed information about configuring a multi-project build in Gradle can be found
 * in the user manual at https://docs.gradle.org/7.1/userguide/multi_project_builds.html
 */

pluginManagement {
    plugins {
        id "com.diffplug.spotless" version "${spotlessPluginVersion}"
        id "com.github.ben-manes.versions" version "${versionsPluginVersion}"
        id "com.github.spotbugs" version "${spotbugsPluginVersion}"
        id "com.google.cloud.tools.jib" version "${jibPluginVersion}"
        id "com.gorylenko.gradle-git-properties" version "${gitPropertiesPluginVersion}"
        id "org.graalvm.buildtools.native" version "${graalVMBuildToolsPluginVersion}"
        id "org.sonarqube" version "${sonarqubePluginVersion}"
        id "org.springframework.boot" version "${springBootVersion}"
        id "org.springframework.experimental.aot" version "${springAOTPluginVersion}"
    }

    repositories {
        gradlePluginPortal()

        mavenCentral()

        maven { url 'https://repo.spring.io/release' }
    }
}

rootProject.name = "bytechef"

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            library('java-jq', 'com.arakelian:java-jq:1.1.0')
            library('jackson-dataformat-xml', 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.13.2')
            library('jackson-dataformat-yaml', 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.2')
            library('sods', 'com.github.miachm.sods:SODS:1.4.0')
            library('json-path', 'com.jayway.jsonpath:json-path:2.7.0')
            library('commons-io', 'commons-io:commons-io:2.11.0')
            library('commons-exec', 'org.apache.commons:commons-exec:1.3')
            library('tika-core', 'org.apache.tika:tika-core:2.1.0')
            library('poi-ooxml', 'org.apache.poi:poi-ooxml:4.1.2')
            library('jgit', 'org.eclipse.jgit:org.eclipse.jgit:5.13.0.202109080827-r')
            library('json', 'org.json:json:20210307')
            library('jobrunr', 'org.jobrunr:jobrunr:5.1.4')
            library('jobrunr-spring-boot-starter', 'org.jobrunr:jobrunr-spring-boot-starter:5.1.4')
            library('zt-exec', 'org.zeroturnaround:zt-exec:1.12')
            library('awssdk-s3', 'software.amazon.awssdk:s3:2.17.46')
            library('testcontainers', 'org.testcontainers:testcontainers:1.17.2')
            library('testcontainers-postgresql', 'org.testcontainers:postgresql:1.17.2')
            library('testcontainers-junit-jupiter', 'org.testcontainers:junit-jupiter:1.17.2')
        }
    }
}

include("modules:apps:cli-app")
include("modules:apps:coordinator-app")
include("modules:apps:rest-app")
include("modules:apps:server-app")
include("modules:apps:worker-app")
include("modules:libs:hermes:hermes-auth:hermes-auth-api")
include("modules:libs:hermes:hermes-auth:hermes-auth-repository:hermes-auth-repository-api")
include("modules:libs:hermes:hermes-auth:hermes-auth-repository:hermes-auth-repository-jdbc")
include("modules:libs:hermes:hermes-auth:hermes-auth-rest")
include("modules:libs:hermes:hermes-auth:hermes-auth-service")
include("modules:libs:atlas:atlas-api")
include("modules:libs:atlas:atlas-coordinator:atlas-coordinator-api")
include("modules:libs:atlas:atlas-coordinator:atlas-coordinator-impl")
include("modules:libs:atlas:atlas-event:atlas-event-api")
include("modules:libs:atlas:atlas-event:atlas-event-impl")
include("modules:libs:atlas:atlas-message-broker:atlas-message-broker-api")
include("modules:libs:atlas:atlas-message-broker:atlas-message-broker-amqp")
include("modules:libs:atlas:atlas-message-broker:atlas-message-broker-jms")
include("modules:libs:atlas:atlas-message-broker:atlas-message-broker-kafka")
include("modules:libs:atlas:atlas-message-broker:atlas-message-broker-sync")
include("modules:libs:atlas:atlas-repository:atlas-repository-api")
include("modules:libs:atlas:atlas-repository:atlas-repository-git")
include("modules:libs:atlas:atlas-repository:atlas-repository-jdbc")
include("modules:libs:atlas:atlas-repository:atlas-repository-memory")
include("modules:libs:atlas:atlas-repository:atlas-repository-resource")
include("modules:libs:atlas:atlas-rest")
include("modules:libs:atlas:atlas-service")
include("modules:libs:atlas:atlas-worker:atlas-worker-api")
include("modules:libs:atlas:atlas-worker:atlas-worker-impl")
include("modules:libs:hermes:hermes-encryption:hermes-encryption-api")
include("modules:libs:hermes:hermes-encryption:hermes-encryption-filesystem")
include("modules:libs:hermes:hermes-file-storage:hermes-file-storage-api")
include("modules:libs:hermes:hermes-file-storage:hermes-file-storage-base64")
include("modules:libs:hermes:hermes-file-storage:hermes-file-storage-filesystem")
include("modules:libs:hermes:hermes-file-storage:hermes-file-storage-listener")
include("modules:libs:hermes:hermes-descriptor:hermes-descriptor-api")
include("modules:libs:hermes:hermes-descriptor:hermes-descriptor-repository:hermes-descriptor-repository-api")
include("modules:libs:hermes:hermes-descriptor:hermes-descriptor-repository:hermes-descriptor-repository-memory")
include("modules:libs:hermes:hermes-descriptor:hermes-descriptor-rest")
include("modules:libs:hermes:hermes-descriptor:hermes-descriptor-service")
include("modules:libs:task:task-commons")
include("modules:libs:task:task-dispatcher:task-dispatcher-each")
include("modules:libs:task:task-dispatcher:task-dispatcher-fork")
include("modules:libs:task:task-dispatcher:task-dispatcher-if")
include("modules:libs:task:task-dispatcher:task-dispatcher-loop")
include("modules:libs:task:task-dispatcher:task-dispatcher-map")
include("modules:libs:task:task-dispatcher:task-dispatcher-parallel")
include("modules:libs:task:task-dispatcher:task-dispatcher-sequence")
include("modules:libs:task:task-dispatcher:task-dispatcher-subflow")
include("modules:libs:task:task-dispatcher:task-dispatcher-switch")
include("modules:libs:task:task-handler:task-handler-map")
include("modules:libs:task:task-handler:task-handler-bento4")
include("modules:libs:task:task-handler:task-handler-core")
include("modules:libs:task:task-handler:task-handler-csv-file")
include("modules:libs:task:task-handler:task-handler-file")
include("modules:libs:task:task-handler:task-handler-http-client")
include("modules:libs:task:task-handler:task-handler-io")
include("modules:libs:task:task-handler:task-handler-json-file")
include("modules:libs:task:task-handler:task-handler-local-file")
include("modules:libs:task:task-handler:task-handler-media")
include("modules:libs:task:task-handler:task-handler-mysql")
include("modules:libs:task:task-handler:task-handler-object-helpers")
include("modules:libs:task:task-handler:task-handler-ods-file")
include("modules:libs:task:task-handler:task-handler-postgresql")
include("modules:libs:task:task-handler:task-handler-random")
include("modules:libs:task:task-handler:task-handler-s3")
include("modules:libs:task:task-handler:task-handler-shell")
include("modules:libs:task:task-handler:task-handler-time")
include("modules:libs:task:task-handler:task-handler-transform-json")
include("modules:libs:task:task-handler:task-handler-xlsx-file")
include("modules:libs:task:task-handler:task-handler-xml-file")
include("modules:libs:task:task-handler:task-handler-xml-helpers")
include("modules:libs:task:task-jdbc")
include("modules:libs:task:task-test")
include("modules:libs:test-support")
