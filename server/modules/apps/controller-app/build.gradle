plugins {
    id "org.springframework.boot"
}

group = "com.bytechef.api"
description = ""

apply from: "../../../gradle/docker.gradle"

if (project.hasProperty("prod")) {
    apply from: "../../../gradle/profile_prod.gradle"
} else {
    apply from: "../../../gradle/profile_dev.gradle"
}

compileJava.dependsOn processResources
processResources.dependsOn bootBuildInfo

defaultTasks "bootRun"

springBoot {
    mainClassName = "com.bytechef.ControllerApp"
}

dependencies {
    implementation "org.jobrunr:jobrunr-spring-boot-starter"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-jdbc"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation platform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)
    implementation project(":modules:libs:atlas:atlas-config")
    implementation project(":modules:libs:atlas:atlas-message-broker:atlas-message-broker-amqp")
    implementation project(":modules:libs:atlas:atlas-message-broker:atlas-message-broker-coordinator")
    implementation project(":modules:libs:atlas:atlas-message-broker:atlas-message-broker-kafka")
    implementation project(":modules:libs:atlas:atlas-rest")
    implementation project(":modules:libs:hermes:hermes-encryption:hermes-encryption-config")
    implementation project(":modules:libs:hermes:hermes-auth:hermes-auth-rest")
    implementation project(":modules:libs:hermes:hermes-descriptor:hermes-descriptor-rest")
    implementation project(":modules:libs:hermes:hermes-descriptor:hermes-descriptor-ext:hermes-descriptor-ext-rest")
    implementation project(":modules:libs:hermes:hermes-file-storage:hermes-file-storage-config")
    implementation project(":modules:libs:hermes:hermes-file-storage:hermes-file-storage-job")

    runtimeOnly "org.postgresql:postgresql"

    testImplementation "org.springframework.boot:spring-boot-starter-test"

    testRuntimeOnly "org.postgresql:postgresql"
    testRuntimeOnly "org.testcontainers:postgresql"
}
