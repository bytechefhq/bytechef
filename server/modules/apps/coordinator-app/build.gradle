plugins {
    id "org.springframework.boot"
}

group = "com.bytechef.coordinator"
description = ""

apply from: "../../../gradle/docker.gradle"

if (project.hasProperty("prod")) {
    apply from: "../../../gradle/profile_prod.gradle"
} else {
    apply from: "../../../gradle/profile_dev.gradle"
}

compileJava.dependsOn processResources
processResources.dependsOn bootBuildInfo

defaultTasks "bootRun"

springBoot {
    mainClassName = "com.bytechef.CoordinatorApp"
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-cache"
    implementation "org.springframework.boot:spring-boot-starter-amqp"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-jdbc"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.kafka:spring-kafka"
    implementation platform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)
    implementation project(":modules:libs:atlas:atlas-config")
    implementation project(":modules:libs:atlas:atlas-coordinator:atlas-coordinator-config")
    implementation project(":modules:libs:atlas:atlas-event:atlas-event-impl")
    implementation project(":modules:libs:atlas:atlas-message-broker:atlas-message-broker-amqp")
    implementation project(":modules:libs:atlas:atlas-message-broker:atlas-message-broker-coordinator")
    implementation project(":modules:libs:atlas:atlas-message-broker:atlas-message-broker-kafka")
    implementation project(":modules:libs:hermes:hermes-descriptor:hermes-descriptor-rest")
    implementation project(":modules:libs:hermes:hermes-descriptor:hermes-descriptor-ext:hermes-descriptor-ext-client")
    implementation platform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)
    implementation project(":modules:libs:task:task-dispatcher:task-dispatcher-each")
    implementation project(":modules:libs:task:task-dispatcher:task-dispatcher-fork")
    implementation project(":modules:libs:task:task-dispatcher:task-dispatcher-if")
    implementation project(":modules:libs:task:task-dispatcher:task-dispatcher-loop")
    implementation project(":modules:libs:task:task-dispatcher:task-dispatcher-map")
    implementation project(":modules:libs:task:task-dispatcher:task-dispatcher-parallel")
    implementation project(":modules:libs:task:task-dispatcher:task-dispatcher-sequence")
    implementation project(":modules:libs:task:task-dispatcher:task-dispatcher-subflow")
    implementation project(":modules:libs:task:task-dispatcher:task-dispatcher-switch")

    runtimeOnly "org.postgresql:postgresql"

    testImplementation "org.springframework.boot:spring-boot-starter-test"

    testRuntimeOnly "org.postgresql:postgresql"
    testRuntimeOnly "org.testcontainers:postgresql"
}
