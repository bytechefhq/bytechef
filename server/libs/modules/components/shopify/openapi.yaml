openapi: "3.0.0"
info:
  title: "Shopify Admin API"
  description: "The REST Admin API lets you build apps and other integrations for the Shopify admin."
  version: "2020-10"
paths:
  /admin/oauth/access_scopes.json:
    get:
      summary: "Retrieves a list of access scopes associated to the access token."
      description: "https://shopify.dev/docs/admin-api/rest/reference/access/accessscope#index-2020-10"
      parameters: []
      tags:
        - "access"
        - "accessscope"
        - "access/accessscope"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_admin_oauth_access_scopes"
  /admin/api/2020-01/storefront_access_tokens.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  storefront_access_token:
                    title: "Test"
                summary: "Create a new storefront access token"
              example2:
                value:
                  storefront_access_token:
                    title: "Test"
                summary: "Generating a token for an app that lacks required unauthenticated scopes fails"
              example3:
                value:
                  storefront_access_token:
                    title: "Token"
                summary: "Creating a token after exceeding the limit fails"
      summary: "Creates a new storefront access token"
      description: "https://shopify.dev/docs/admin-api/rest/reference/access/storefrontaccesstoken#create-2020-01"
      parameters: []
      tags:
        - "access"
        - "storefrontaccesstoken"
        - "access/storefrontaccesstoken"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_storefront_access_tokens"
    get:
      summary: "Retrieves a list of storefront access tokens that have been issued"
      description: "https://shopify.dev/docs/admin-api/rest/reference/access/storefrontaccesstoken#index-2020-01"
      parameters: []
      tags:
        - "access"
        - "storefrontaccesstoken"
        - "access/storefrontaccesstoken"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_storefront_access_tokens"
  /admin/api/2020-01/storefront_access_tokens/{storefront_access_token_id}.json:
    delete:
      summary: "Deletes an existing storefront access token"
      description: "https://shopify.dev/docs/admin-api/rest/reference/access/storefrontaccesstoken#destroy-2020-01"
      parameters:
        - in: "path"
          name: "storefront_access_token_id"
          required: true
          schema:
            type: "string"
          description: "storefront_access_token_id"
      tags:
        - "access"
        - "storefrontaccesstoken"
        - "access/storefrontaccesstoken"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_storefront_access_tokens_param_storefront_access_token_id"
  /admin/api/2020-04/storefront_access_tokens.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  storefront_access_token:
                    title: "Test"
                summary: "Create a new storefront access token"
              example2:
                value:
                  storefront_access_token:
                    title: "Test"
                summary: "Generating a token for an app that lacks required unauthenticated scopes fails"
              example3:
                value:
                  storefront_access_token:
                    title: "Token"
                summary: "Creating a token after exceeding the limit fails"
      summary: "Creates a new storefront access token"
      description: "https://shopify.dev/docs/admin-api/rest/reference/access/storefrontaccesstoken#create-2020-04"
      parameters: []
      tags:
        - "access"
        - "storefrontaccesstoken"
        - "access/storefrontaccesstoken"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_storefront_access_tokens"
    get:
      summary: "Retrieves a list of storefront access tokens that have been issued"
      description: "https://shopify.dev/docs/admin-api/rest/reference/access/storefrontaccesstoken#index-2020-04"
      parameters: []
      tags:
        - "access"
        - "storefrontaccesstoken"
        - "access/storefrontaccesstoken"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_storefront_access_tokens"
  /admin/api/2020-04/storefront_access_tokens/{storefront_access_token_id}.json:
    delete:
      summary: "Deletes an existing storefront access token"
      description: "https://shopify.dev/docs/admin-api/rest/reference/access/storefrontaccesstoken#destroy-2020-04"
      parameters:
        - in: "path"
          name: "storefront_access_token_id"
          required: true
          schema:
            type: "string"
          description: "storefront_access_token_id"
      tags:
        - "access"
        - "storefrontaccesstoken"
        - "access/storefrontaccesstoken"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_storefront_access_tokens_param_storefront_access_token_id"
  /admin/api/2020-07/storefront_access_tokens.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  storefront_access_token:
                    title: "Test"
                summary: "Create a new storefront access token"
              example2:
                value:
                  storefront_access_token:
                    title: "Test"
                summary: "Generating a token for an app that lacks required unauthenticated scopes fails"
              example3:
                value:
                  storefront_access_token:
                    title: "Token"
                summary: "Creating a token after exceeding the limit fails"
      summary: "Creates a new storefront access token"
      description: "https://shopify.dev/docs/admin-api/rest/reference/access/storefrontaccesstoken#create-2020-07"
      parameters: []
      tags:
        - "access"
        - "storefrontaccesstoken"
        - "access/storefrontaccesstoken"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_storefront_access_tokens"
    get:
      summary: "Retrieves a list of storefront access tokens that have been issued"
      description: "https://shopify.dev/docs/admin-api/rest/reference/access/storefrontaccesstoken#index-2020-07"
      parameters: []
      tags:
        - "access"
        - "storefrontaccesstoken"
        - "access/storefrontaccesstoken"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_storefront_access_tokens"
  /admin/api/2020-07/storefront_access_tokens/{storefront_access_token_id}.json:
    delete:
      summary: "Deletes an existing storefront access token"
      description: "https://shopify.dev/docs/admin-api/rest/reference/access/storefrontaccesstoken#destroy-2020-07"
      parameters:
        - in: "path"
          name: "storefront_access_token_id"
          required: true
          schema:
            type: "string"
          description: "storefront_access_token_id"
      tags:
        - "access"
        - "storefrontaccesstoken"
        - "access/storefrontaccesstoken"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_storefront_access_tokens_param_storefront_access_token_id"
  /admin/api/2020-10/storefront_access_tokens.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  storefront_access_token:
                    title: "Test"
                summary: "Create a new storefront access token"
              example2:
                value:
                  storefront_access_token:
                    title: "Test"
                summary: "Generating a token for an app that lacks required unauthenticated scopes fails"
              example3:
                value:
                  storefront_access_token:
                    title: "Token"
                summary: "Creating a token after exceeding the limit fails"
      summary: "Creates a new storefront access token"
      description: "https://shopify.dev/docs/admin-api/rest/reference/access/storefrontaccesstoken#create-2020-10"
      parameters: []
      tags:
        - "access"
        - "storefrontaccesstoken"
        - "access/storefrontaccesstoken"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_storefront_access_tokens"
    get:
      summary: "Retrieves a list of storefront access tokens that have been issued"
      description: "https://shopify.dev/docs/admin-api/rest/reference/access/storefrontaccesstoken#index-2020-10"
      parameters: []
      tags:
        - "access"
        - "storefrontaccesstoken"
        - "access/storefrontaccesstoken"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_storefront_access_tokens"
  /admin/api/2020-10/storefront_access_tokens/{storefront_access_token_id}.json:
    delete:
      summary: "Deletes an existing storefront access token"
      description: "https://shopify.dev/docs/admin-api/rest/reference/access/storefrontaccesstoken#destroy-2020-10"
      parameters:
        - in: "path"
          name: "storefront_access_token_id"
          required: true
          schema:
            type: "string"
          description: "storefront_access_token_id"
      tags:
        - "access"
        - "storefrontaccesstoken"
        - "access/storefrontaccesstoken"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_storefront_access_tokens_param_storefront_access_token_id"
  /admin/api/2021-01/storefront_access_tokens.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  storefront_access_token:
                    title: "Test"
                summary: "Create a new storefront access token"
              example2:
                value:
                  storefront_access_token:
                    title: "Test"
                summary: "Generating a token for an app that lacks required unauthenticated scopes fails"
              example3:
                value:
                  storefront_access_token:
                    title: "Token"
                summary: "Creating a token after exceeding the limit fails"
      summary: "Creates a new storefront access token"
      description: "https://shopify.dev/docs/admin-api/rest/reference/access/storefrontaccesstoken#create-2021-01"
      parameters: []
      tags:
        - "access"
        - "storefrontaccesstoken"
        - "access/storefrontaccesstoken"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_storefront_access_tokens"
    get:
      summary: "Retrieves a list of storefront access tokens that have been issued"
      description: "https://shopify.dev/docs/admin-api/rest/reference/access/storefrontaccesstoken#index-2021-01"
      parameters: []
      tags:
        - "access"
        - "storefrontaccesstoken"
        - "access/storefrontaccesstoken"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_storefront_access_tokens"
  /admin/api/2021-01/storefront_access_tokens/{storefront_access_token_id}.json:
    delete:
      summary: "Deletes an existing storefront access token"
      description: "https://shopify.dev/docs/admin-api/rest/reference/access/storefrontaccesstoken#destroy-2021-01"
      parameters:
        - in: "path"
          name: "storefront_access_token_id"
          required: true
          schema:
            type: "string"
          description: "storefront_access_token_id"
      tags:
        - "access"
        - "storefrontaccesstoken"
        - "access/storefrontaccesstoken"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_storefront_access_tokens_param_storefront_access_token_id"
  /admin/api/unstable/storefront_access_tokens.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  storefront_access_token:
                    title: "Test"
                summary: "Create a new storefront access token"
              example2:
                value:
                  storefront_access_token:
                    title: "Test"
                summary: "Generating a token for an app that lacks required unauthenticated scopes fails"
              example3:
                value:
                  storefront_access_token:
                    title: "Token"
                summary: "Creating a token after exceeding the limit fails"
      summary: "Creates a new storefront access token"
      description: "https://shopify.dev/docs/admin-api/rest/reference/access/storefrontaccesstoken#create-unstable"
      parameters: []
      tags:
        - "access"
        - "storefrontaccesstoken"
        - "access/storefrontaccesstoken"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_storefront_access_tokens"
    get:
      summary: "Retrieves a list of storefront access tokens that have been issued"
      description: "https://shopify.dev/docs/admin-api/rest/reference/access/storefrontaccesstoken#index-unstable"
      parameters: []
      tags:
        - "access"
        - "storefrontaccesstoken"
        - "access/storefrontaccesstoken"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_storefront_access_tokens"
  /admin/api/unstable/storefront_access_tokens/{storefront_access_token_id}.json:
    delete:
      summary: "Deletes an existing storefront access token"
      description: "https://shopify.dev/docs/admin-api/rest/reference/access/storefrontaccesstoken#destroy-unstable"
      parameters:
        - in: "path"
          name: "storefront_access_token_id"
          required: true
          schema:
            type: "string"
          description: "storefront_access_token_id"
      tags:
        - "access"
        - "storefrontaccesstoken"
        - "access/storefrontaccesstoken"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_storefront_access_tokens_param_storefront_access_token_id"
  /admin/api/2020-01/reports.json:
    get:
      summary: "Retrieves a list of reports. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#index-2020-01"
      parameters:
        - in: "query"
          name: "ids"
          description: "A comma-separated list of report IDs."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The amount of results to return.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show reports last updated after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show reports last updated before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_reports"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  report:
                    name: "A new app report"
                    shopify_ql: "SHOW total_sales BY order_id FROM sales SINCE -1m UNTIL today ORDER BY total_sales"
                summary: "Create a new report"
      summary: "Creates a new report"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#create-2020-01"
      parameters:
        - in: "query"
          name: "name"
          description: "The name of the report. Maximum length: 255 characters."
          schema: {}
          required: false
        - in: "query"
          name: "shopify_ql"
          description: "The ShopifyQL the report will query."
          schema: {}
          required: false
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_reports"
  /admin/api/2020-01/reports/{report_id}.json:
    get:
      summary: "Retrieves a single report created by your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#show-2020-01"
      parameters:
        - in: "path"
          name: "report_id"
          required: true
          schema:
            type: "string"
          description: "report_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_reports_param_report_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  report:
                    id: 517154478
                    name: "Changed Report Name"
                    shopify_ql: "SHOW total_sales BY order_id FROM sales SINCE -12m UNTIL today ORDER BY total_sales"
                summary: "Update an existing report"
      summary: "Updates a report"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#update-2020-01"
      parameters:
        - in: "path"
          name: "report_id"
          required: true
          schema:
            type: "string"
          description: "report_id"
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_reports_param_report_id"
    delete:
      summary: "Deletes a report"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#destroy-2020-01"
      parameters:
        - in: "path"
          name: "report_id"
          required: true
          schema:
            type: "string"
          description: "report_id"
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_reports_param_report_id"
  /admin/api/2020-04/reports.json:
    get:
      summary: "Retrieves a list of reports. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#index-2020-04"
      parameters:
        - in: "query"
          name: "ids"
          description: "A comma-separated list of report IDs."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The amount of results to return.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show reports last updated after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show reports last updated before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_reports"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  report:
                    name: "A new app report"
                    shopify_ql: "SHOW total_sales BY order_id FROM sales SINCE -1m UNTIL today ORDER BY total_sales"
                summary: "Create a new report"
      summary: "Creates a new report"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#create-2020-04"
      parameters:
        - in: "query"
          name: "name"
          description: "The name of the report. Maximum length: 255 characters."
          schema: {}
          required: false
        - in: "query"
          name: "shopify_ql"
          description: "The ShopifyQL the report will query."
          schema: {}
          required: false
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_reports"
  /admin/api/2020-04/reports/{report_id}.json:
    get:
      summary: "Retrieves a single report created by your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#show-2020-04"
      parameters:
        - in: "path"
          name: "report_id"
          required: true
          schema:
            type: "string"
          description: "report_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_reports_param_report_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  report:
                    id: 517154478
                    name: "Changed Report Name"
                    shopify_ql: "SHOW total_sales BY order_id FROM sales SINCE -12m UNTIL today ORDER BY total_sales"
                summary: "Update an existing report"
      summary: "Updates a report"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#update-2020-04"
      parameters:
        - in: "path"
          name: "report_id"
          required: true
          schema:
            type: "string"
          description: "report_id"
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_reports_param_report_id"
    delete:
      summary: "Deletes a report"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#destroy-2020-04"
      parameters:
        - in: "path"
          name: "report_id"
          required: true
          schema:
            type: "string"
          description: "report_id"
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_reports_param_report_id"
  /admin/api/2020-07/reports.json:
    get:
      summary: "Retrieves a list of reports. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#index-2020-07"
      parameters:
        - in: "query"
          name: "ids"
          description: "A comma-separated list of report IDs."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The amount of results to return.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show reports last updated after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show reports last updated before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_reports"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  report:
                    name: "A new app report"
                    shopify_ql: "SHOW total_sales BY order_id FROM sales SINCE -1m UNTIL today ORDER BY total_sales"
                summary: "Create a new report"
      summary: "Creates a new report"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#create-2020-07"
      parameters:
        - in: "query"
          name: "name"
          description: "The name of the report. Maximum length: 255 characters."
          schema: {}
          required: false
        - in: "query"
          name: "shopify_ql"
          description: "The ShopifyQL the report will query."
          schema: {}
          required: false
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_reports"
  /admin/api/2020-07/reports/{report_id}.json:
    get:
      summary: "Retrieves a single report created by your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#show-2020-07"
      parameters:
        - in: "path"
          name: "report_id"
          required: true
          schema:
            type: "string"
          description: "report_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_reports_param_report_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  report:
                    id: 517154478
                    name: "Changed Report Name"
                    shopify_ql: "SHOW total_sales BY order_id FROM sales SINCE -12m UNTIL today ORDER BY total_sales"
                summary: "Update an existing report"
      summary: "Updates a report"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#update-2020-07"
      parameters:
        - in: "path"
          name: "report_id"
          required: true
          schema:
            type: "string"
          description: "report_id"
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_reports_param_report_id"
    delete:
      summary: "Deletes a report"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#destroy-2020-07"
      parameters:
        - in: "path"
          name: "report_id"
          required: true
          schema:
            type: "string"
          description: "report_id"
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_reports_param_report_id"
  /admin/api/2020-10/reports.json:
    get:
      summary: "Retrieves a list of reports. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#index-2020-10"
      parameters:
        - in: "query"
          name: "ids"
          description: "A comma-separated list of report IDs."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The amount of results to return.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show reports last updated after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show reports last updated before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_reports"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  report:
                    name: "A new app report"
                    shopify_ql: "SHOW total_sales BY order_id FROM sales SINCE -1m UNTIL today ORDER BY total_sales"
                summary: "Create a new report"
      summary: "Creates a new report"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#create-2020-10"
      parameters:
        - in: "query"
          name: "name"
          description: "The name of the report. Maximum length: 255 characters."
          schema: {}
          required: false
        - in: "query"
          name: "shopify_ql"
          description: "The ShopifyQL the report will query."
          schema: {}
          required: false
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_reports"
  /admin/api/2020-10/reports/{report_id}.json:
    get:
      summary: "Retrieves a single report created by your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#show-2020-10"
      parameters:
        - in: "path"
          name: "report_id"
          required: true
          schema:
            type: "string"
          description: "report_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_reports_param_report_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  report:
                    id: 517154478
                    name: "Changed Report Name"
                    shopify_ql: "SHOW total_sales BY order_id FROM sales SINCE -12m UNTIL today ORDER BY total_sales"
                summary: "Update an existing report"
      summary: "Updates a report"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#update-2020-10"
      parameters:
        - in: "path"
          name: "report_id"
          required: true
          schema:
            type: "string"
          description: "report_id"
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_reports_param_report_id"
    delete:
      summary: "Deletes a report"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#destroy-2020-10"
      parameters:
        - in: "path"
          name: "report_id"
          required: true
          schema:
            type: "string"
          description: "report_id"
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_reports_param_report_id"
  /admin/api/2021-01/reports.json:
    get:
      summary: "Retrieves a list of reports. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#index-2021-01"
      parameters:
        - in: "query"
          name: "ids"
          description: "A comma-separated list of report IDs."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The amount of results to return.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show reports last updated after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show reports last updated before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_reports"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  report:
                    name: "A new app report"
                    shopify_ql: "SHOW total_sales BY order_id FROM sales SINCE -1m UNTIL today ORDER BY total_sales"
                summary: "Create a new report"
      summary: "Creates a new report"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#create-2021-01"
      parameters:
        - in: "query"
          name: "name"
          description: "The name of the report. Maximum length: 255 characters."
          schema: {}
          required: false
        - in: "query"
          name: "shopify_ql"
          description: "The ShopifyQL the report will query."
          schema: {}
          required: false
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_reports"
  /admin/api/2021-01/reports/{report_id}.json:
    get:
      summary: "Retrieves a single report created by your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#show-2021-01"
      parameters:
        - in: "path"
          name: "report_id"
          required: true
          schema:
            type: "string"
          description: "report_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_reports_param_report_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  report:
                    id: 517154478
                    name: "Changed Report Name"
                    shopify_ql: "SHOW total_sales BY order_id FROM sales SINCE -12m UNTIL today ORDER BY total_sales"
                summary: "Update an existing report"
      summary: "Updates a report"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#update-2021-01"
      parameters:
        - in: "path"
          name: "report_id"
          required: true
          schema:
            type: "string"
          description: "report_id"
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_reports_param_report_id"
    delete:
      summary: "Deletes a report"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#destroy-2021-01"
      parameters:
        - in: "path"
          name: "report_id"
          required: true
          schema:
            type: "string"
          description: "report_id"
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_reports_param_report_id"
  /admin/api/unstable/reports.json:
    get:
      summary: "Retrieves a list of reports. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#index-unstable"
      parameters:
        - in: "query"
          name: "ids"
          description: "A comma-separated list of report IDs."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The amount of results to return.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show reports last updated after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show reports last updated before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_reports"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  report:
                    name: "A new app report"
                    shopify_ql: "SHOW total_sales BY order_id FROM sales SINCE -1m UNTIL today ORDER BY total_sales"
                summary: "Create a new report"
      summary: "Creates a new report"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#create-unstable"
      parameters:
        - in: "query"
          name: "name"
          description: "The name of the report. Maximum length: 255 characters."
          schema: {}
          required: false
        - in: "query"
          name: "shopify_ql"
          description: "The ShopifyQL the report will query."
          schema: {}
          required: false
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_reports"
  /admin/api/unstable/reports/{report_id}.json:
    get:
      summary: "Retrieves a single report created by your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#show-unstable"
      parameters:
        - in: "path"
          name: "report_id"
          required: true
          schema:
            type: "string"
          description: "report_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_reports_param_report_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  report:
                    id: 517154478
                    name: "Changed Report Name"
                    shopify_ql: "SHOW total_sales BY order_id FROM sales SINCE -12m UNTIL today ORDER BY total_sales"
                summary: "Update an existing report"
      summary: "Updates a report"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#update-unstable"
      parameters:
        - in: "path"
          name: "report_id"
          required: true
          schema:
            type: "string"
          description: "report_id"
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_reports_param_report_id"
    delete:
      summary: "Deletes a report"
      description: "https://shopify.dev/docs/admin-api/rest/reference/analytics/report#destroy-unstable"
      parameters:
        - in: "path"
          name: "report_id"
          required: true
          schema:
            type: "string"
          description: "report_id"
      tags:
        - "analytics"
        - "report"
        - "analytics/report"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_reports_param_report_id"
  /admin/api/2020-01/application_charges.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  application_charge:
                    name: "Super Duper Expensive action"
                    price: 100
                    return_url: "http://super-duper.shopifyapps.com"
                summary: "Create an application charge"
              example2:
                value:
                  application_charge:
                    name: "Super Duper Expensive action"
                    price: 100
                    return_url: "http://super-duper.shopifyapps.com"
                    test: true
                summary: "Create a test charge that will not cause a credit card to be charged"
              example3:
                value:
                  application_charge:
                    name: "Super Duper Expensive action"
                    price: 0.4
                    return_url: "http://super-duper.shopifyapps.com"
                summary: "Trying to create a charge with a price less than 0.50 will return an error"
              example4:
                value:
                  application_charge:
                    name: ""
                summary: "Trying to create a charge without a price or name will return an error"
      summary: "Creates an application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcharge#create-2020-01"
      parameters: []
      tags:
        - "billing"
        - "applicationcharge"
        - "billing/applicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_application_charges"
    get:
      summary: "Retrieves a list of application charges"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcharge#index-2020-01"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcharge"
        - "billing/applicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_application_charges"
  /admin/api/2020-01/application_charges/{application_charge_id}.json:
    get:
      summary: "Retrieves an application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcharge#show-2020-01"
      parameters:
        - in: "path"
          name: "application_charge_id"
          required: true
          schema:
            type: "string"
          description: "application_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcharge"
        - "billing/applicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_application_charges_param_application_charge_id"
  /admin/api/2020-01/application_charges/{application_charge_id}/activate.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  application_charge:
                    id: 675931192
                    name: "iPod Cleaning"
                    api_client_id: 755357713
                    price: "5.00"
                    status: "accepted"
                    return_url: "http://google.com"
                    test: null
                    created_at: "2020-12-07T15:53:44-05:00"
                    updated_at: "2020-12-07T15:53:44-05:00"
                    charge_type: null
                    decorated_return_url: "http://google.com?charge_id=675931192"
                summary: "Activate an application charge"
      summary: "Caution\n  This endpoint is no longer required and is deprecated as of\n  API version 2021-01.\n\n\"Activates an accepted application charge. One-time charges are now immediately activated\nwhen approved by a merchant."
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcharge#activate-2020-01"
      parameters:
        - in: "path"
          name: "application_charge_id"
          required: true
          schema:
            type: "string"
          description: "application_charge_id"
      tags:
        - "billing"
        - "applicationcharge"
        - "billing/applicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_application_charges_param_application_charge_id_activate"
  /admin/api/2020-04/application_charges.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  application_charge:
                    name: "Super Duper Expensive action"
                    price: 100
                    return_url: "http://super-duper.shopifyapps.com"
                summary: "Create an application charge"
              example2:
                value:
                  application_charge:
                    name: "Super Duper Expensive action"
                    price: 100
                    return_url: "http://super-duper.shopifyapps.com"
                    test: true
                summary: "Create a test charge that will not cause a credit card to be charged"
              example3:
                value:
                  application_charge:
                    name: "Super Duper Expensive action"
                    price: 0.4
                    return_url: "http://super-duper.shopifyapps.com"
                summary: "Trying to create a charge with a price less than 0.50 will return an error"
              example4:
                value:
                  application_charge:
                    name: ""
                summary: "Trying to create a charge without a price or name will return an error"
      summary: "Creates an application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcharge#create-2020-04"
      parameters: []
      tags:
        - "billing"
        - "applicationcharge"
        - "billing/applicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_application_charges"
    get:
      summary: "Retrieves a list of application charges"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcharge#index-2020-04"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcharge"
        - "billing/applicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_application_charges"
  /admin/api/2020-04/application_charges/{application_charge_id}.json:
    get:
      summary: "Retrieves an application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcharge#show-2020-04"
      parameters:
        - in: "path"
          name: "application_charge_id"
          required: true
          schema:
            type: "string"
          description: "application_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcharge"
        - "billing/applicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_application_charges_param_application_charge_id"
  /admin/api/2020-04/application_charges/{application_charge_id}/activate.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  application_charge:
                    id: 675931192
                    name: "iPod Cleaning"
                    api_client_id: 755357713
                    price: "5.00"
                    status: "accepted"
                    return_url: "http://google.com"
                    test: null
                    created_at: "2020-12-07T15:53:44-05:00"
                    updated_at: "2020-12-07T15:53:44-05:00"
                    charge_type: null
                    decorated_return_url: "http://google.com?charge_id=675931192"
                summary: "Activate an application charge"
      summary: "Caution\n  This endpoint is no longer required and is deprecated as of\n  API version 2021-01.\n\n\"Activates an accepted application charge. One-time charges are now immediately activated\nwhen approved by a merchant."
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcharge#activate-2020-04"
      parameters:
        - in: "path"
          name: "application_charge_id"
          required: true
          schema:
            type: "string"
          description: "application_charge_id"
      tags:
        - "billing"
        - "applicationcharge"
        - "billing/applicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_application_charges_param_application_charge_id_activate"
  /admin/api/2020-07/application_charges.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  application_charge:
                    name: "Super Duper Expensive action"
                    price: 100
                    return_url: "http://super-duper.shopifyapps.com"
                summary: "Create an application charge"
              example2:
                value:
                  application_charge:
                    name: "Super Duper Expensive action"
                    price: 100
                    return_url: "http://super-duper.shopifyapps.com"
                    test: true
                summary: "Create a test charge that will not cause a credit card to be charged"
              example3:
                value:
                  application_charge:
                    name: "Super Duper Expensive action"
                    price: 0.4
                    return_url: "http://super-duper.shopifyapps.com"
                summary: "Trying to create a charge with a price less than 0.50 will return an error"
              example4:
                value:
                  application_charge:
                    name: ""
                summary: "Trying to create a charge without a price or name will return an error"
      summary: "Creates an application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcharge#create-2020-07"
      parameters: []
      tags:
        - "billing"
        - "applicationcharge"
        - "billing/applicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_application_charges"
    get:
      summary: "Retrieves a list of application charges"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcharge#index-2020-07"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcharge"
        - "billing/applicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_application_charges"
  /admin/api/2020-07/application_charges/{application_charge_id}.json:
    get:
      summary: "Retrieves an application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcharge#show-2020-07"
      parameters:
        - in: "path"
          name: "application_charge_id"
          required: true
          schema:
            type: "string"
          description: "application_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcharge"
        - "billing/applicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_application_charges_param_application_charge_id"
  /admin/api/2020-07/application_charges/{application_charge_id}/activate.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  application_charge:
                    id: 675931192
                    name: "iPod Cleaning"
                    api_client_id: 755357713
                    price: "5.00"
                    status: "accepted"
                    return_url: "http://google.com"
                    test: null
                    created_at: "2020-12-07T15:53:44-05:00"
                    updated_at: "2020-12-07T15:53:44-05:00"
                    charge_type: null
                    decorated_return_url: "http://google.com?charge_id=675931192"
                summary: "Activate an application charge"
      summary: "Caution\n  This endpoint is no longer required and is deprecated as of\n  API version 2021-01.\n\n\"Activates an accepted application charge. One-time charges are now immediately activated\nwhen approved by a merchant."
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcharge#activate-2020-07"
      parameters:
        - in: "path"
          name: "application_charge_id"
          required: true
          schema:
            type: "string"
          description: "application_charge_id"
      tags:
        - "billing"
        - "applicationcharge"
        - "billing/applicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_application_charges_param_application_charge_id_activate"
  /admin/api/2020-10/application_charges.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  application_charge:
                    name: "Super Duper Expensive action"
                    price: 100
                    return_url: "http://super-duper.shopifyapps.com"
                summary: "Create an application charge"
              example2:
                value:
                  application_charge:
                    name: "Super Duper Expensive action"
                    price: 100
                    return_url: "http://super-duper.shopifyapps.com"
                    test: true
                summary: "Create a test charge that will not cause a credit card to be charged"
              example3:
                value:
                  application_charge:
                    name: "Super Duper Expensive action"
                    price: 0.4
                    return_url: "http://super-duper.shopifyapps.com"
                summary: "Trying to create a charge with a price less than 0.50 will return an error"
              example4:
                value:
                  application_charge:
                    name: ""
                summary: "Trying to create a charge without a price or name will return an error"
      summary: "Creates an application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcharge#create-2020-10"
      parameters: []
      tags:
        - "billing"
        - "applicationcharge"
        - "billing/applicationcharge"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_application_charges"
    get:
      summary: "Retrieves a list of application charges"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcharge#index-2020-10"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcharge"
        - "billing/applicationcharge"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_application_charges"
  /admin/api/2020-10/application_charges/{application_charge_id}.json:
    get:
      summary: "Retrieves an application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcharge#show-2020-10"
      parameters:
        - in: "path"
          name: "application_charge_id"
          required: true
          schema:
            type: "string"
          description: "application_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcharge"
        - "billing/applicationcharge"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_application_charges_param_application_charge_id"
  /admin/api/2020-10/application_charges/{application_charge_id}/activate.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  application_charge:
                    id: 675931192
                    name: "iPod Cleaning"
                    api_client_id: 755357713
                    price: "5.00"
                    status: "accepted"
                    return_url: "http://google.com"
                    test: null
                    created_at: "2020-12-07T15:53:44-05:00"
                    updated_at: "2020-12-07T15:53:44-05:00"
                    charge_type: null
                    decorated_return_url: "http://google.com?charge_id=675931192"
                summary: "Activate an application charge"
      summary: "Caution\n  This endpoint is no longer required and is deprecated as of\n  API version 2021-01.\n\n\"Activates an accepted application charge. One-time charges are now immediately activated\nwhen approved by a merchant."
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcharge#activate-2020-10"
      parameters:
        - in: "path"
          name: "application_charge_id"
          required: true
          schema:
            type: "string"
          description: "application_charge_id"
      tags:
        - "billing"
        - "applicationcharge"
        - "billing/applicationcharge"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_application_charges_param_application_charge_id_activate"
  /admin/api/2021-01/application_charges.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  application_charge:
                    name: "Super Duper Expensive action"
                    price: 100
                    return_url: "http://super-duper.shopifyapps.com"
                summary: "Create an application charge"
              example2:
                value:
                  application_charge:
                    name: "Super Duper Expensive action"
                    price: 100
                    return_url: "http://super-duper.shopifyapps.com"
                    test: true
                summary: "Create a test charge that will not cause a credit card to be charged"
              example3:
                value:
                  application_charge:
                    name: "Super Duper Expensive action"
                    price: 0.4
                    return_url: "http://super-duper.shopifyapps.com"
                summary: "Trying to create a charge with a price less than 0.50 will return an error"
              example4:
                value:
                  application_charge:
                    name: ""
                summary: "Trying to create a charge without a price or name will return an error"
      summary: "Creates an application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcharge#create-2021-01"
      parameters: []
      tags:
        - "billing"
        - "applicationcharge"
        - "billing/applicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_application_charges"
    get:
      summary: "Retrieves a list of application charges"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcharge#index-2021-01"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcharge"
        - "billing/applicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_application_charges"
  /admin/api/2021-01/application_charges/{application_charge_id}.json:
    get:
      summary: "Retrieves an application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcharge#show-2021-01"
      parameters:
        - in: "path"
          name: "application_charge_id"
          required: true
          schema:
            type: "string"
          description: "application_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcharge"
        - "billing/applicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_application_charges_param_application_charge_id"
  /admin/api/unstable/application_charges.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  application_charge:
                    name: "Super Duper Expensive action"
                    price: 100
                    return_url: "http://super-duper.shopifyapps.com"
                summary: "Create an application charge"
              example2:
                value:
                  application_charge:
                    name: "Super Duper Expensive action"
                    price: 100
                    return_url: "http://super-duper.shopifyapps.com"
                    test: true
                summary: "Create a test charge that will not cause a credit card to be charged"
              example3:
                value:
                  application_charge:
                    name: "Super Duper Expensive action"
                    price: 0.4
                    return_url: "http://super-duper.shopifyapps.com"
                summary: "Trying to create a charge with a price less than 0.50 will return an error"
              example4:
                value:
                  application_charge:
                    name: ""
                summary: "Trying to create a charge without a price or name will return an error"
      summary: "Creates an application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcharge#create-unstable"
      parameters: []
      tags:
        - "billing"
        - "applicationcharge"
        - "billing/applicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_application_charges"
    get:
      summary: "Retrieves a list of application charges"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcharge#index-unstable"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcharge"
        - "billing/applicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_application_charges"
  /admin/api/unstable/application_charges/{application_charge_id}.json:
    get:
      summary: "Retrieves an application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcharge#show-unstable"
      parameters:
        - in: "path"
          name: "application_charge_id"
          required: true
          schema:
            type: "string"
          description: "application_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcharge"
        - "billing/applicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_application_charges_param_application_charge_id"
  /admin/api/2020-01/application_credits.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Create a new credit"
              example2:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                    test: true
                summary: "Create a test application credit that will not issue a credit to the merchant"
              example3:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Creating a credit amount that exceeds shop owner purchases over last 30 days will return an error"
              example4:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Applying a credit to a shop without a previous app purchase will return an error"
              example5:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Creating a credit amount that exceeds the total pending payouts for the app will return an error"
      summary: "Creates an application credit"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcredit#create-2020-01"
      parameters: []
      tags:
        - "billing"
        - "applicationcredit"
        - "billing/applicationcredit"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_application_credits"
    get:
      summary: "Retrieves all application credits"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcredit#index-2020-01"
      parameters:
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcredit"
        - "billing/applicationcredit"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_application_credits"
  /admin/api/2020-01/application_credits/{application_credit_id}.json:
    get:
      summary: "Retrieves a single application credit"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcredit#show-2020-01"
      parameters:
        - in: "path"
          name: "application_credit_id"
          required: true
          schema:
            type: "string"
          description: "application_credit_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcredit"
        - "billing/applicationcredit"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_application_credits_param_application_credit_id"
  /admin/api/2020-04/application_credits.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Create a new credit"
              example2:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                    test: true
                summary: "Create a test application credit that will not issue a credit to the merchant"
              example3:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Creating a credit amount that exceeds shop owner purchases over last 30 days will return an error"
              example4:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Applying a credit to a shop without a previous app purchase will return an error"
              example5:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Creating a credit amount that exceeds the total pending payouts for the app will return an error"
      summary: "Creates an application credit"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcredit#create-2020-04"
      parameters: []
      tags:
        - "billing"
        - "applicationcredit"
        - "billing/applicationcredit"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_application_credits"
    get:
      summary: "Retrieves all application credits"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcredit#index-2020-04"
      parameters:
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcredit"
        - "billing/applicationcredit"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_application_credits"
  /admin/api/2020-04/application_credits/{application_credit_id}.json:
    get:
      summary: "Retrieves a single application credit"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcredit#show-2020-04"
      parameters:
        - in: "path"
          name: "application_credit_id"
          required: true
          schema:
            type: "string"
          description: "application_credit_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcredit"
        - "billing/applicationcredit"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_application_credits_param_application_credit_id"
  /admin/api/2020-07/application_credits.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Create a new credit"
              example2:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                    test: true
                summary: "Create a test application credit that will not issue a credit to the merchant"
              example3:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Creating a credit amount that exceeds shop owner purchases over last 30 days will return an error"
              example4:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Applying a credit to a shop without a previous app purchase will return an error"
              example5:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Creating a credit amount that exceeds the total pending payouts for the app will return an error"
      summary: "Creates an application credit"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcredit#create-2020-07"
      parameters: []
      tags:
        - "billing"
        - "applicationcredit"
        - "billing/applicationcredit"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_application_credits"
    get:
      summary: "Retrieves all application credits"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcredit#index-2020-07"
      parameters:
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcredit"
        - "billing/applicationcredit"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_application_credits"
  /admin/api/2020-07/application_credits/{application_credit_id}.json:
    get:
      summary: "Retrieves a single application credit"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcredit#show-2020-07"
      parameters:
        - in: "path"
          name: "application_credit_id"
          required: true
          schema:
            type: "string"
          description: "application_credit_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcredit"
        - "billing/applicationcredit"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_application_credits_param_application_credit_id"
  /admin/api/2020-10/application_credits.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Create a new credit"
              example2:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                    test: true
                summary: "Create a test application credit that will not issue a credit to the merchant"
              example3:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Creating a credit amount that exceeds shop owner purchases over last 30 days will return an error"
              example4:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Applying a credit to a shop without a previous app purchase will return an error"
              example5:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Creating a credit amount that exceeds the total pending payouts for the app will return an error"
      summary: "Creates an application credit"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcredit#create-2020-10"
      parameters: []
      tags:
        - "billing"
        - "applicationcredit"
        - "billing/applicationcredit"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_application_credits"
    get:
      summary: "Retrieves all application credits"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcredit#index-2020-10"
      parameters:
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcredit"
        - "billing/applicationcredit"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_application_credits"
  /admin/api/2020-10/application_credits/{application_credit_id}.json:
    get:
      summary: "Retrieves a single application credit"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcredit#show-2020-10"
      parameters:
        - in: "path"
          name: "application_credit_id"
          required: true
          schema:
            type: "string"
          description: "application_credit_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcredit"
        - "billing/applicationcredit"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_application_credits_param_application_credit_id"
  /admin/api/2021-01/application_credits.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Create a new credit"
              example2:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                    test: true
                summary: "Create a test application credit that will not issue a credit to the merchant"
              example3:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Creating a credit amount that exceeds shop owner purchases over last 30 days will return an error"
              example4:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Applying a credit to a shop without a previous app purchase will return an error"
              example5:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Creating a credit amount that exceeds the total pending payouts for the app will return an error"
      summary: "Creates an application credit"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcredit#create-2021-01"
      parameters: []
      tags:
        - "billing"
        - "applicationcredit"
        - "billing/applicationcredit"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_application_credits"
    get:
      summary: "Retrieves all application credits"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcredit#index-2021-01"
      parameters:
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcredit"
        - "billing/applicationcredit"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_application_credits"
  /admin/api/2021-01/application_credits/{application_credit_id}.json:
    get:
      summary: "Retrieves a single application credit"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcredit#show-2021-01"
      parameters:
        - in: "path"
          name: "application_credit_id"
          required: true
          schema:
            type: "string"
          description: "application_credit_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcredit"
        - "billing/applicationcredit"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_application_credits_param_application_credit_id"
  /admin/api/unstable/application_credits.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Create a new credit"
              example2:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                    test: true
                summary: "Create a test application credit that will not issue a credit to the merchant"
              example3:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Creating a credit amount that exceeds shop owner purchases over last 30 days will return an error"
              example4:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Applying a credit to a shop without a previous app purchase will return an error"
              example5:
                value:
                  application_credit:
                    description: "application credit for refund"
                    amount: 5
                summary: "Creating a credit amount that exceeds the total pending payouts for the app will return an error"
      summary: "Creates an application credit"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcredit#create-unstable"
      parameters: []
      tags:
        - "billing"
        - "applicationcredit"
        - "billing/applicationcredit"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_application_credits"
    get:
      summary: "Retrieves all application credits"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcredit#index-unstable"
      parameters:
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcredit"
        - "billing/applicationcredit"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_application_credits"
  /admin/api/unstable/application_credits/{application_credit_id}.json:
    get:
      summary: "Retrieves a single application credit"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/applicationcredit#show-unstable"
      parameters:
        - in: "path"
          name: "application_credit_id"
          required: true
          schema:
            type: "string"
          description: "application_credit_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "applicationcredit"
        - "billing/applicationcredit"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_application_credits_param_application_credit_id"
  /admin/api/2020-01/recurring_application_charges.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                summary: "Create a recurring application charge"
              example2:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                    capped_amount: 100
                    terms: "$1 for 1000 emails"
                summary: "Create a new charge with terms and a capped amount"
              example3:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                    trial_days: 5
                summary: "Create a new charge with a trial period. The trial period will go into effect at the time the recurring charge is activated."
              example4:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                    test: true
                summary: "Create a recurring test charge that will not cause a credit card to be charged"
              example5:
                value:
                  recurring_application_charge:
                    name: ""
                summary: "Trying to create a charge without a price and name will return an error"
      summary: "Creates a recurring application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#create-2020-01"
      parameters: []
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_recurring_application_charges"
    get:
      summary: "Retrieves a list of recurring application charges"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#index-2020-01"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_recurring_application_charges"
  /admin/api/2020-01/recurring_application_charges/{recurring_application_charge_id}.json:
    get:
      summary: "Retrieves a single charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#show-2020-01"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_recurring_application_charges_param_recurring_application_charge_id"
    delete:
      summary: "Cancels a recurring application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#destroy-2020-01"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_recurring_application_charges_param_recurring_application_charge_id"
  /admin/api/2020-01/recurring_application_charges/{recurring_application_charge_id}/activate.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  recurring_application_charge:
                    id: 455696195
                    name: "Super Mega Plan"
                    api_client_id: 755357713
                    price: "15.00"
                    status: "accepted"
                    return_url: "http://yourapp.com"
                    billing_on: "2020-12-07"
                    created_at: "2020-12-07T15:53:44-05:00"
                    updated_at: "2020-12-06T19:00:00-05:00"
                    test: null
                    activated_on: null
                    cancelled_on: null
                    trial_days: 0
                    trial_ends_on: null
                    decorated_return_url: "http://yourapp.com?charge_id=455696195"
                summary: "Activate a recurring application charge"
      summary: "Caution\n  This endpoint is no longer required and is deprecated as of\n  API version 2021-01.\n\nActivates a previously accepted recurring application charge. Recurring charges are now\nimmediately activated when approved by a merchant."
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#activate-2020-01"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_recurring_application_charges_param_recurring_application_charge_id_activate"
  /admin/api/2020-01/recurring_application_charges/{recurring_application_charge_id}/customize.json:
    put:
      summary: "Updates the capped amount of an active recurring application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#customize-2020-01"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "query"
          name: "recurring_application_charge[capped_amount]"
          schema:
            type: "integer"
          description: "recurring_application_charge[capped_amount]"
          required: false
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_recurring_application_charges_param_recurring_application_charge_id_customize"
  /admin/api/2020-04/recurring_application_charges.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                summary: "Create a recurring application charge"
              example2:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                    capped_amount: 100
                    terms: "$1 for 1000 emails"
                summary: "Create a new charge with terms and a capped amount"
              example3:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                    trial_days: 5
                summary: "Create a new charge with a trial period. The trial period will go into effect at the time the recurring charge is activated."
              example4:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                    test: true
                summary: "Create a recurring test charge that will not cause a credit card to be charged"
              example5:
                value:
                  recurring_application_charge:
                    name: ""
                summary: "Trying to create a charge without a price and name will return an error"
      summary: "Creates a recurring application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#create-2020-04"
      parameters: []
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_recurring_application_charges"
    get:
      summary: "Retrieves a list of recurring application charges"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#index-2020-04"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_recurring_application_charges"
  /admin/api/2020-04/recurring_application_charges/{recurring_application_charge_id}.json:
    get:
      summary: "Retrieves a single charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#show-2020-04"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_recurring_application_charges_param_recurring_application_charge_id"
    delete:
      summary: "Cancels a recurring application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#destroy-2020-04"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_recurring_application_charges_param_recurring_application_charge_id"
  /admin/api/2020-04/recurring_application_charges/{recurring_application_charge_id}/activate.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  recurring_application_charge:
                    id: 455696195
                    name: "Super Mega Plan"
                    api_client_id: 755357713
                    price: "15.00"
                    status: "accepted"
                    return_url: "http://yourapp.com"
                    billing_on: "2020-12-07"
                    created_at: "2020-12-07T15:53:44-05:00"
                    updated_at: "2020-12-06T19:00:00-05:00"
                    test: null
                    activated_on: null
                    cancelled_on: null
                    trial_days: 0
                    trial_ends_on: null
                    decorated_return_url: "http://yourapp.com?charge_id=455696195"
                summary: "Activate a recurring application charge"
      summary: "Caution\n  This endpoint is no longer required and is deprecated as of\n  API version 2021-01.\n\nActivates a previously accepted recurring application charge. Recurring charges are now\nimmediately activated when approved by a merchant."
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#activate-2020-04"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_recurring_application_charges_param_recurring_application_charge_id_activate"
  /admin/api/2020-04/recurring_application_charges/{recurring_application_charge_id}/customize.json:
    put:
      summary: "Updates the capped amount of an active recurring application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#customize-2020-04"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "query"
          name: "recurring_application_charge[capped_amount]"
          schema:
            type: "integer"
          description: "recurring_application_charge[capped_amount]"
          required: false
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_recurring_application_charges_param_recurring_application_charge_id_customize"
  /admin/api/2020-07/recurring_application_charges.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                summary: "Create a recurring application charge"
              example2:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                    capped_amount: 100
                    terms: "$1 for 1000 emails"
                summary: "Create a new charge with terms and a capped amount"
              example3:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                    trial_days: 5
                summary: "Create a new charge with a trial period. The trial period will go into effect at the time the recurring charge is activated."
              example4:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                    test: true
                summary: "Create a recurring test charge that will not cause a credit card to be charged"
              example5:
                value:
                  recurring_application_charge:
                    name: ""
                summary: "Trying to create a charge without a price and name will return an error"
      summary: "Creates a recurring application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#create-2020-07"
      parameters: []
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_recurring_application_charges"
    get:
      summary: "Retrieves a list of recurring application charges"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#index-2020-07"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_recurring_application_charges"
  /admin/api/2020-07/recurring_application_charges/{recurring_application_charge_id}.json:
    get:
      summary: "Retrieves a single charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#show-2020-07"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_recurring_application_charges_param_recurring_application_charge_id"
    delete:
      summary: "Cancels a recurring application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#destroy-2020-07"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_recurring_application_charges_param_recurring_application_charge_id"
  /admin/api/2020-07/recurring_application_charges/{recurring_application_charge_id}/activate.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  recurring_application_charge:
                    id: 455696195
                    name: "Super Mega Plan"
                    api_client_id: 755357713
                    price: "15.00"
                    status: "accepted"
                    return_url: "http://yourapp.com"
                    billing_on: "2020-12-07"
                    created_at: "2020-12-07T15:53:44-05:00"
                    updated_at: "2020-12-06T19:00:00-05:00"
                    test: null
                    activated_on: null
                    cancelled_on: null
                    trial_days: 0
                    trial_ends_on: null
                    decorated_return_url: "http://yourapp.com?charge_id=455696195"
                summary: "Activate a recurring application charge"
      summary: "Caution\n  This endpoint is no longer required and is deprecated as of\n  API version 2021-01.\n\nActivates a previously accepted recurring application charge. Recurring charges are now\nimmediately activated when approved by a merchant."
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#activate-2020-07"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_recurring_application_charges_param_recurring_application_charge_id_activate"
  /admin/api/2020-07/recurring_application_charges/{recurring_application_charge_id}/customize.json:
    put:
      summary: "Updates the capped amount of an active recurring application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#customize-2020-07"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "query"
          name: "recurring_application_charge[capped_amount]"
          schema:
            type: "integer"
          description: "recurring_application_charge[capped_amount]"
          required: false
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_recurring_application_charges_param_recurring_application_charge_id_customize"
  /admin/api/2020-10/recurring_application_charges.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                summary: "Create a recurring application charge"
              example2:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                    capped_amount: 100
                    terms: "$1 for 1000 emails"
                summary: "Create a new charge with terms and a capped amount"
              example3:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                    trial_days: 5
                summary: "Create a new charge with a trial period. The trial period will go into effect at the time the recurring charge is activated."
              example4:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                    test: true
                summary: "Create a recurring test charge that will not cause a credit card to be charged"
              example5:
                value:
                  recurring_application_charge:
                    name: ""
                summary: "Trying to create a charge without a price and name will return an error"
      summary: "Creates a recurring application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#create-2020-10"
      parameters: []
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_recurring_application_charges"
    get:
      summary: "Retrieves a list of recurring application charges"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#index-2020-10"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_recurring_application_charges"
  /admin/api/2020-10/recurring_application_charges/{recurring_application_charge_id}.json:
    get:
      summary: "Retrieves a single charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#show-2020-10"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_recurring_application_charges_param_recurring_application_charge_id"
    delete:
      summary: "Cancels a recurring application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#destroy-2020-10"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_recurring_application_charges_param_recurring_application_charge_id"
  /admin/api/2020-10/recurring_application_charges/{recurring_application_charge_id}/activate.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  recurring_application_charge:
                    id: 455696195
                    name: "Super Mega Plan"
                    api_client_id: 755357713
                    price: "15.00"
                    status: "accepted"
                    return_url: "http://yourapp.com"
                    billing_on: "2020-12-07"
                    created_at: "2020-12-07T15:53:44-05:00"
                    updated_at: "2020-12-06T19:00:00-05:00"
                    test: null
                    activated_on: null
                    cancelled_on: null
                    trial_days: 0
                    trial_ends_on: null
                    decorated_return_url: "http://yourapp.com?charge_id=455696195"
                summary: "Activate a recurring application charge"
      summary: "Caution\n  This endpoint is no longer required and is deprecated as of\n  API version 2021-01.\n\nActivates a previously accepted recurring application charge. Recurring charges are now\nimmediately activated when approved by a merchant."
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#activate-2020-10"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_recurring_application_charges_param_recurring_application_charge_id_activate"
  /admin/api/2020-10/recurring_application_charges/{recurring_application_charge_id}/customize.json:
    put:
      summary: "Updates the capped amount of an active recurring application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#customize-2020-10"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "query"
          name: "recurring_application_charge[capped_amount]"
          schema:
            type: "integer"
          description: "recurring_application_charge[capped_amount]"
          required: false
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_recurring_application_charges_param_recurring_application_charge_id_customize"
  /admin/api/2021-01/recurring_application_charges.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                summary: "Create a recurring application charge"
              example2:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                    capped_amount: 100
                    terms: "$1 for 1000 emails"
                summary: "Create a new charge with terms and a capped amount"
              example3:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                    trial_days: 5
                summary: "Create a new charge with a trial period. The trial period will go into effect at the time the recurring charge is activated."
              example4:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                    test: true
                summary: "Create a recurring test charge that will not cause a credit card to be charged"
              example5:
                value:
                  recurring_application_charge:
                    name: ""
                summary: "Trying to create a charge without a price and name will return an error"
      summary: "Creates a recurring application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#create-2021-01"
      parameters: []
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_recurring_application_charges"
    get:
      summary: "Retrieves a list of recurring application charges"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#index-2021-01"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_recurring_application_charges"
  /admin/api/2021-01/recurring_application_charges/{recurring_application_charge_id}.json:
    get:
      summary: "Retrieves a single charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#show-2021-01"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_recurring_application_charges_param_recurring_application_charge_id"
    delete:
      summary: "Cancels a recurring application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#destroy-2021-01"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_recurring_application_charges_param_recurring_application_charge_id"
  /admin/api/2021-01/recurring_application_charges/{recurring_application_charge_id}/customize.json:
    put:
      summary: "Updates the capped amount of an active recurring application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#customize-2021-01"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "query"
          name: "recurring_application_charge[capped_amount]"
          schema:
            type: "integer"
          description: "recurring_application_charge[capped_amount]"
          required: false
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_recurring_application_charges_param_recurring_application_charge_id_customize"
  /admin/api/unstable/recurring_application_charges.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                summary: "Create a recurring application charge"
              example2:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                    capped_amount: 100
                    terms: "$1 for 1000 emails"
                summary: "Create a new charge with terms and a capped amount"
              example3:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                    trial_days: 5
                summary: "Create a new charge with a trial period. The trial period will go into effect at the time the recurring charge is activated."
              example4:
                value:
                  recurring_application_charge:
                    name: "Super Duper Plan"
                    price: 10
                    return_url: "http://super-duper.shopifyapps.com"
                    test: true
                summary: "Create a recurring test charge that will not cause a credit card to be charged"
              example5:
                value:
                  recurring_application_charge:
                    name: ""
                summary: "Trying to create a charge without a price and name will return an error"
      summary: "Creates a recurring application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#create-unstable"
      parameters: []
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_recurring_application_charges"
    get:
      summary: "Retrieves a list of recurring application charges"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#index-unstable"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_recurring_application_charges"
  /admin/api/unstable/recurring_application_charges/{recurring_application_charge_id}.json:
    get:
      summary: "Retrieves a single charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#show-unstable"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_recurring_application_charges_param_recurring_application_charge_id"
    delete:
      summary: "Cancels a recurring application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#destroy-unstable"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_recurring_application_charges_param_recurring_application_charge_id"
  /admin/api/unstable/recurring_application_charges/{recurring_application_charge_id}/customize.json:
    put:
      summary: "Updates the capped amount of an active recurring application charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/recurringapplicationcharge#customize-unstable"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "query"
          name: "recurring_application_charge[capped_amount]"
          schema:
            type: "integer"
          description: "recurring_application_charge[capped_amount]"
          required: false
      tags:
        - "billing"
        - "recurringapplicationcharge"
        - "billing/recurringapplicationcharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_recurring_application_charges_param_recurring_application_charge_id_customize"
  /admin/api/2020-01/recurring_application_charges/{recurring_application_charge_id}/usage_charges.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  usage_charge:
                    description: "Super Mega Plan 1000 emails"
                    price: 1
                summary: "Create a new usage charge"
              example2:
                value:
                  usage_charge:
                    description: ""
                summary: "Trying to create a charge without a price and description will return an error"
      summary: "Creates a usage charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/usagecharge#create-2020-01"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
      tags:
        - "billing"
        - "usagecharge"
        - "billing/usagecharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_recurring_application_charges_param_recurring_application_charge_id_usage_charges"
    get:
      summary: "Retrieves a list of usage charges"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/usagecharge#index-2020-01"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "usagecharge"
        - "billing/usagecharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_recurring_application_charges_param_recurring_application_charge_id_usage_charges"
  /admin/api/2020-01/recurring_application_charges/{recurring_application_charge_id}/usage_charges/{usage_charge_id}.json:
    get:
      summary: "Retrieves a single charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/usagecharge#show-2020-01"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "path"
          name: "usage_charge_id"
          required: true
          schema:
            type: "string"
          description: "usage_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "usagecharge"
        - "billing/usagecharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_recurring_application_charges_param_recurring_application_charge_id_usage_charges_param_usage_charge_id"
  /admin/api/2020-04/recurring_application_charges/{recurring_application_charge_id}/usage_charges.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  usage_charge:
                    description: "Super Mega Plan 1000 emails"
                    price: 1
                summary: "Create a new usage charge"
              example2:
                value:
                  usage_charge:
                    description: ""
                summary: "Trying to create a charge without a price and description will return an error"
      summary: "Creates a usage charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/usagecharge#create-2020-04"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
      tags:
        - "billing"
        - "usagecharge"
        - "billing/usagecharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_recurring_application_charges_param_recurring_application_charge_id_usage_charges"
    get:
      summary: "Retrieves a list of usage charges"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/usagecharge#index-2020-04"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "usagecharge"
        - "billing/usagecharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_recurring_application_charges_param_recurring_application_charge_id_usage_charges"
  /admin/api/2020-04/recurring_application_charges/{recurring_application_charge_id}/usage_charges/{usage_charge_id}.json:
    get:
      summary: "Retrieves a single charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/usagecharge#show-2020-04"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "path"
          name: "usage_charge_id"
          required: true
          schema:
            type: "string"
          description: "usage_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "usagecharge"
        - "billing/usagecharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_recurring_application_charges_param_recurring_application_charge_id_usage_charges_param_usage_charge_id"
  /admin/api/2020-07/recurring_application_charges/{recurring_application_charge_id}/usage_charges.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  usage_charge:
                    description: "Super Mega Plan 1000 emails"
                    price: 1
                summary: "Create a new usage charge"
              example2:
                value:
                  usage_charge:
                    description: ""
                summary: "Trying to create a charge without a price and description will return an error"
      summary: "Creates a usage charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/usagecharge#create-2020-07"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
      tags:
        - "billing"
        - "usagecharge"
        - "billing/usagecharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_recurring_application_charges_param_recurring_application_charge_id_usage_charges"
    get:
      summary: "Retrieves a list of usage charges"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/usagecharge#index-2020-07"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "usagecharge"
        - "billing/usagecharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_recurring_application_charges_param_recurring_application_charge_id_usage_charges"
  /admin/api/2020-07/recurring_application_charges/{recurring_application_charge_id}/usage_charges/{usage_charge_id}.json:
    get:
      summary: "Retrieves a single charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/usagecharge#show-2020-07"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "path"
          name: "usage_charge_id"
          required: true
          schema:
            type: "string"
          description: "usage_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "usagecharge"
        - "billing/usagecharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_recurring_application_charges_param_recurring_application_charge_id_usage_charges_param_usage_charge_id"
  /admin/api/2020-10/recurring_application_charges/{recurring_application_charge_id}/usage_charges.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  usage_charge:
                    description: "Super Mega Plan 1000 emails"
                    price: 1
                summary: "Create a new usage charge"
              example2:
                value:
                  usage_charge:
                    description: ""
                summary: "Trying to create a charge without a price and description will return an error"
      summary: "Creates a usage charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/usagecharge#create-2020-10"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
      tags:
        - "billing"
        - "usagecharge"
        - "billing/usagecharge"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_recurring_application_charges_param_recurring_application_charge_id_usage_charges"
    get:
      summary: "Retrieves a list of usage charges"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/usagecharge#index-2020-10"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "usagecharge"
        - "billing/usagecharge"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_recurring_application_charges_param_recurring_application_charge_id_usage_charges"
  /admin/api/2020-10/recurring_application_charges/{recurring_application_charge_id}/usage_charges/{usage_charge_id}.json:
    get:
      summary: "Retrieves a single charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/usagecharge#show-2020-10"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "path"
          name: "usage_charge_id"
          required: true
          schema:
            type: "string"
          description: "usage_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "usagecharge"
        - "billing/usagecharge"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_recurring_application_charges_param_recurring_application_charge_id_usage_charges_param_usage_charge_id"
  /admin/api/2021-01/recurring_application_charges/{recurring_application_charge_id}/usage_charges.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  usage_charge:
                    description: "Super Mega Plan 1000 emails"
                    price: 1
                summary: "Create a new usage charge"
              example2:
                value:
                  usage_charge:
                    description: ""
                summary: "Trying to create a charge without a price and description will return an error"
      summary: "Creates a usage charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/usagecharge#create-2021-01"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
      tags:
        - "billing"
        - "usagecharge"
        - "billing/usagecharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_recurring_application_charges_param_recurring_application_charge_id_usage_charges"
    get:
      summary: "Retrieves a list of usage charges"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/usagecharge#index-2021-01"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "usagecharge"
        - "billing/usagecharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_recurring_application_charges_param_recurring_application_charge_id_usage_charges"
  /admin/api/2021-01/recurring_application_charges/{recurring_application_charge_id}/usage_charges/{usage_charge_id}.json:
    get:
      summary: "Retrieves a single charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/usagecharge#show-2021-01"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "path"
          name: "usage_charge_id"
          required: true
          schema:
            type: "string"
          description: "usage_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "usagecharge"
        - "billing/usagecharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_recurring_application_charges_param_recurring_application_charge_id_usage_charges_param_usage_charge_id"
  /admin/api/unstable/recurring_application_charges/{recurring_application_charge_id}/usage_charges.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  usage_charge:
                    description: "Super Mega Plan 1000 emails"
                    price: 1
                summary: "Create a new usage charge"
              example2:
                value:
                  usage_charge:
                    description: ""
                summary: "Trying to create a charge without a price and description will return an error"
      summary: "Creates a usage charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/usagecharge#create-unstable"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
      tags:
        - "billing"
        - "usagecharge"
        - "billing/usagecharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_recurring_application_charges_param_recurring_application_charge_id_usage_charges"
    get:
      summary: "Retrieves a list of usage charges"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/usagecharge#index-unstable"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "usagecharge"
        - "billing/usagecharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_recurring_application_charges_param_recurring_application_charge_id_usage_charges"
  /admin/api/unstable/recurring_application_charges/{recurring_application_charge_id}/usage_charges/{usage_charge_id}.json:
    get:
      summary: "Retrieves a single charge"
      description: "https://shopify.dev/docs/admin-api/rest/reference/billing/usagecharge#show-unstable"
      parameters:
        - in: "path"
          name: "recurring_application_charge_id"
          required: true
          schema:
            type: "string"
          description: "recurring_application_charge_id"
        - in: "path"
          name: "usage_charge_id"
          required: true
          schema:
            type: "string"
          description: "usage_charge_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "billing"
        - "usagecharge"
        - "billing/usagecharge"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_recurring_application_charges_param_recurring_application_charge_id_usage_charges_param_usage_charge_id"
  /admin/api/2020-01/customers.json:
    get:
      summary: "Retrieves a list of customers. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#index-2020-01"
      parameters:
        - in: "query"
          name: "ids"
          description: "Restrict results to customers specified by a comma-separated list of IDs."
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to those after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show customers created after a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show customers created before a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show customers last updated after a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show customers last updated before a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_customers"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                summary: "Create a new customer record"
              example2:
                value:
                  customer:
                    email: null
                    first_name: null
                    last_name: null
                summary: "Creating a customer without an email or name fails and returns an error"
              example3:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create a customer with a metafield"
              example4:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                    send_email_invite: true
                summary: "Create a customer with send_email_invite"
              example5:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                    password: "newpass"
                    password_confirmation: "newpass"
                    send_email_welcome: false
                summary: "Create a customer with password and password_confirmation and skip sending the welcome email"
      summary: "Creates a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#create-2020-01"
      parameters: []
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_customers"
  /admin/api/2020-01/customers/search.json:
    get:
      summary: "Searches for customers that match a supplied query. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#search-2020-01"
      parameters:
        - in: "query"
          name: "order"
          description: "Set the field and direction by which to order results.\n                  (default: last_order_date DESC)"
          schema: {}
          required: false
        - in: "query"
          name: "query"
          description: "Text to search for in the shop's customer data."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_customers_search"
  /admin/api/2020-01/customers/{customer_id}.json:
    get:
      summary: "Retrieves a single customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#show-2020-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_customers_param_customer_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer:
                    id: 207119551
                    email: "changed@email.address.com"
                    note: "Customer is a great guy"
                summary: "Update details for a customer"
              example2:
                value:
                  customer:
                    id: 207119551
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add metafield to an existing customer"
              example3:
                value:
                  customer:
                    id: 207119551
                    tags: "New Customer, Repeat Customer"
                summary: "Update a customer's tags"
              example4:
                value:
                  customer:
                    id: 207119551
                    accepts_marketing: true
                    accepts_marketing_updated_at: "2020-11-01T16:46:41-05:00"
                    marketing_opt_in_level: "confirmed_opt_in"
                summary: "Update a customer's marketing opt-in state"
      summary: "Updates a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#update-2020-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_customers_param_customer_id"
    delete:
      summary: "Deletes a customer. A customer can't be deleted if they have existing orders."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#destroy-2020-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_customers_param_customer_id"
  /admin/api/2020-01/customers/{customer_id}/account_activation_url.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Creating an account activation URL for an enabled customer fails and returns an error"
              example2:
                value: {}
                summary: "Create an account activation URL for an invited or disabled customer"
      summary: "Generate an account activation URL for a customer whose account is not yet enabled. This is useful when you've imported a large number of customers and want to send them activation emails all at once. Using this approach, you'll need to generate and send the activation emails yourself.\n            The account activation URL generated by this endpoint is for one-time use and will expire after 30 days. If you make a new POST request to this endpoint, then a new URL will be generated. The new URL will be again valid for 30 days, but the previous URL will no longer be valid."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#account_activation_url-2020-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_customers_param_customer_id_account_activation_url"
  /admin/api/2020-01/customers/{customer_id}/send_invite.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer_invite: {}
                summary: "Send the default invite"
              example2:
                value:
                  customer_invite:
                    to: "new_test_email@shopify.com"
                    from: "noaccesssteve@jobs.com"
                    bcc:
                      - "noaccesssteve@jobs.com"
                    subject: "Welcome to my new shop"
                    custom_message: "My awesome new store"
                summary: "Send a customized invite"
      summary: "Sends an account invite to a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#send_invite-2020-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_customers_param_customer_id_send_invite"
  /admin/api/2020-01/customers/count.json:
    get:
      summary: "Retrieves a count of all customers."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#count-2020-01"
      parameters: []
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_customers_count"
  /admin/api/2020-01/customers/{customer_id}/orders.json:
    get:
      summary: "Retrieves all orders belonging to a customer. The query string parameters that are available to the  Order resource are also available to this endpoint."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#orders-2020-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_customers_param_customer_id_orders"
  /admin/api/2020-04/customers.json:
    get:
      summary: "Retrieves a list of customers. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#index-2020-04"
      parameters:
        - in: "query"
          name: "ids"
          description: "Restrict results to customers specified by a comma-separated list of IDs."
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to those after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show customers created after a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show customers created before a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show customers last updated after a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show customers last updated before a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_customers"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                summary: "Create a new customer record"
              example2:
                value:
                  customer:
                    email: null
                    first_name: null
                    last_name: null
                summary: "Creating a customer without an email or name fails and returns an error"
              example3:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create a customer with a metafield"
              example4:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                    send_email_invite: true
                summary: "Create a customer with send_email_invite"
              example5:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                    password: "newpass"
                    password_confirmation: "newpass"
                    send_email_welcome: false
                summary: "Create a customer with password and password_confirmation and skip sending the welcome email"
      summary: "Creates a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#create-2020-04"
      parameters: []
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_customers"
  /admin/api/2020-04/customers/search.json:
    get:
      summary: "Searches for customers that match a supplied query. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#search-2020-04"
      parameters:
        - in: "query"
          name: "order"
          description: "Set the field and direction by which to order results.\n                  (default: last_order_date DESC)"
          schema: {}
          required: false
        - in: "query"
          name: "query"
          description: "Text to search for in the shop's customer data."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_customers_search"
  /admin/api/2020-04/customers/{customer_id}.json:
    get:
      summary: "Retrieves a single customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#show-2020-04"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_customers_param_customer_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer:
                    id: 207119551
                    email: "changed@email.address.com"
                    note: "Customer is a great guy"
                summary: "Update details for a customer"
              example2:
                value:
                  customer:
                    id: 207119551
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add metafield to an existing customer"
              example3:
                value:
                  customer:
                    id: 207119551
                    tags: "New Customer, Repeat Customer"
                summary: "Update a customer's tags"
              example4:
                value:
                  customer:
                    id: 207119551
                    accepts_marketing: true
                    accepts_marketing_updated_at: "2020-11-01T16:46:41-05:00"
                    marketing_opt_in_level: "confirmed_opt_in"
                summary: "Update a customer's marketing opt-in state"
      summary: "Updates a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#update-2020-04"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_customers_param_customer_id"
    delete:
      summary: "Deletes a customer. A customer can't be deleted if they have existing orders."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#destroy-2020-04"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_customers_param_customer_id"
  /admin/api/2020-04/customers/{customer_id}/account_activation_url.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Creating an account activation URL for an enabled customer fails and returns an error"
              example2:
                value: {}
                summary: "Create an account activation URL for an invited or disabled customer"
      summary: "Generate an account activation URL for a customer whose account is not yet enabled. This is useful when you've imported a large number of customers and want to send them activation emails all at once. Using this approach, you'll need to generate and send the activation emails yourself.\n            The account activation URL generated by this endpoint is for one-time use and will expire after 30 days. If you make a new POST request to this endpoint, then a new URL will be generated. The new URL will be again valid for 30 days, but the previous URL will no longer be valid."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#account_activation_url-2020-04"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_customers_param_customer_id_account_activation_url"
  /admin/api/2020-04/customers/{customer_id}/send_invite.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer_invite: {}
                summary: "Send the default invite"
              example2:
                value:
                  customer_invite:
                    to: "new_test_email@shopify.com"
                    from: "noaccesssteve@jobs.com"
                    bcc:
                      - "noaccesssteve@jobs.com"
                    subject: "Welcome to my new shop"
                    custom_message: "My awesome new store"
                summary: "Send a customized invite"
      summary: "Sends an account invite to a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#send_invite-2020-04"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_customers_param_customer_id_send_invite"
  /admin/api/2020-04/customers/count.json:
    get:
      summary: "Retrieves a count of all customers."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#count-2020-04"
      parameters: []
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_customers_count"
  /admin/api/2020-04/customers/{customer_id}/orders.json:
    get:
      summary: "Retrieves all orders belonging to a customer. The query string parameters that are available to the  Order resource are also available to this endpoint."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#orders-2020-04"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_customers_param_customer_id_orders"
  /admin/api/2020-07/customers.json:
    get:
      summary: "Retrieves a list of customers. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#index-2020-07"
      parameters:
        - in: "query"
          name: "ids"
          description: "Restrict results to customers specified by a comma-separated list of IDs."
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to those after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show customers created after a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show customers created before a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show customers last updated after a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show customers last updated before a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_customers"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                summary: "Create a new customer record"
              example2:
                value:
                  customer:
                    email: null
                    first_name: null
                    last_name: null
                summary: "Creating a customer without an email or name fails and returns an error"
              example3:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create a customer with a metafield"
              example4:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                    send_email_invite: true
                summary: "Create a customer with send_email_invite"
              example5:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                    password: "newpass"
                    password_confirmation: "newpass"
                    send_email_welcome: false
                summary: "Create a customer with password and password_confirmation and skip sending the welcome email"
      summary: "Creates a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#create-2020-07"
      parameters: []
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_customers"
  /admin/api/2020-07/customers/search.json:
    get:
      summary: "Searches for customers that match a supplied query. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#search-2020-07"
      parameters:
        - in: "query"
          name: "order"
          description: "Set the field and direction by which to order results.\n                  (default: last_order_date DESC)"
          schema: {}
          required: false
        - in: "query"
          name: "query"
          description: "Text to search for in the shop's customer data."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_customers_search"
  /admin/api/2020-07/customers/{customer_id}.json:
    get:
      summary: "Retrieves a single customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#show-2020-07"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_customers_param_customer_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer:
                    id: 207119551
                    email: "changed@email.address.com"
                    note: "Customer is a great guy"
                summary: "Update details for a customer"
              example2:
                value:
                  customer:
                    id: 207119551
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add metafield to an existing customer"
              example3:
                value:
                  customer:
                    id: 207119551
                    tags: "New Customer, Repeat Customer"
                summary: "Update a customer's tags"
              example4:
                value:
                  customer:
                    id: 207119551
                    accepts_marketing: true
                    accepts_marketing_updated_at: "2020-11-01T16:46:41-05:00"
                    marketing_opt_in_level: "confirmed_opt_in"
                summary: "Update a customer's marketing opt-in state"
      summary: "Updates a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#update-2020-07"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_customers_param_customer_id"
    delete:
      summary: "Deletes a customer. A customer can't be deleted if they have existing orders."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#destroy-2020-07"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_customers_param_customer_id"
  /admin/api/2020-07/customers/{customer_id}/account_activation_url.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Creating an account activation URL for an enabled customer fails and returns an error"
              example2:
                value: {}
                summary: "Create an account activation URL for an invited or disabled customer"
      summary: "Generate an account activation URL for a customer whose account is not yet enabled. This is useful when you've imported a large number of customers and want to send them activation emails all at once. Using this approach, you'll need to generate and send the activation emails yourself.\n            The account activation URL generated by this endpoint is for one-time use and will expire after 30 days. If you make a new POST request to this endpoint, then a new URL will be generated. The new URL will be again valid for 30 days, but the previous URL will no longer be valid."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#account_activation_url-2020-07"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_customers_param_customer_id_account_activation_url"
  /admin/api/2020-07/customers/{customer_id}/send_invite.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer_invite: {}
                summary: "Send the default invite"
              example2:
                value:
                  customer_invite:
                    to: "new_test_email@shopify.com"
                    from: "noaccesssteve@jobs.com"
                    bcc:
                      - "noaccesssteve@jobs.com"
                    subject: "Welcome to my new shop"
                    custom_message: "My awesome new store"
                summary: "Send a customized invite"
      summary: "Sends an account invite to a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#send_invite-2020-07"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_customers_param_customer_id_send_invite"
  /admin/api/2020-07/customers/count.json:
    get:
      summary: "Retrieves a count of all customers."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#count-2020-07"
      parameters: []
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_customers_count"
  /admin/api/2020-07/customers/{customer_id}/orders.json:
    get:
      summary: "Retrieves all orders belonging to a customer. The query string parameters that are available to the  Order resource are also available to this endpoint."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#orders-2020-07"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_customers_param_customer_id_orders"
  /admin/api/2020-10/customers.json:
    get:
      summary: "Retrieves a list of customers. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#index-2020-10"
      parameters:
        - in: "query"
          name: "ids"
          description: "Restrict results to customers specified by a comma-separated list of IDs."
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to those after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show customers created after a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show customers created before a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show customers last updated after a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show customers last updated before a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_customers"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                summary: "Create a new customer record"
              example2:
                value:
                  customer:
                    email: null
                    first_name: null
                    last_name: null
                summary: "Creating a customer without an email or name fails and returns an error"
              example3:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create a customer with a metafield"
              example4:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                    send_email_invite: true
                summary: "Create a customer with send_email_invite"
              example5:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                    password: "newpass"
                    password_confirmation: "newpass"
                    send_email_welcome: false
                summary: "Create a customer with password and password_confirmation and skip sending the welcome email"
      summary: "Creates a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#create-2020-10"
      parameters: []
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_customers"
  /admin/api/2020-10/customers/search.json:
    get:
      summary: "Searches for customers that match a supplied query. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#search-2020-10"
      parameters:
        - in: "query"
          name: "order"
          description: "Set the field and direction by which to order results.\n                  (default: last_order_date DESC)"
          schema: {}
          required: false
        - in: "query"
          name: "query"
          description: "Text to search for in the shop's customer data."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_customers_search"
  /admin/api/2020-10/customers/{customer_id}.json:
    get:
      summary: "Retrieves a single customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#show-2020-10"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_customers_param_customer_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer:
                    id: 207119551
                    email: "changed@email.address.com"
                    note: "Customer is a great guy"
                summary: "Update details for a customer"
              example2:
                value:
                  customer:
                    id: 207119551
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add metafield to an existing customer"
              example3:
                value:
                  customer:
                    id: 207119551
                    tags: "New Customer, Repeat Customer"
                summary: "Update a customer's tags"
              example4:
                value:
                  customer:
                    id: 207119551
                    accepts_marketing: true
                    accepts_marketing_updated_at: "2020-11-01T16:46:41-05:00"
                    marketing_opt_in_level: "confirmed_opt_in"
                summary: "Update a customer's marketing opt-in state"
      summary: "Updates a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#update-2020-10"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_customers_param_customer_id"
    delete:
      summary: "Deletes a customer. A customer can't be deleted if they have existing orders."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#destroy-2020-10"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_customers_param_customer_id"
  /admin/api/2020-10/customers/{customer_id}/account_activation_url.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Creating an account activation URL for an enabled customer fails and returns an error"
              example2:
                value: {}
                summary: "Create an account activation URL for an invited or disabled customer"
      summary: "Generate an account activation URL for a customer whose account is not yet enabled. This is useful when you've imported a large number of customers and want to send them activation emails all at once. Using this approach, you'll need to generate and send the activation emails yourself.\n            The account activation URL generated by this endpoint is for one-time use and will expire after 30 days. If you make a new POST request to this endpoint, then a new URL will be generated. The new URL will be again valid for 30 days, but the previous URL will no longer be valid."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#account_activation_url-2020-10"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_customers_param_customer_id_account_activation_url"
  /admin/api/2020-10/customers/{customer_id}/send_invite.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer_invite: {}
                summary: "Send the default invite"
              example2:
                value:
                  customer_invite:
                    to: "new_test_email@shopify.com"
                    from: "noaccesssteve@jobs.com"
                    bcc:
                      - "noaccesssteve@jobs.com"
                    subject: "Welcome to my new shop"
                    custom_message: "My awesome new store"
                summary: "Send a customized invite"
      summary: "Sends an account invite to a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#send_invite-2020-10"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_customers_param_customer_id_send_invite"
  /admin/api/2020-10/customers/count.json:
    get:
      summary: "Retrieves a count of all customers."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#count-2020-10"
      parameters: []
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_customers_count"
  /admin/api/2020-10/customers/{customer_id}/orders.json:
    get:
      summary: "Retrieves all orders belonging to a customer. The query string parameters that are available to the  Order resource are also available to this endpoint."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#orders-2020-10"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_customers_param_customer_id_orders"
  /admin/api/2021-01/customers.json:
    get:
      summary: "Retrieves a list of customers. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#index-2021-01"
      parameters:
        - in: "query"
          name: "ids"
          description: "Restrict results to customers specified by a comma-separated list of IDs."
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to those after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show customers created after a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show customers created before a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show customers last updated after a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show customers last updated before a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_customers"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                summary: "Create a new customer record"
              example2:
                value:
                  customer:
                    email: null
                    first_name: null
                    last_name: null
                summary: "Creating a customer without an email or name fails and returns an error"
              example3:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create a customer with a metafield"
              example4:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                    send_email_invite: true
                summary: "Create a customer with send_email_invite"
              example5:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                    password: "newpass"
                    password_confirmation: "newpass"
                    send_email_welcome: false
                summary: "Create a customer with password and password_confirmation and skip sending the welcome email"
      summary: "Creates a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#create-2021-01"
      parameters: []
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_customers"
  /admin/api/2021-01/customers/search.json:
    get:
      summary: "Searches for customers that match a supplied query. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#search-2021-01"
      parameters:
        - in: "query"
          name: "order"
          description: "Set the field and direction by which to order results.\n                  (default: last_order_date DESC)"
          schema: {}
          required: false
        - in: "query"
          name: "query"
          description: "Text to search for in the shop's customer data."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_customers_search"
  /admin/api/2021-01/customers/{customer_id}.json:
    get:
      summary: "Retrieves a single customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#show-2021-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_customers_param_customer_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer:
                    id: 207119551
                    email: "changed@email.address.com"
                    note: "Customer is a great guy"
                summary: "Update details for a customer"
              example2:
                value:
                  customer:
                    id: 207119551
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add metafield to an existing customer"
              example3:
                value:
                  customer:
                    id: 207119551
                    tags: "New Customer, Repeat Customer"
                summary: "Update a customer's tags"
              example4:
                value:
                  customer:
                    id: 207119551
                    accepts_marketing: true
                    accepts_marketing_updated_at: "2020-11-01T16:46:41-05:00"
                    marketing_opt_in_level: "confirmed_opt_in"
                summary: "Update a customer's marketing opt-in state"
      summary: "Updates a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#update-2021-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_customers_param_customer_id"
    delete:
      summary: "Deletes a customer. A customer can't be deleted if they have existing orders."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#destroy-2021-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_customers_param_customer_id"
  /admin/api/2021-01/customers/{customer_id}/account_activation_url.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Creating an account activation URL for an enabled customer fails and returns an error"
              example2:
                value: {}
                summary: "Create an account activation URL for an invited or disabled customer"
      summary: "Generate an account activation URL for a customer whose account is not yet enabled. This is useful when you've imported a large number of customers and want to send them activation emails all at once. Using this approach, you'll need to generate and send the activation emails yourself.\n            The account activation URL generated by this endpoint is for one-time use and will expire after 30 days. If you make a new POST request to this endpoint, then a new URL will be generated. The new URL will be again valid for 30 days, but the previous URL will no longer be valid."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#account_activation_url-2021-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_customers_param_customer_id_account_activation_url"
  /admin/api/2021-01/customers/{customer_id}/send_invite.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer_invite: {}
                summary: "Send the default invite"
              example2:
                value:
                  customer_invite:
                    to: "new_test_email@shopify.com"
                    from: "noaccesssteve@jobs.com"
                    bcc:
                      - "noaccesssteve@jobs.com"
                    subject: "Welcome to my new shop"
                    custom_message: "My awesome new store"
                summary: "Send a customized invite"
      summary: "Sends an account invite to a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#send_invite-2021-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_customers_param_customer_id_send_invite"
  /admin/api/2021-01/customers/count.json:
    get:
      summary: "Retrieves a count of all customers."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#count-2021-01"
      parameters: []
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_customers_count"
  /admin/api/2021-01/customers/{customer_id}/orders.json:
    get:
      summary: "Retrieves all orders belonging to a customer. The query string parameters that are available to the  Order resource are also available to this endpoint."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#orders-2021-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_customers_param_customer_id_orders"
  /admin/api/unstable/customers.json:
    get:
      summary: "Retrieves a list of customers. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#index-unstable"
      parameters:
        - in: "query"
          name: "ids"
          description: "Restrict results to customers specified by a comma-separated list of IDs."
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to those after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show customers created after a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show customers created before a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show customers last updated after a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show customers last updated before a specified date.(format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_customers"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                summary: "Create a new customer record"
              example2:
                value:
                  customer:
                    email: null
                    first_name: null
                    last_name: null
                summary: "Creating a customer without an email or name fails and returns an error"
              example3:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create a customer with a metafield"
              example4:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                    send_email_invite: true
                summary: "Create a customer with send_email_invite"
              example5:
                value:
                  customer:
                    first_name: "Steve"
                    last_name: "Lastnameson"
                    email: "steve.lastnameson@example.com"
                    phone: "+15142546011"
                    verified_email: true
                    addresses:
                      - address1: "123 Oak St"
                        city: "Ottawa"
                        province: "ON"
                        phone: "555-1212"
                        zip: "123 ABC"
                        last_name: "Lastnameson"
                        first_name: "Mother"
                        country: "CA"
                    password: "newpass"
                    password_confirmation: "newpass"
                    send_email_welcome: false
                summary: "Create a customer with password and password_confirmation and skip sending the welcome email"
      summary: "Creates a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#create-unstable"
      parameters: []
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_customers"
  /admin/api/unstable/customers/search.json:
    get:
      summary: "Searches for customers that match a supplied query. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#search-unstable"
      parameters:
        - in: "query"
          name: "order"
          description: "Set the field and direction by which to order results.\n                  (default: last_order_date DESC)"
          schema: {}
          required: false
        - in: "query"
          name: "query"
          description: "Text to search for in the shop's customer data."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_customers_search"
  /admin/api/unstable/customers/{customer_id}.json:
    get:
      summary: "Retrieves a single customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#show-unstable"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_customers_param_customer_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer:
                    id: 207119551
                    email: "changed@email.address.com"
                    note: "Customer is a great guy"
                summary: "Update details for a customer"
              example2:
                value:
                  customer:
                    id: 207119551
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add metafield to an existing customer"
              example3:
                value:
                  customer:
                    id: 207119551
                    tags: "New Customer, Repeat Customer"
                summary: "Update a customer's tags"
              example4:
                value:
                  customer:
                    id: 207119551
                    accepts_marketing: true
                    accepts_marketing_updated_at: "2020-11-01T16:46:41-05:00"
                    marketing_opt_in_level: "confirmed_opt_in"
                summary: "Update a customer's marketing opt-in state"
      summary: "Updates a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#update-unstable"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_customers_param_customer_id"
    delete:
      summary: "Deletes a customer. A customer can't be deleted if they have existing orders."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#destroy-unstable"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_customers_param_customer_id"
  /admin/api/unstable/customers/{customer_id}/account_activation_url.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Creating an account activation URL for an enabled customer fails and returns an error"
              example2:
                value: {}
                summary: "Create an account activation URL for an invited or disabled customer"
      summary: "Generate an account activation URL for a customer whose account is not yet enabled. This is useful when you've imported a large number of customers and want to send them activation emails all at once. Using this approach, you'll need to generate and send the activation emails yourself.\n            The account activation URL generated by this endpoint is for one-time use and will expire after 30 days. If you make a new POST request to this endpoint, then a new URL will be generated. The new URL will be again valid for 30 days, but the previous URL will no longer be valid."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#account_activation_url-unstable"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_customers_param_customer_id_account_activation_url"
  /admin/api/unstable/customers/{customer_id}/send_invite.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer_invite: {}
                summary: "Send the default invite"
              example2:
                value:
                  customer_invite:
                    to: "new_test_email@shopify.com"
                    from: "noaccesssteve@jobs.com"
                    bcc:
                      - "noaccesssteve@jobs.com"
                    subject: "Welcome to my new shop"
                    custom_message: "My awesome new store"
                summary: "Send a customized invite"
      summary: "Sends an account invite to a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#send_invite-unstable"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_customers_param_customer_id_send_invite"
  /admin/api/unstable/customers/count.json:
    get:
      summary: "Retrieves a count of all customers."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#count-unstable"
      parameters: []
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_customers_count"
  /admin/api/unstable/customers/{customer_id}/orders.json:
    get:
      summary: "Retrieves all orders belonging to a customer. The query string parameters that are available to the  Order resource are also available to this endpoint."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer#orders-unstable"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer"
        - "customers/customer"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_customers_param_customer_id_orders"
  /admin/api/2020-01/customers/{customer_id}/addresses.json:
    get:
      summary: "Retrieves a list of addresses for a customer. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#index-2020-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_customers_param_customer_id_addresses"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  address:
                    address1: "1 Rue des Carrieres"
                    address2: "Suite 1234"
                    city: "Montreal"
                    company: "Fancy Co."
                    first_name: "Samuel"
                    last_name: "de Champlain"
                    phone: "819-555-5555"
                    province: "Quebec"
                    country: "Canada"
                    zip: "G1R 4P5"
                    name: "Samuel de Champlain"
                    province_code: "QC"
                    country_code: "CA"
                    country_name: "Canada"
                summary: "Create a new address for a customer"
      summary: "Creates a new address for a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#create-2020-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_customers_param_customer_id_addresses"
  /admin/api/2020-01/customers/{customer_id}/addresses/{address_id}.json:
    get:
      summary: "Retrieves details a single customer address."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#show-2020-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_customers_param_customer_id_addresses_param_address_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  address:
                    id: 207119551
                    zip: "90210"
                summary: "Update the postal code of a customer address"
      summary: "Updates an existing customer address."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#update-2020-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_customers_param_customer_id_addresses_param_address_id"
    delete:
      summary: "Removes an address from a customer’s address list."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#destroy-2020-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_customers_param_customer_id_addresses_param_address_id"
  /admin/api/2020-01/customers/{customer_id}/addresses/set.json:
    put:
      summary: "Performs bulk operations for multiple customer addresses."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#set-2020-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "query"
          name: "address_ids[]"
          schema:
            type: "integer"
          description: "address_ids[]"
          required: false
        - in: "query"
          name: "operation"
          schema:
            type: "string"
          description: "operation"
          required: false
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_customers_param_customer_id_addresses_set"
  /admin/api/2020-01/customers/{customer_id}/addresses/{address_id}/default.json:
    put:
      summary: "Sets the default address for a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#default-2020-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_customers_param_customer_id_addresses_param_address_id_default"
  /admin/api/2020-04/customers/{customer_id}/addresses.json:
    get:
      summary: "Retrieves a list of addresses for a customer. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#index-2020-04"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_customers_param_customer_id_addresses"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  address:
                    address1: "1 Rue des Carrieres"
                    address2: "Suite 1234"
                    city: "Montreal"
                    company: "Fancy Co."
                    first_name: "Samuel"
                    last_name: "de Champlain"
                    phone: "819-555-5555"
                    province: "Quebec"
                    country: "Canada"
                    zip: "G1R 4P5"
                    name: "Samuel de Champlain"
                    province_code: "QC"
                    country_code: "CA"
                    country_name: "Canada"
                summary: "Create a new address for a customer"
      summary: "Creates a new address for a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#create-2020-04"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_customers_param_customer_id_addresses"
  /admin/api/2020-04/customers/{customer_id}/addresses/{address_id}.json:
    get:
      summary: "Retrieves details a single customer address."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#show-2020-04"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_customers_param_customer_id_addresses_param_address_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  address:
                    id: 207119551
                    zip: "90210"
                summary: "Update the postal code of a customer address"
      summary: "Updates an existing customer address."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#update-2020-04"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_customers_param_customer_id_addresses_param_address_id"
    delete:
      summary: "Removes an address from a customer’s address list."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#destroy-2020-04"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_customers_param_customer_id_addresses_param_address_id"
  /admin/api/2020-04/customers/{customer_id}/addresses/set.json:
    put:
      summary: "Performs bulk operations for multiple customer addresses."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#set-2020-04"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "query"
          name: "address_ids[]"
          schema:
            type: "integer"
          description: "address_ids[]"
          required: false
        - in: "query"
          name: "operation"
          schema:
            type: "string"
          description: "operation"
          required: false
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_customers_param_customer_id_addresses_set"
  /admin/api/2020-04/customers/{customer_id}/addresses/{address_id}/default.json:
    put:
      summary: "Sets the default address for a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#default-2020-04"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_customers_param_customer_id_addresses_param_address_id_default"
  /admin/api/2020-07/customers/{customer_id}/addresses.json:
    get:
      summary: "Retrieves a list of addresses for a customer. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#index-2020-07"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_customers_param_customer_id_addresses"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  address:
                    address1: "1 Rue des Carrieres"
                    address2: "Suite 1234"
                    city: "Montreal"
                    company: "Fancy Co."
                    first_name: "Samuel"
                    last_name: "de Champlain"
                    phone: "819-555-5555"
                    province: "Quebec"
                    country: "Canada"
                    zip: "G1R 4P5"
                    name: "Samuel de Champlain"
                    province_code: "QC"
                    country_code: "CA"
                    country_name: "Canada"
                summary: "Create a new address for a customer"
      summary: "Creates a new address for a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#create-2020-07"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_customers_param_customer_id_addresses"
  /admin/api/2020-07/customers/{customer_id}/addresses/{address_id}.json:
    get:
      summary: "Retrieves details a single customer address."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#show-2020-07"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_customers_param_customer_id_addresses_param_address_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  address:
                    id: 207119551
                    zip: "90210"
                summary: "Update the postal code of a customer address"
      summary: "Updates an existing customer address."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#update-2020-07"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_customers_param_customer_id_addresses_param_address_id"
    delete:
      summary: "Removes an address from a customer’s address list."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#destroy-2020-07"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_customers_param_customer_id_addresses_param_address_id"
  /admin/api/2020-07/customers/{customer_id}/addresses/set.json:
    put:
      summary: "Performs bulk operations for multiple customer addresses."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#set-2020-07"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "query"
          name: "address_ids[]"
          schema:
            type: "integer"
          description: "address_ids[]"
          required: false
        - in: "query"
          name: "operation"
          schema:
            type: "string"
          description: "operation"
          required: false
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_customers_param_customer_id_addresses_set"
  /admin/api/2020-07/customers/{customer_id}/addresses/{address_id}/default.json:
    put:
      summary: "Sets the default address for a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#default-2020-07"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_customers_param_customer_id_addresses_param_address_id_default"
  /admin/api/2020-10/customers/{customer_id}/addresses.json:
    get:
      summary: "Retrieves a list of addresses for a customer. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#index-2020-10"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_customers_param_customer_id_addresses"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  address:
                    address1: "1 Rue des Carrieres"
                    address2: "Suite 1234"
                    city: "Montreal"
                    company: "Fancy Co."
                    first_name: "Samuel"
                    last_name: "de Champlain"
                    phone: "819-555-5555"
                    province: "Quebec"
                    country: "Canada"
                    zip: "G1R 4P5"
                    name: "Samuel de Champlain"
                    province_code: "QC"
                    country_code: "CA"
                    country_name: "Canada"
                summary: "Create a new address for a customer"
      summary: "Creates a new address for a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#create-2020-10"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_customers_param_customer_id_addresses"
  /admin/api/2020-10/customers/{customer_id}/addresses/{address_id}.json:
    get:
      summary: "Retrieves details a single customer address."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#show-2020-10"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_customers_param_customer_id_addresses_param_address_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  address:
                    id: 207119551
                    zip: "90210"
                summary: "Update the postal code of a customer address"
      summary: "Updates an existing customer address."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#update-2020-10"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_customers_param_customer_id_addresses_param_address_id"
    delete:
      summary: "Removes an address from a customer’s address list."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#destroy-2020-10"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_customers_param_customer_id_addresses_param_address_id"
  /admin/api/2020-10/customers/{customer_id}/addresses/set.json:
    put:
      summary: "Performs bulk operations for multiple customer addresses."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#set-2020-10"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "query"
          name: "address_ids[]"
          schema:
            type: "integer"
          description: "address_ids[]"
          required: false
        - in: "query"
          name: "operation"
          schema:
            type: "string"
          description: "operation"
          required: false
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_customers_param_customer_id_addresses_set"
  /admin/api/2020-10/customers/{customer_id}/addresses/{address_id}/default.json:
    put:
      summary: "Sets the default address for a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#default-2020-10"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_customers_param_customer_id_addresses_param_address_id_default"
  /admin/api/2021-01/customers/{customer_id}/addresses.json:
    get:
      summary: "Retrieves a list of addresses for a customer. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#index-2021-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_customers_param_customer_id_addresses"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  address:
                    address1: "1 Rue des Carrieres"
                    address2: "Suite 1234"
                    city: "Montreal"
                    company: "Fancy Co."
                    first_name: "Samuel"
                    last_name: "de Champlain"
                    phone: "819-555-5555"
                    province: "Quebec"
                    country: "Canada"
                    zip: "G1R 4P5"
                    name: "Samuel de Champlain"
                    province_code: "QC"
                    country_code: "CA"
                    country_name: "Canada"
                summary: "Create a new address for a customer"
      summary: "Creates a new address for a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#create-2021-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_customers_param_customer_id_addresses"
  /admin/api/2021-01/customers/{customer_id}/addresses/{address_id}.json:
    get:
      summary: "Retrieves details a single customer address."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#show-2021-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_customers_param_customer_id_addresses_param_address_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  address:
                    id: 207119551
                    zip: "90210"
                summary: "Update the postal code of a customer address"
      summary: "Updates an existing customer address."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#update-2021-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_customers_param_customer_id_addresses_param_address_id"
    delete:
      summary: "Removes an address from a customer’s address list."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#destroy-2021-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_customers_param_customer_id_addresses_param_address_id"
  /admin/api/2021-01/customers/{customer_id}/addresses/set.json:
    put:
      summary: "Performs bulk operations for multiple customer addresses."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#set-2021-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "query"
          name: "address_ids[]"
          schema:
            type: "integer"
          description: "address_ids[]"
          required: false
        - in: "query"
          name: "operation"
          schema:
            type: "string"
          description: "operation"
          required: false
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_customers_param_customer_id_addresses_set"
  /admin/api/2021-01/customers/{customer_id}/addresses/{address_id}/default.json:
    put:
      summary: "Sets the default address for a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#default-2021-01"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_customers_param_customer_id_addresses_param_address_id_default"
  /admin/api/unstable/customers/{customer_id}/addresses.json:
    get:
      summary: "Retrieves a list of addresses for a customer. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#index-unstable"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_customers_param_customer_id_addresses"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  address:
                    address1: "1 Rue des Carrieres"
                    address2: "Suite 1234"
                    city: "Montreal"
                    company: "Fancy Co."
                    first_name: "Samuel"
                    last_name: "de Champlain"
                    phone: "819-555-5555"
                    province: "Quebec"
                    country: "Canada"
                    zip: "G1R 4P5"
                    name: "Samuel de Champlain"
                    province_code: "QC"
                    country_code: "CA"
                    country_name: "Canada"
                summary: "Create a new address for a customer"
      summary: "Creates a new address for a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#create-unstable"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_customers_param_customer_id_addresses"
  /admin/api/unstable/customers/{customer_id}/addresses/{address_id}.json:
    get:
      summary: "Retrieves details a single customer address."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#show-unstable"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_customers_param_customer_id_addresses_param_address_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  address:
                    id: 207119551
                    zip: "90210"
                summary: "Update the postal code of a customer address"
      summary: "Updates an existing customer address."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#update-unstable"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_customers_param_customer_id_addresses_param_address_id"
    delete:
      summary: "Removes an address from a customer’s address list."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#destroy-unstable"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_customers_param_customer_id_addresses_param_address_id"
  /admin/api/unstable/customers/{customer_id}/addresses/set.json:
    put:
      summary: "Performs bulk operations for multiple customer addresses."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#set-unstable"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "query"
          name: "address_ids[]"
          schema:
            type: "integer"
          description: "address_ids[]"
          required: false
        - in: "query"
          name: "operation"
          schema:
            type: "string"
          description: "operation"
          required: false
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_customers_param_customer_id_addresses_set"
  /admin/api/unstable/customers/{customer_id}/addresses/{address_id}/default.json:
    put:
      summary: "Sets the default address for a customer."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customer-address#default-unstable"
      parameters:
        - in: "path"
          name: "customer_id"
          required: true
          schema:
            type: "string"
          description: "customer_id"
        - in: "path"
          name: "address_id"
          required: true
          schema:
            type: "string"
          description: "address_id"
      tags:
        - "customers"
        - "customer-address"
        - "customers/customer-address"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_customers_param_customer_id_addresses_param_address_id_default"
  /admin/api/2020-01/customer_saved_searches.json:
    get:
      summary: "Retrieves a list of customer saved searches. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#index-2020-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_customer_saved_searches"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer_saved_search:
                    name: "Spent more than $50"
                    query: "total_spent:>50"
                summary: "Create a customer saved search"
              example2:
                value:
                  customer_saved_search:
                    name: "Spent more than $50 and after 2013"
                    query: "total_spent:>50 order_date:>=2013-01-01"
                summary: "Create a customer saved search with multiple terms"
              example3:
                value:
                  customer_saved_search:
                    body: "foobar"
                summary: "Creating a customer saved search without a name fails and returns an error"
      summary: "Creates a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#create-2020-01"
      parameters: []
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_customer_saved_searches"
  /admin/api/2020-01/customer_saved_searches/count.json:
    get:
      summary: "Retrieves a count of all customer saved searches."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#count-2020-01"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID"
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_customer_saved_searches_count"
  /admin/api/2020-01/customer_saved_searches/{customer_saved_search_id}.json:
    get:
      summary: "Retrieves a single customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#show-2020-01"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_customer_saved_searches_param_customer_saved_search_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer_saved_search:
                    id: 789629109
                    name: "This Name Has Been Changed"
                summary: "Update an existing customer saved search"
      summary: "Updates a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#update-2020-01"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_customer_saved_searches_param_customer_saved_search_id"
    delete:
      summary: "Deletes a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#destroy-2020-01"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_customer_saved_searches_param_customer_saved_search_id"
  /admin/api/2020-01/customer_saved_searches/{customer_saved_search_id}/customers.json:
    get:
      summary: "Retrieves all customers returned by a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#other-2020-01"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
        - in: "query"
          name: "order"
          description: "Set the field and direction by which to order results.\n                  (default: last_order_date DESC)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_customer_saved_searches_param_customer_saved_search_id_customers"
  /admin/api/2020-04/customer_saved_searches.json:
    get:
      summary: "Retrieves a list of customer saved searches. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#index-2020-04"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_customer_saved_searches"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer_saved_search:
                    name: "Spent more than $50"
                    query: "total_spent:>50"
                summary: "Create a customer saved search"
              example2:
                value:
                  customer_saved_search:
                    name: "Spent more than $50 and after 2013"
                    query: "total_spent:>50 order_date:>=2013-01-01"
                summary: "Create a customer saved search with multiple terms"
              example3:
                value:
                  customer_saved_search:
                    body: "foobar"
                summary: "Creating a customer saved search without a name fails and returns an error"
      summary: "Creates a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#create-2020-04"
      parameters: []
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_customer_saved_searches"
  /admin/api/2020-04/customer_saved_searches/count.json:
    get:
      summary: "Retrieves a count of all customer saved searches."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#count-2020-04"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID"
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_customer_saved_searches_count"
  /admin/api/2020-04/customer_saved_searches/{customer_saved_search_id}.json:
    get:
      summary: "Retrieves a single customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#show-2020-04"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_customer_saved_searches_param_customer_saved_search_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer_saved_search:
                    id: 789629109
                    name: "This Name Has Been Changed"
                summary: "Update an existing customer saved search"
      summary: "Updates a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#update-2020-04"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_customer_saved_searches_param_customer_saved_search_id"
    delete:
      summary: "Deletes a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#destroy-2020-04"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_customer_saved_searches_param_customer_saved_search_id"
  /admin/api/2020-04/customer_saved_searches/{customer_saved_search_id}/customers.json:
    get:
      summary: "Retrieves all customers returned by a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#other-2020-04"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
        - in: "query"
          name: "order"
          description: "Set the field and direction by which to order results.\n                  (default: last_order_date DESC)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_customer_saved_searches_param_customer_saved_search_id_customers"
  /admin/api/2020-07/customer_saved_searches.json:
    get:
      summary: "Retrieves a list of customer saved searches. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#index-2020-07"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_customer_saved_searches"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer_saved_search:
                    name: "Spent more than $50"
                    query: "total_spent:>50"
                summary: "Create a customer saved search"
              example2:
                value:
                  customer_saved_search:
                    name: "Spent more than $50 and after 2013"
                    query: "total_spent:>50 order_date:>=2013-01-01"
                summary: "Create a customer saved search with multiple terms"
              example3:
                value:
                  customer_saved_search:
                    body: "foobar"
                summary: "Creating a customer saved search without a name fails and returns an error"
      summary: "Creates a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#create-2020-07"
      parameters: []
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_customer_saved_searches"
  /admin/api/2020-07/customer_saved_searches/count.json:
    get:
      summary: "Retrieves a count of all customer saved searches."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#count-2020-07"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID"
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_customer_saved_searches_count"
  /admin/api/2020-07/customer_saved_searches/{customer_saved_search_id}.json:
    get:
      summary: "Retrieves a single customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#show-2020-07"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_customer_saved_searches_param_customer_saved_search_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer_saved_search:
                    id: 789629109
                    name: "This Name Has Been Changed"
                summary: "Update an existing customer saved search"
      summary: "Updates a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#update-2020-07"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_customer_saved_searches_param_customer_saved_search_id"
    delete:
      summary: "Deletes a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#destroy-2020-07"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_customer_saved_searches_param_customer_saved_search_id"
  /admin/api/2020-07/customer_saved_searches/{customer_saved_search_id}/customers.json:
    get:
      summary: "Retrieves all customers returned by a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#other-2020-07"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
        - in: "query"
          name: "order"
          description: "Set the field and direction by which to order results.\n                  (default: last_order_date DESC)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_customer_saved_searches_param_customer_saved_search_id_customers"
  /admin/api/2020-10/customer_saved_searches.json:
    get:
      summary: "Retrieves a list of customer saved searches. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#index-2020-10"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_customer_saved_searches"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer_saved_search:
                    name: "Spent more than $50"
                    query: "total_spent:>50"
                summary: "Create a customer saved search"
              example2:
                value:
                  customer_saved_search:
                    name: "Spent more than $50 and after 2013"
                    query: "total_spent:>50 order_date:>=2013-01-01"
                summary: "Create a customer saved search with multiple terms"
              example3:
                value:
                  customer_saved_search:
                    body: "foobar"
                summary: "Creating a customer saved search without a name fails and returns an error"
      summary: "Creates a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#create-2020-10"
      parameters: []
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_customer_saved_searches"
  /admin/api/2020-10/customer_saved_searches/count.json:
    get:
      summary: "Retrieves a count of all customer saved searches."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#count-2020-10"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID"
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_customer_saved_searches_count"
  /admin/api/2020-10/customer_saved_searches/{customer_saved_search_id}.json:
    get:
      summary: "Retrieves a single customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#show-2020-10"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_customer_saved_searches_param_customer_saved_search_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer_saved_search:
                    id: 789629109
                    name: "This Name Has Been Changed"
                summary: "Update an existing customer saved search"
      summary: "Updates a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#update-2020-10"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_customer_saved_searches_param_customer_saved_search_id"
    delete:
      summary: "Deletes a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#destroy-2020-10"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_customer_saved_searches_param_customer_saved_search_id"
  /admin/api/2020-10/customer_saved_searches/{customer_saved_search_id}/customers.json:
    get:
      summary: "Retrieves all customers returned by a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#other-2020-10"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
        - in: "query"
          name: "order"
          description: "Set the field and direction by which to order results.\n                  (default: last_order_date DESC)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_customer_saved_searches_param_customer_saved_search_id_customers"
  /admin/api/2021-01/customer_saved_searches.json:
    get:
      summary: "Retrieves a list of customer saved searches. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#index-2021-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_customer_saved_searches"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer_saved_search:
                    name: "Spent more than $50"
                    query: "total_spent:>50"
                summary: "Create a customer saved search"
              example2:
                value:
                  customer_saved_search:
                    name: "Spent more than $50 and after 2013"
                    query: "total_spent:>50 order_date:>=2013-01-01"
                summary: "Create a customer saved search with multiple terms"
              example3:
                value:
                  customer_saved_search:
                    body: "foobar"
                summary: "Creating a customer saved search without a name fails and returns an error"
      summary: "Creates a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#create-2021-01"
      parameters: []
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_customer_saved_searches"
  /admin/api/2021-01/customer_saved_searches/count.json:
    get:
      summary: "Retrieves a count of all customer saved searches."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#count-2021-01"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID"
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_customer_saved_searches_count"
  /admin/api/2021-01/customer_saved_searches/{customer_saved_search_id}.json:
    get:
      summary: "Retrieves a single customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#show-2021-01"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_customer_saved_searches_param_customer_saved_search_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer_saved_search:
                    id: 789629109
                    name: "This Name Has Been Changed"
                summary: "Update an existing customer saved search"
      summary: "Updates a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#update-2021-01"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_customer_saved_searches_param_customer_saved_search_id"
    delete:
      summary: "Deletes a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#destroy-2021-01"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_customer_saved_searches_param_customer_saved_search_id"
  /admin/api/2021-01/customer_saved_searches/{customer_saved_search_id}/customers.json:
    get:
      summary: "Retrieves all customers returned by a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#other-2021-01"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
        - in: "query"
          name: "order"
          description: "Set the field and direction by which to order results.\n                  (default: last_order_date DESC)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_customer_saved_searches_param_customer_saved_search_id_customers"
  /admin/api/unstable/customer_saved_searches.json:
    get:
      summary: "Retrieves a list of customer saved searches. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#index-unstable"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_customer_saved_searches"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer_saved_search:
                    name: "Spent more than $50"
                    query: "total_spent:>50"
                summary: "Create a customer saved search"
              example2:
                value:
                  customer_saved_search:
                    name: "Spent more than $50 and after 2013"
                    query: "total_spent:>50 order_date:>=2013-01-01"
                summary: "Create a customer saved search with multiple terms"
              example3:
                value:
                  customer_saved_search:
                    body: "foobar"
                summary: "Creating a customer saved search without a name fails and returns an error"
      summary: "Creates a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#create-unstable"
      parameters: []
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_customer_saved_searches"
  /admin/api/unstable/customer_saved_searches/count.json:
    get:
      summary: "Retrieves a count of all customer saved searches."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#count-unstable"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID"
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_customer_saved_searches_count"
  /admin/api/unstable/customer_saved_searches/{customer_saved_search_id}.json:
    get:
      summary: "Retrieves a single customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#show-unstable"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_customer_saved_searches_param_customer_saved_search_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  customer_saved_search:
                    id: 789629109
                    name: "This Name Has Been Changed"
                summary: "Update an existing customer saved search"
      summary: "Updates a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#update-unstable"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_customer_saved_searches_param_customer_saved_search_id"
    delete:
      summary: "Deletes a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#destroy-unstable"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_customer_saved_searches_param_customer_saved_search_id"
  /admin/api/unstable/customer_saved_searches/{customer_saved_search_id}/customers.json:
    get:
      summary: "Retrieves all customers returned by a customer saved search."
      description: "https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#other-unstable"
      parameters:
        - in: "path"
          name: "customer_saved_search_id"
          required: true
          schema:
            type: "string"
          description: "customer_saved_search_id"
        - in: "query"
          name: "order"
          description: "Set the field and direction by which to order results.\n                  (default: last_order_date DESC)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "customers"
        - "customersavedsearch"
        - "customers/customersavedsearch"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_customer_saved_searches_param_customer_saved_search_id_customers"
  /admin/api/2021-01/deprecated_api_calls.json:
    get:
      summary: "Retrieves a list of deprecated API calls made by the authenticated private app in the past 30 days."
      description: "https://shopify.dev/docs/admin-api/rest/reference/deprecated_api_calls#index-2021-01"
      parameters: []
      tags:
        - "deprecated_api_calls"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_deprecated_api_calls"
  /admin/api/unstable/deprecated_api_calls.json:
    get:
      summary: "Retrieves a list of deprecated API calls made by the authenticated private app in the past 30 days."
      description: "https://shopify.dev/docs/admin-api/rest/reference/deprecated_api_calls#index-unstable"
      parameters: []
      tags:
        - "deprecated_api_calls"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_deprecated_api_calls"
  /admin/api/2020-01/price_rules/{price_rule_id}/discount_codes.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  discount_code:
                    code: "SUMMERSALE10OFF"
                summary: "Create a discount code"
      summary: "Creates a discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#create-2020-01"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_price_rules_param_price_rule_id_discount_codes"
    get:
      summary: "Retrieve a list of discount codes. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#index-2020-01"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_price_rules_param_price_rule_id_discount_codes"
  /admin/api/2020-01/price_rules/{price_rule_id}/discount_codes/{discount_code_id}.json:
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  discount_code:
                    id: 507328175
                    code: "WINTERSALE20OFF"
                    usage_count: 0
                    created_at: "2020-11-04T16:46:58-05:00"
                    updated_at: "2020-11-04T16:46:58-05:00"
                summary: "Update the code for a discount"
      summary: "Updates an existing discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#update-2020-01"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "discount_code_id"
          required: true
          schema:
            type: "string"
          description: "discount_code_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_price_rules_param_price_rule_id_discount_codes_param_discount_code_id"
    get:
      summary: "Retrieves a single discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#show-2020-01"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "discount_code_id"
          required: true
          schema:
            type: "string"
          description: "discount_code_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_price_rules_param_price_rule_id_discount_codes_param_discount_code_id"
    delete:
      summary: "Deletes a discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#destroy-2020-01"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "discount_code_id"
          required: true
          schema:
            type: "string"
          description: "discount_code_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_price_rules_param_price_rule_id_discount_codes_param_discount_code_id"
  /admin/api/2020-01/discount_codes/lookup.json:
    get:
      summary: "Retrieves the location of a discount code.\n          The discount code's location is returned in the location header, not in the DiscountCode object itself.\n            Depending on your HTTP client, the location of the discount code might follow the location header automatically."
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#lookup-2020-01"
      parameters:
        - in: "query"
          name: "code"
          schema:
            type: "integer"
          description: "code"
          required: false
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_discount_codes_lookup"
  /admin/api/2020-01/price_rules/{price_rule_id}/batch.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  discount_codes:
                    - code: "SUMMER1"
                    - code: "SUMMER2"
                    - code: "SUMMER3"
                summary: "Create a discount code creation job"
      summary: "Creates a discount code creation job.\n          The batch endpoint can be used to asynchronously create up to 100 discount codes in a single request. It\n          enqueues and returns a discount_code_creation object that can be monitored for completion.\n          Response fields that are specific to the batch endpoint include:\n          \n            status: The state of the discount code creation job. Possible values are:\n              \n                queued: The job is acknowledged, but not started.\n                running: The job is in process.\n                completed: The job has finished.\n              \n            codes_count: The number of discount codes to create.\n            imported_count: The number of discount codes created successfully.\n            failed_count: The number of discount codes that were not created successfully. Unsuccessful attempts will retry up to three times.\n            logs: A report that specifies when no discount codes were created because the provided data was invalid. Example responses:\n              \n                \"Price rule target selection can't be blank\"\n                \"Price rule allocation method can't be blank\""
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#batch_create-2020-01"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_price_rules_param_price_rule_id_batch"
  /admin/api/2020-01/price_rules/{price_rule_id}/batch/{batch_id}.json:
    get:
      summary: "Retrieves a discount code creation job"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#batch_show-2020-01"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "batch_id"
          required: true
          schema:
            type: "string"
          description: "batch_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_price_rules_param_price_rule_id_batch_param_batch_id"
  /admin/api/2020-01/price_rules/{price_rule_id}/batch/{batch_id}/discount_codes.json:
    get:
      summary: "Retrieves a list of discount codes for a discount code creation job.\n          Discount codes that have been successfully created include a populated id field. Discount codes that\n          encountered errors during the creation process include a populated errors field."
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#batch_discount_codes_index-2020-01"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "batch_id"
          required: true
          schema:
            type: "string"
          description: "batch_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_price_rules_param_price_rule_id_batch_param_batch_id_discount_codes"
  /admin/api/2020-04/price_rules/{price_rule_id}/discount_codes.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  discount_code:
                    code: "SUMMERSALE10OFF"
                summary: "Create a discount code"
      summary: "Creates a discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#create-2020-04"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_price_rules_param_price_rule_id_discount_codes"
    get:
      summary: "Retrieve a list of discount codes. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#index-2020-04"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_price_rules_param_price_rule_id_discount_codes"
  /admin/api/2020-04/price_rules/{price_rule_id}/discount_codes/{discount_code_id}.json:
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  discount_code:
                    id: 507328175
                    code: "WINTERSALE20OFF"
                    usage_count: 0
                    created_at: "2020-11-04T16:46:58-05:00"
                    updated_at: "2020-11-04T16:46:58-05:00"
                summary: "Update the code for a discount"
      summary: "Updates an existing discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#update-2020-04"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "discount_code_id"
          required: true
          schema:
            type: "string"
          description: "discount_code_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_price_rules_param_price_rule_id_discount_codes_param_discount_code_id"
    get:
      summary: "Retrieves a single discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#show-2020-04"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "discount_code_id"
          required: true
          schema:
            type: "string"
          description: "discount_code_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_price_rules_param_price_rule_id_discount_codes_param_discount_code_id"
    delete:
      summary: "Deletes a discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#destroy-2020-04"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "discount_code_id"
          required: true
          schema:
            type: "string"
          description: "discount_code_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_price_rules_param_price_rule_id_discount_codes_param_discount_code_id"
  /admin/api/2020-04/discount_codes/lookup.json:
    get:
      summary: "Retrieves the location of a discount code.\n          The discount code's location is returned in the location header, not in the DiscountCode object itself.\n            Depending on your HTTP client, the location of the discount code might follow the location header automatically."
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#lookup-2020-04"
      parameters:
        - in: "query"
          name: "code"
          schema:
            type: "integer"
          description: "code"
          required: false
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_discount_codes_lookup"
  /admin/api/2020-04/price_rules/{price_rule_id}/batch.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  discount_codes:
                    - code: "SUMMER1"
                    - code: "SUMMER2"
                    - code: "SUMMER3"
                summary: "Create a discount code creation job"
      summary: "Creates a discount code creation job.\n          The batch endpoint can be used to asynchronously create up to 100 discount codes in a single request. It\n          enqueues and returns a discount_code_creation object that can be monitored for completion.\n          Response fields that are specific to the batch endpoint include:\n          \n            status: The state of the discount code creation job. Possible values are:\n              \n                queued: The job is acknowledged, but not started.\n                running: The job is in process.\n                completed: The job has finished.\n              \n            codes_count: The number of discount codes to create.\n            imported_count: The number of discount codes created successfully.\n            failed_count: The number of discount codes that were not created successfully. Unsuccessful attempts will retry up to three times.\n            logs: A report that specifies when no discount codes were created because the provided data was invalid. Example responses:\n              \n                \"Price rule target selection can't be blank\"\n                \"Price rule allocation method can't be blank\""
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#batch_create-2020-04"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_price_rules_param_price_rule_id_batch"
  /admin/api/2020-04/price_rules/{price_rule_id}/batch/{batch_id}.json:
    get:
      summary: "Retrieves a discount code creation job"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#batch_show-2020-04"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "batch_id"
          required: true
          schema:
            type: "string"
          description: "batch_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_price_rules_param_price_rule_id_batch_param_batch_id"
  /admin/api/2020-04/price_rules/{price_rule_id}/batch/{batch_id}/discount_codes.json:
    get:
      summary: "Retrieves a list of discount codes for a discount code creation job.\n          Discount codes that have been successfully created include a populated id field. Discount codes that\n          encountered errors during the creation process include a populated errors field."
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#batch_discount_codes_index-2020-04"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "batch_id"
          required: true
          schema:
            type: "string"
          description: "batch_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_price_rules_param_price_rule_id_batch_param_batch_id_discount_codes"
  /admin/api/2020-07/price_rules/{price_rule_id}/discount_codes.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  discount_code:
                    code: "SUMMERSALE10OFF"
                summary: "Create a discount code"
      summary: "Creates a discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#create-2020-07"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_price_rules_param_price_rule_id_discount_codes"
    get:
      summary: "Retrieve a list of discount codes. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#index-2020-07"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_price_rules_param_price_rule_id_discount_codes"
  /admin/api/2020-07/price_rules/{price_rule_id}/discount_codes/{discount_code_id}.json:
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  discount_code:
                    id: 507328175
                    code: "WINTERSALE20OFF"
                    usage_count: 0
                    created_at: "2020-11-04T16:46:58-05:00"
                    updated_at: "2020-11-04T16:46:58-05:00"
                summary: "Update the code for a discount"
      summary: "Updates an existing discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#update-2020-07"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "discount_code_id"
          required: true
          schema:
            type: "string"
          description: "discount_code_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_price_rules_param_price_rule_id_discount_codes_param_discount_code_id"
    get:
      summary: "Retrieves a single discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#show-2020-07"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "discount_code_id"
          required: true
          schema:
            type: "string"
          description: "discount_code_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_price_rules_param_price_rule_id_discount_codes_param_discount_code_id"
    delete:
      summary: "Deletes a discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#destroy-2020-07"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "discount_code_id"
          required: true
          schema:
            type: "string"
          description: "discount_code_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_price_rules_param_price_rule_id_discount_codes_param_discount_code_id"
  /admin/api/2020-07/discount_codes/lookup.json:
    get:
      summary: "Retrieves the location of a discount code.\n          The discount code's location is returned in the location header, not in the DiscountCode object itself.\n            Depending on your HTTP client, the location of the discount code might follow the location header automatically."
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#lookup-2020-07"
      parameters:
        - in: "query"
          name: "code"
          schema:
            type: "integer"
          description: "code"
          required: false
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_discount_codes_lookup"
  /admin/api/2020-07/price_rules/{price_rule_id}/batch.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  discount_codes:
                    - code: "SUMMER1"
                    - code: "SUMMER2"
                    - code: "SUMMER3"
                summary: "Create a discount code creation job"
      summary: "Creates a discount code creation job.\n          The batch endpoint can be used to asynchronously create up to 100 discount codes in a single request. It\n          enqueues and returns a discount_code_creation object that can be monitored for completion.\n          Response fields that are specific to the batch endpoint include:\n          \n            status: The state of the discount code creation job. Possible values are:\n              \n                queued: The job is acknowledged, but not started.\n                running: The job is in process.\n                completed: The job has finished.\n              \n            codes_count: The number of discount codes to create.\n            imported_count: The number of discount codes created successfully.\n            failed_count: The number of discount codes that were not created successfully. Unsuccessful attempts will retry up to three times.\n            logs: A report that specifies when no discount codes were created because the provided data was invalid. Example responses:\n              \n                \"Price rule target selection can't be blank\"\n                \"Price rule allocation method can't be blank\""
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#batch_create-2020-07"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_price_rules_param_price_rule_id_batch"
  /admin/api/2020-07/price_rules/{price_rule_id}/batch/{batch_id}.json:
    get:
      summary: "Retrieves a discount code creation job"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#batch_show-2020-07"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "batch_id"
          required: true
          schema:
            type: "string"
          description: "batch_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_price_rules_param_price_rule_id_batch_param_batch_id"
  /admin/api/2020-07/price_rules/{price_rule_id}/batch/{batch_id}/discount_codes.json:
    get:
      summary: "Retrieves a list of discount codes for a discount code creation job.\n          Discount codes that have been successfully created include a populated id field. Discount codes that\n          encountered errors during the creation process include a populated errors field."
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#batch_discount_codes_index-2020-07"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "batch_id"
          required: true
          schema:
            type: "string"
          description: "batch_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_price_rules_param_price_rule_id_batch_param_batch_id_discount_codes"
  /admin/api/2020-10/price_rules/{price_rule_id}/discount_codes.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  discount_code:
                    code: "SUMMERSALE10OFF"
                summary: "Create a discount code"
      summary: "Creates a discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#create-2020-10"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_price_rules_param_price_rule_id_discount_codes"
    get:
      summary: "Retrieve a list of discount codes. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#index-2020-10"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_price_rules_param_price_rule_id_discount_codes"
  /admin/api/2020-10/price_rules/{price_rule_id}/discount_codes/{discount_code_id}.json:
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  discount_code:
                    id: 507328175
                    code: "WINTERSALE20OFF"
                    usage_count: 0
                    created_at: "2020-11-04T16:46:58-05:00"
                    updated_at: "2020-11-04T16:46:58-05:00"
                summary: "Update the code for a discount"
      summary: "Updates an existing discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#update-2020-10"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "discount_code_id"
          required: true
          schema:
            type: "string"
          description: "discount_code_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_price_rules_param_price_rule_id_discount_codes_param_discount_code_id"
    get:
      summary: "Retrieves a single discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#show-2020-10"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "discount_code_id"
          required: true
          schema:
            type: "string"
          description: "discount_code_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_price_rules_param_price_rule_id_discount_codes_param_discount_code_id"
    delete:
      summary: "Deletes a discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#destroy-2020-10"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "discount_code_id"
          required: true
          schema:
            type: "string"
          description: "discount_code_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_price_rules_param_price_rule_id_discount_codes_param_discount_code_id"
  /admin/api/2020-10/discount_codes/lookup.json:
    get:
      summary: "Retrieves the location of a discount code.\n          The discount code's location is returned in the location header, not in the DiscountCode object itself.\n            Depending on your HTTP client, the location of the discount code might follow the location header automatically."
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#lookup-2020-10"
      parameters:
        - in: "query"
          name: "code"
          schema:
            type: "integer"
          description: "code"
          required: false
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_discount_codes_lookup"
  /admin/api/2020-10/price_rules/{price_rule_id}/batch.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  discount_codes:
                    - code: "SUMMER1"
                    - code: "SUMMER2"
                    - code: "SUMMER3"
                summary: "Create a discount code creation job"
      summary: "Creates a discount code creation job.\n          The batch endpoint can be used to asynchronously create up to 100 discount codes in a single request. It\n          enqueues and returns a discount_code_creation object that can be monitored for completion.\n          Response fields that are specific to the batch endpoint include:\n          \n            status: The state of the discount code creation job. Possible values are:\n              \n                queued: The job is acknowledged, but not started.\n                running: The job is in process.\n                completed: The job has finished.\n              \n            codes_count: The number of discount codes to create.\n            imported_count: The number of discount codes created successfully.\n            failed_count: The number of discount codes that were not created successfully. Unsuccessful attempts will retry up to three times.\n            logs: A report that specifies when no discount codes were created because the provided data was invalid. Example responses:\n              \n                \"Price rule target selection can't be blank\"\n                \"Price rule allocation method can't be blank\""
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#batch_create-2020-10"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_price_rules_param_price_rule_id_batch"
  /admin/api/2020-10/price_rules/{price_rule_id}/batch/{batch_id}.json:
    get:
      summary: "Retrieves a discount code creation job"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#batch_show-2020-10"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "batch_id"
          required: true
          schema:
            type: "string"
          description: "batch_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_price_rules_param_price_rule_id_batch_param_batch_id"
  /admin/api/2020-10/price_rules/{price_rule_id}/batch/{batch_id}/discount_codes.json:
    get:
      summary: "Retrieves a list of discount codes for a discount code creation job.\n          Discount codes that have been successfully created include a populated id field. Discount codes that\n          encountered errors during the creation process include a populated errors field."
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#batch_discount_codes_index-2020-10"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "batch_id"
          required: true
          schema:
            type: "string"
          description: "batch_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_price_rules_param_price_rule_id_batch_param_batch_id_discount_codes"
  /admin/api/2021-01/price_rules/{price_rule_id}/discount_codes.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  discount_code:
                    code: "SUMMERSALE10OFF"
                summary: "Create a discount code"
      summary: "Creates a discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#create-2021-01"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_price_rules_param_price_rule_id_discount_codes"
    get:
      summary: "Retrieve a list of discount codes. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#index-2021-01"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_price_rules_param_price_rule_id_discount_codes"
  /admin/api/2021-01/price_rules/{price_rule_id}/discount_codes/{discount_code_id}.json:
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  discount_code:
                    id: 507328175
                    code: "WINTERSALE20OFF"
                    usage_count: 0
                    created_at: "2020-11-04T16:46:58-05:00"
                    updated_at: "2020-11-04T16:46:58-05:00"
                summary: "Update the code for a discount"
      summary: "Updates an existing discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#update-2021-01"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "discount_code_id"
          required: true
          schema:
            type: "string"
          description: "discount_code_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_price_rules_param_price_rule_id_discount_codes_param_discount_code_id"
    get:
      summary: "Retrieves a single discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#show-2021-01"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "discount_code_id"
          required: true
          schema:
            type: "string"
          description: "discount_code_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_price_rules_param_price_rule_id_discount_codes_param_discount_code_id"
    delete:
      summary: "Deletes a discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#destroy-2021-01"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "discount_code_id"
          required: true
          schema:
            type: "string"
          description: "discount_code_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_price_rules_param_price_rule_id_discount_codes_param_discount_code_id"
  /admin/api/2021-01/discount_codes/lookup.json:
    get:
      summary: "Retrieves the location of a discount code.\n          The discount code's location is returned in the location header, not in the DiscountCode object itself.\n            Depending on your HTTP client, the location of the discount code might follow the location header automatically."
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#lookup-2021-01"
      parameters:
        - in: "query"
          name: "code"
          schema:
            type: "integer"
          description: "code"
          required: false
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_discount_codes_lookup"
  /admin/api/2021-01/price_rules/{price_rule_id}/batch.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  discount_codes:
                    - code: "SUMMER1"
                    - code: "SUMMER2"
                    - code: "SUMMER3"
                summary: "Create a discount code creation job"
      summary: "Creates a discount code creation job.\n          The batch endpoint can be used to asynchronously create up to 100 discount codes in a single request. It\n          enqueues and returns a discount_code_creation object that can be monitored for completion.\n          Response fields that are specific to the batch endpoint include:\n          \n            status: The state of the discount code creation job. Possible values are:\n              \n                queued: The job is acknowledged, but not started.\n                running: The job is in process.\n                completed: The job has finished.\n              \n            codes_count: The number of discount codes to create.\n            imported_count: The number of discount codes created successfully.\n            failed_count: The number of discount codes that were not created successfully. Unsuccessful attempts will retry up to three times.\n            logs: A report that specifies when no discount codes were created because the provided data was invalid. Example responses:\n              \n                \"Price rule target selection can't be blank\"\n                \"Price rule allocation method can't be blank\""
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#batch_create-2021-01"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_price_rules_param_price_rule_id_batch"
  /admin/api/2021-01/price_rules/{price_rule_id}/batch/{batch_id}.json:
    get:
      summary: "Retrieves a discount code creation job"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#batch_show-2021-01"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "batch_id"
          required: true
          schema:
            type: "string"
          description: "batch_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_price_rules_param_price_rule_id_batch_param_batch_id"
  /admin/api/2021-01/price_rules/{price_rule_id}/batch/{batch_id}/discount_codes.json:
    get:
      summary: "Retrieves a list of discount codes for a discount code creation job.\n          Discount codes that have been successfully created include a populated id field. Discount codes that\n          encountered errors during the creation process include a populated errors field."
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#batch_discount_codes_index-2021-01"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "batch_id"
          required: true
          schema:
            type: "string"
          description: "batch_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_price_rules_param_price_rule_id_batch_param_batch_id_discount_codes"
  /admin/api/unstable/price_rules/{price_rule_id}/discount_codes.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  discount_code:
                    code: "SUMMERSALE10OFF"
                summary: "Create a discount code"
      summary: "Creates a discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#create-unstable"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_price_rules_param_price_rule_id_discount_codes"
    get:
      summary: "Retrieve a list of discount codes. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#index-unstable"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_price_rules_param_price_rule_id_discount_codes"
  /admin/api/unstable/price_rules/{price_rule_id}/discount_codes/{discount_code_id}.json:
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  discount_code:
                    id: 507328175
                    code: "WINTERSALE20OFF"
                    usage_count: 0
                    created_at: "2020-11-04T16:46:58-05:00"
                    updated_at: "2020-11-04T16:46:58-05:00"
                summary: "Update the code for a discount"
      summary: "Updates an existing discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#update-unstable"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "discount_code_id"
          required: true
          schema:
            type: "string"
          description: "discount_code_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_price_rules_param_price_rule_id_discount_codes_param_discount_code_id"
    get:
      summary: "Retrieves a single discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#show-unstable"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "discount_code_id"
          required: true
          schema:
            type: "string"
          description: "discount_code_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_price_rules_param_price_rule_id_discount_codes_param_discount_code_id"
    delete:
      summary: "Deletes a discount code"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#destroy-unstable"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "discount_code_id"
          required: true
          schema:
            type: "string"
          description: "discount_code_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_price_rules_param_price_rule_id_discount_codes_param_discount_code_id"
  /admin/api/unstable/discount_codes/lookup.json:
    get:
      summary: "Retrieves the location of a discount code.\n          The discount code's location is returned in the location header, not in the DiscountCode object itself.\n            Depending on your HTTP client, the location of the discount code might follow the location header automatically."
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#lookup-unstable"
      parameters:
        - in: "query"
          name: "code"
          schema:
            type: "integer"
          description: "code"
          required: false
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_discount_codes_lookup"
  /admin/api/unstable/price_rules/{price_rule_id}/batch.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  discount_codes:
                    - code: "SUMMER1"
                    - code: "SUMMER2"
                    - code: "SUMMER3"
                summary: "Create a discount code creation job"
      summary: "Creates a discount code creation job.\n          The batch endpoint can be used to asynchronously create up to 100 discount codes in a single request. It\n          enqueues and returns a discount_code_creation object that can be monitored for completion.\n          Response fields that are specific to the batch endpoint include:\n          \n            status: The state of the discount code creation job. Possible values are:\n              \n                queued: The job is acknowledged, but not started.\n                running: The job is in process.\n                completed: The job has finished.\n              \n            codes_count: The number of discount codes to create.\n            imported_count: The number of discount codes created successfully.\n            failed_count: The number of discount codes that were not created successfully. Unsuccessful attempts will retry up to three times.\n            logs: A report that specifies when no discount codes were created because the provided data was invalid. Example responses:\n              \n                \"Price rule target selection can't be blank\"\n                \"Price rule allocation method can't be blank\""
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#batch_create-unstable"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_price_rules_param_price_rule_id_batch"
  /admin/api/unstable/price_rules/{price_rule_id}/batch/{batch_id}.json:
    get:
      summary: "Retrieves a discount code creation job"
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#batch_show-unstable"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "batch_id"
          required: true
          schema:
            type: "string"
          description: "batch_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_price_rules_param_price_rule_id_batch_param_batch_id"
  /admin/api/unstable/price_rules/{price_rule_id}/batch/{batch_id}/discount_codes.json:
    get:
      summary: "Retrieves a list of discount codes for a discount code creation job.\n          Discount codes that have been successfully created include a populated id field. Discount codes that\n          encountered errors during the creation process include a populated errors field."
      description: "https://shopify.dev/docs/admin-api/rest/reference/discounts/discountcode#batch_discount_codes_index-unstable"
      parameters:
        - in: "path"
          name: "price_rule_id"
          required: true
          schema:
            type: "string"
          description: "price_rule_id"
        - in: "path"
          name: "batch_id"
          required: true
          schema:
            type: "string"
          description: "batch_id"
      tags:
        - "discounts"
        - "discountcode"
        - "discounts/discountcode"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_price_rules_param_price_rule_id_batch_param_batch_id_discount_codes"
  /admin/api/2020-01/events.json:
    get:
      summary: "Retrieves a list of events. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/event#index-2020-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "The number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Show only results after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show events created at or after this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show events created at or before this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "filter"
          description: "Show events specified in this filter."
          schema: {}
          required: false
        - in: "query"
          name: "verb"
          description: "Show events of a certain type."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "events"
        - "event"
        - "events/event"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_events"
  /admin/api/2020-01/events/{event_id}.json:
    get:
      summary: "Retrieves a single event by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/event#show-2020-01"
      parameters:
        - in: "path"
          name: "event_id"
          required: true
          schema:
            type: "string"
          description: "event_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "events"
        - "event"
        - "events/event"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_events_param_event_id"
  /admin/api/2020-01/events/count.json:
    get:
      summary: "Retrieves a count of events"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/event#count-2020-01"
      parameters:
        - in: "query"
          name: "created_at_min"
          description: "Count only events created at or after this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count only events created at or before this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
      tags:
        - "events"
        - "event"
        - "events/event"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_events_count"
  /admin/api/2020-04/events.json:
    get:
      summary: "Retrieves a list of events. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/event#index-2020-04"
      parameters:
        - in: "query"
          name: "limit"
          description: "The number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Show only results after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show events created at or after this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show events created at or before this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "filter"
          description: "Show events specified in this filter."
          schema: {}
          required: false
        - in: "query"
          name: "verb"
          description: "Show events of a certain type."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "events"
        - "event"
        - "events/event"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_events"
  /admin/api/2020-04/events/{event_id}.json:
    get:
      summary: "Retrieves a single event by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/event#show-2020-04"
      parameters:
        - in: "path"
          name: "event_id"
          required: true
          schema:
            type: "string"
          description: "event_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "events"
        - "event"
        - "events/event"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_events_param_event_id"
  /admin/api/2020-04/events/count.json:
    get:
      summary: "Retrieves a count of events"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/event#count-2020-04"
      parameters:
        - in: "query"
          name: "created_at_min"
          description: "Count only events created at or after this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count only events created at or before this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
      tags:
        - "events"
        - "event"
        - "events/event"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_events_count"
  /admin/api/2020-07/events.json:
    get:
      summary: "Retrieves a list of events. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/event#index-2020-07"
      parameters:
        - in: "query"
          name: "limit"
          description: "The number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Show only results after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show events created at or after this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show events created at or before this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "filter"
          description: "Show events specified in this filter."
          schema: {}
          required: false
        - in: "query"
          name: "verb"
          description: "Show events of a certain type."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "events"
        - "event"
        - "events/event"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_events"
  /admin/api/2020-07/events/{event_id}.json:
    get:
      summary: "Retrieves a single event by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/event#show-2020-07"
      parameters:
        - in: "path"
          name: "event_id"
          required: true
          schema:
            type: "string"
          description: "event_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "events"
        - "event"
        - "events/event"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_events_param_event_id"
  /admin/api/2020-07/events/count.json:
    get:
      summary: "Retrieves a count of events"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/event#count-2020-07"
      parameters:
        - in: "query"
          name: "created_at_min"
          description: "Count only events created at or after this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count only events created at or before this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
      tags:
        - "events"
        - "event"
        - "events/event"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_events_count"
  /admin/api/2020-10/events.json:
    get:
      summary: "Retrieves a list of events. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/event#index-2020-10"
      parameters:
        - in: "query"
          name: "limit"
          description: "The number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Show only results after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show events created at or after this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show events created at or before this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "filter"
          description: "Show events specified in this filter."
          schema: {}
          required: false
        - in: "query"
          name: "verb"
          description: "Show events of a certain type."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "events"
        - "event"
        - "events/event"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_events"
  /admin/api/2020-10/events/{event_id}.json:
    get:
      summary: "Retrieves a single event by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/event#show-2020-10"
      parameters:
        - in: "path"
          name: "event_id"
          required: true
          schema:
            type: "string"
          description: "event_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "events"
        - "event"
        - "events/event"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_events_param_event_id"
  /admin/api/2020-10/events/count.json:
    get:
      summary: "Retrieves a count of events"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/event#count-2020-10"
      parameters:
        - in: "query"
          name: "created_at_min"
          description: "Count only events created at or after this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count only events created at or before this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
      tags:
        - "events"
        - "event"
        - "events/event"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_events_count"
  /admin/api/2021-01/events.json:
    get:
      summary: "Retrieves a list of events. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/event#index-2021-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "The number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Show only results after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show events created at or after this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show events created at or before this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "filter"
          description: "Show events specified in this filter."
          schema: {}
          required: false
        - in: "query"
          name: "verb"
          description: "Show events of a certain type."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "events"
        - "event"
        - "events/event"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_events"
  /admin/api/2021-01/events/{event_id}.json:
    get:
      summary: "Retrieves a single event by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/event#show-2021-01"
      parameters:
        - in: "path"
          name: "event_id"
          required: true
          schema:
            type: "string"
          description: "event_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "events"
        - "event"
        - "events/event"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_events_param_event_id"
  /admin/api/2021-01/events/count.json:
    get:
      summary: "Retrieves a count of events"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/event#count-2021-01"
      parameters:
        - in: "query"
          name: "created_at_min"
          description: "Count only events created at or after this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count only events created at or before this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
      tags:
        - "events"
        - "event"
        - "events/event"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_events_count"
  /admin/api/unstable/events.json:
    get:
      summary: "Retrieves a list of events. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/event#index-unstable"
      parameters:
        - in: "query"
          name: "limit"
          description: "The number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Show only results after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show events created at or after this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show events created at or before this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "filter"
          description: "Show events specified in this filter."
          schema: {}
          required: false
        - in: "query"
          name: "verb"
          description: "Show events of a certain type."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "events"
        - "event"
        - "events/event"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_events"
  /admin/api/unstable/events/{event_id}.json:
    get:
      summary: "Retrieves a single event by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/event#show-unstable"
      parameters:
        - in: "path"
          name: "event_id"
          required: true
          schema:
            type: "string"
          description: "event_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "events"
        - "event"
        - "events/event"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_events_param_event_id"
  /admin/api/unstable/events/count.json:
    get:
      summary: "Retrieves a count of events"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/event#count-unstable"
      parameters:
        - in: "query"
          name: "created_at_min"
          description: "Count only events created at or after this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count only events created at or before this date and time. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
      tags:
        - "events"
        - "event"
        - "events/event"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_events_count"
  /admin/api/2020-01/webhooks.json:
    get:
      summary: "Retrieves a list of webhooks. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#index-2020-01"
      parameters:
        - in: "query"
          name: "address"
          description: "Retrieve webhook subscriptions that send the POST request to this URI."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Retrieve webhook subscriptions that were created before a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Retrieve webhook subscriptions that were created after a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Comma-separated list of the properties you want returned for each item in the result list. Use this parameter to restrict the returned list of items to only those properties you specify."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "Maximum number of webhook subscriptions that should be returned. Setting this parameter outside the maximum range will return an error.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict the returned list to webhook subscriptions whose id is greater than the specified since_id."
          schema: {}
          required: false
        - in: "query"
          name: "topic"
          description: "Show webhook subscriptions with a given topic.\nFor a list of valid values, refer to the topic property.>"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Retrieve webhooks that were updated before a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Retrieve webhooks that were updated after a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_webhooks"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  webhook:
                    topic: "orders/create"
                    address: "https://whatever.hostname.com/"
                    format: "json"
                summary: "Subscribe to order creation webhooks"
              example2:
                value:
                  webhook:
                    body: "foobar"
                summary: "Trying to create a webhook subscription without an address and topic will return a 422 - Unprocessable Entity error"
      summary: "Create a new webhook subscription by specifying both an address and a topic"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#create-2020-01"
      parameters:
        - in: "query"
          name: "format"
          description: "Use this parameter to select the data format for the payload. Valid values are json and xml.\n                  (default: json)"
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_webhooks"
  /admin/api/2020-01/webhooks/count.json:
    get:
      summary: "Retrieves a count of existing webhook subscriptions"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#count-2020-01"
      parameters:
        - in: "query"
          name: "address"
          description: "Retrieve webhook subscriptions that send the POST request to this URI."
          schema: {}
          required: false
        - in: "query"
          name: "topic"
          description: "Show webhook subscriptions with a given topic.\nFor a list of valid values, refer to the topic property.>"
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_webhooks_count"
  /admin/api/2020-01/webhooks/{webhook_id}.json:
    get:
      summary: "Retrieves a single webhook subscription"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#show-2020-01"
      parameters:
        - in: "path"
          name: "webhook_id"
          required: true
          schema:
            type: "string"
          description: "webhook_id"
        - in: "query"
          name: "fields"
          description: "Comma-separated list of the properties you want returned for each item in the result list. Use this parameter to restrict the returned list of items to only those properties you specify."
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_webhooks_param_webhook_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  webhook:
                    id: 4759306
                    address: "https://somewhere-else.com/"
                summary: "Update a webhook subscription so that it POSTs to a different address"
      summary: "Update a webhook subscription's topic or address URIs"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#update-2020-01"
      parameters:
        - in: "path"
          name: "webhook_id"
          required: true
          schema:
            type: "string"
          description: "webhook_id"
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_webhooks_param_webhook_id"
    delete:
      summary: "Delete a webhook subscription"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#destroy-2020-01"
      parameters:
        - in: "path"
          name: "webhook_id"
          required: true
          schema:
            type: "string"
          description: "webhook_id"
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_webhooks_param_webhook_id"
  /admin/api/2020-04/webhooks.json:
    get:
      summary: "Retrieves a list of webhooks. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#index-2020-04"
      parameters:
        - in: "query"
          name: "address"
          description: "Retrieve webhook subscriptions that send the POST request to this URI."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Retrieve webhook subscriptions that were created before a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Retrieve webhook subscriptions that were created after a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Comma-separated list of the properties you want returned for each item in the result list. Use this parameter to restrict the returned list of items to only those properties you specify."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "Maximum number of webhook subscriptions that should be returned. Setting this parameter outside the maximum range will return an error.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict the returned list to webhook subscriptions whose id is greater than the specified since_id."
          schema: {}
          required: false
        - in: "query"
          name: "topic"
          description: "Show webhook subscriptions with a given topic.\nFor a list of valid values, refer to the topic property.>"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Retrieve webhooks that were updated before a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Retrieve webhooks that were updated after a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_webhooks"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  webhook:
                    topic: "orders/create"
                    address: "https://whatever.hostname.com/"
                    format: "json"
                summary: "Subscribe to order creation webhooks"
              example2:
                value:
                  webhook:
                    body: "foobar"
                summary: "Trying to create a webhook subscription without an address and topic will return a 422 - Unprocessable Entity error"
      summary: "Create a new webhook subscription by specifying both an address and a topic"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#create-2020-04"
      parameters:
        - in: "query"
          name: "format"
          description: "Use this parameter to select the data format for the payload. Valid values are json and xml.\n                  (default: json)"
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_webhooks"
  /admin/api/2020-04/webhooks/count.json:
    get:
      summary: "Retrieves a count of existing webhook subscriptions"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#count-2020-04"
      parameters:
        - in: "query"
          name: "address"
          description: "Retrieve webhook subscriptions that send the POST request to this URI."
          schema: {}
          required: false
        - in: "query"
          name: "topic"
          description: "Show webhook subscriptions with a given topic.\nFor a list of valid values, refer to the topic property.>"
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_webhooks_count"
  /admin/api/2020-04/webhooks/{webhook_id}.json:
    get:
      summary: "Retrieves a single webhook subscription"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#show-2020-04"
      parameters:
        - in: "path"
          name: "webhook_id"
          required: true
          schema:
            type: "string"
          description: "webhook_id"
        - in: "query"
          name: "fields"
          description: "Comma-separated list of the properties you want returned for each item in the result list. Use this parameter to restrict the returned list of items to only those properties you specify."
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_webhooks_param_webhook_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  webhook:
                    id: 4759306
                    address: "https://somewhere-else.com/"
                summary: "Update a webhook subscription so that it POSTs to a different address"
      summary: "Update a webhook subscription's topic or address URIs"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#update-2020-04"
      parameters:
        - in: "path"
          name: "webhook_id"
          required: true
          schema:
            type: "string"
          description: "webhook_id"
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_webhooks_param_webhook_id"
    delete:
      summary: "Delete a webhook subscription"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#destroy-2020-04"
      parameters:
        - in: "path"
          name: "webhook_id"
          required: true
          schema:
            type: "string"
          description: "webhook_id"
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_webhooks_param_webhook_id"
  /admin/api/2020-07/webhooks.json:
    get:
      summary: "Retrieves a list of webhooks. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#index-2020-07"
      parameters:
        - in: "query"
          name: "address"
          description: "Retrieve webhook subscriptions that send the POST request to this URI."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Retrieve webhook subscriptions that were created before a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Retrieve webhook subscriptions that were created after a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Comma-separated list of the properties you want returned for each item in the result list. Use this parameter to restrict the returned list of items to only those properties you specify."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "Maximum number of webhook subscriptions that should be returned. Setting this parameter outside the maximum range will return an error.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict the returned list to webhook subscriptions whose id is greater than the specified since_id."
          schema: {}
          required: false
        - in: "query"
          name: "topic"
          description: "Show webhook subscriptions with a given topic.\nFor a list of valid values, refer to the topic property.>"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Retrieve webhooks that were updated before a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Retrieve webhooks that were updated after a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_webhooks"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  webhook:
                    topic: "orders/create"
                    address: "https://whatever.hostname.com/"
                    format: "json"
                summary: "Subscribe to order creation webhooks"
              example2:
                value:
                  webhook:
                    body: "foobar"
                summary: "Trying to create a webhook subscription without an address and topic will return a 422 - Unprocessable Entity error"
      summary: "Create a new webhook subscription by specifying both an address and a topic"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#create-2020-07"
      parameters:
        - in: "query"
          name: "format"
          description: "Use this parameter to select the data format for the payload. Valid values are json and xml.\n                  (default: json)"
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_webhooks"
  /admin/api/2020-07/webhooks/count.json:
    get:
      summary: "Retrieves a count of existing webhook subscriptions"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#count-2020-07"
      parameters:
        - in: "query"
          name: "address"
          description: "Retrieve webhook subscriptions that send the POST request to this URI."
          schema: {}
          required: false
        - in: "query"
          name: "topic"
          description: "Show webhook subscriptions with a given topic.\nFor a list of valid values, refer to the topic property.>"
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_webhooks_count"
  /admin/api/2020-07/webhooks/{webhook_id}.json:
    get:
      summary: "Retrieves a single webhook subscription"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#show-2020-07"
      parameters:
        - in: "path"
          name: "webhook_id"
          required: true
          schema:
            type: "string"
          description: "webhook_id"
        - in: "query"
          name: "fields"
          description: "Comma-separated list of the properties you want returned for each item in the result list. Use this parameter to restrict the returned list of items to only those properties you specify."
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_webhooks_param_webhook_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  webhook:
                    id: 4759306
                    address: "https://somewhere-else.com/"
                summary: "Update a webhook subscription so that it POSTs to a different address"
      summary: "Update a webhook subscription's topic or address URIs"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#update-2020-07"
      parameters:
        - in: "path"
          name: "webhook_id"
          required: true
          schema:
            type: "string"
          description: "webhook_id"
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_webhooks_param_webhook_id"
    delete:
      summary: "Delete a webhook subscription"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#destroy-2020-07"
      parameters:
        - in: "path"
          name: "webhook_id"
          required: true
          schema:
            type: "string"
          description: "webhook_id"
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_webhooks_param_webhook_id"
  /admin/api/2020-10/webhooks.json:
    get:
      summary: "Retrieves a list of webhooks. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#index-2020-10"
      parameters:
        - in: "query"
          name: "address"
          description: "Retrieve webhook subscriptions that send the POST request to this URI."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Retrieve webhook subscriptions that were created before a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Retrieve webhook subscriptions that were created after a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Comma-separated list of the properties you want returned for each item in the result list. Use this parameter to restrict the returned list of items to only those properties you specify."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "Maximum number of webhook subscriptions that should be returned. Setting this parameter outside the maximum range will return an error.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict the returned list to webhook subscriptions whose id is greater than the specified since_id."
          schema: {}
          required: false
        - in: "query"
          name: "topic"
          description: "Show webhook subscriptions with a given topic.\nFor a list of valid values, refer to the topic property.>"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Retrieve webhooks that were updated before a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Retrieve webhooks that were updated after a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_webhooks"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  webhook:
                    topic: "orders/create"
                    address: "https://whatever.hostname.com/"
                    format: "json"
                summary: "Subscribe to order creation webhooks"
              example2:
                value:
                  webhook:
                    body: "foobar"
                summary: "Trying to create a webhook subscription without an address and topic will return a 422 - Unprocessable Entity error"
      summary: "Create a new webhook subscription by specifying both an address and a topic"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#create-2020-10"
      parameters:
        - in: "query"
          name: "format"
          description: "Use this parameter to select the data format for the payload. Valid values are json and xml.\n                  (default: json)"
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_webhooks"
  /admin/api/2020-10/webhooks/count.json:
    get:
      summary: "Retrieves a count of existing webhook subscriptions"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#count-2020-10"
      parameters:
        - in: "query"
          name: "address"
          description: "Retrieve webhook subscriptions that send the POST request to this URI."
          schema: {}
          required: false
        - in: "query"
          name: "topic"
          description: "Show webhook subscriptions with a given topic.\nFor a list of valid values, refer to the topic property.>"
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_webhooks_count"
  /admin/api/2020-10/webhooks/{webhook_id}.json:
    get:
      summary: "Retrieves a single webhook subscription"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#show-2020-10"
      parameters:
        - in: "path"
          name: "webhook_id"
          required: true
          schema:
            type: "string"
          description: "webhook_id"
        - in: "query"
          name: "fields"
          description: "Comma-separated list of the properties you want returned for each item in the result list. Use this parameter to restrict the returned list of items to only those properties you specify."
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_webhooks_param_webhook_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  webhook:
                    id: 4759306
                    address: "https://somewhere-else.com/"
                summary: "Update a webhook subscription so that it POSTs to a different address"
      summary: "Update a webhook subscription's topic or address URIs"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#update-2020-10"
      parameters:
        - in: "path"
          name: "webhook_id"
          required: true
          schema:
            type: "string"
          description: "webhook_id"
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_webhooks_param_webhook_id"
    delete:
      summary: "Delete a webhook subscription"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#destroy-2020-10"
      parameters:
        - in: "path"
          name: "webhook_id"
          required: true
          schema:
            type: "string"
          description: "webhook_id"
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_webhooks_param_webhook_id"
  /admin/api/2021-01/webhooks.json:
    get:
      summary: "Retrieves a list of webhooks. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#index-2021-01"
      parameters:
        - in: "query"
          name: "address"
          description: "Retrieve webhook subscriptions that send the POST request to this URI."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Retrieve webhook subscriptions that were created before a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Retrieve webhook subscriptions that were created after a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Comma-separated list of the properties you want returned for each item in the result list. Use this parameter to restrict the returned list of items to only those properties you specify."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "Maximum number of webhook subscriptions that should be returned. Setting this parameter outside the maximum range will return an error.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict the returned list to webhook subscriptions whose id is greater than the specified since_id."
          schema: {}
          required: false
        - in: "query"
          name: "topic"
          description: "Show webhook subscriptions with a given topic.\nFor a list of valid values, refer to the topic property.>"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Retrieve webhooks that were updated before a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Retrieve webhooks that were updated after a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_webhooks"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  webhook:
                    topic: "orders/create"
                    address: "https://whatever.hostname.com/"
                    format: "json"
                summary: "Subscribe to order creation webhooks"
              example2:
                value:
                  webhook:
                    body: "foobar"
                summary: "Trying to create a webhook subscription without an address and topic will return a 422 - Unprocessable Entity error"
      summary: "Create a new webhook subscription by specifying both an address and a topic"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#create-2021-01"
      parameters:
        - in: "query"
          name: "format"
          description: "Use this parameter to select the data format for the payload. Valid values are json and xml.\n                  (default: json)"
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_webhooks"
  /admin/api/2021-01/webhooks/count.json:
    get:
      summary: "Retrieves a count of existing webhook subscriptions"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#count-2021-01"
      parameters:
        - in: "query"
          name: "address"
          description: "Retrieve webhook subscriptions that send the POST request to this URI."
          schema: {}
          required: false
        - in: "query"
          name: "topic"
          description: "Show webhook subscriptions with a given topic.\nFor a list of valid values, refer to the topic property.>"
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_webhooks_count"
  /admin/api/2021-01/webhooks/{webhook_id}.json:
    get:
      summary: "Retrieves a single webhook subscription"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#show-2021-01"
      parameters:
        - in: "path"
          name: "webhook_id"
          required: true
          schema:
            type: "string"
          description: "webhook_id"
        - in: "query"
          name: "fields"
          description: "Comma-separated list of the properties you want returned for each item in the result list. Use this parameter to restrict the returned list of items to only those properties you specify."
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_webhooks_param_webhook_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  webhook:
                    id: 4759306
                    address: "https://somewhere-else.com/"
                summary: "Update a webhook subscription so that it POSTs to a different address"
      summary: "Update a webhook subscription's topic or address URIs"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#update-2021-01"
      parameters:
        - in: "path"
          name: "webhook_id"
          required: true
          schema:
            type: "string"
          description: "webhook_id"
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_webhooks_param_webhook_id"
    delete:
      summary: "Delete a webhook subscription"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#destroy-2021-01"
      parameters:
        - in: "path"
          name: "webhook_id"
          required: true
          schema:
            type: "string"
          description: "webhook_id"
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_webhooks_param_webhook_id"
  /admin/api/unstable/webhooks.json:
    get:
      summary: "Retrieves a list of webhooks. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#index-unstable"
      parameters:
        - in: "query"
          name: "address"
          description: "Retrieve webhook subscriptions that send the POST request to this URI."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Retrieve webhook subscriptions that were created before a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Retrieve webhook subscriptions that were created after a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Comma-separated list of the properties you want returned for each item in the result list. Use this parameter to restrict the returned list of items to only those properties you specify."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "Maximum number of webhook subscriptions that should be returned. Setting this parameter outside the maximum range will return an error.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict the returned list to webhook subscriptions whose id is greater than the specified since_id."
          schema: {}
          required: false
        - in: "query"
          name: "topic"
          description: "Show webhook subscriptions with a given topic.\nFor a list of valid values, refer to the topic property.>"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Retrieve webhooks that were updated before a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Retrieve webhooks that were updated after a given date and time (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_webhooks"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  webhook:
                    topic: "orders/create"
                    address: "https://whatever.hostname.com/"
                    format: "json"
                summary: "Subscribe to order creation webhooks"
              example2:
                value:
                  webhook:
                    body: "foobar"
                summary: "Trying to create a webhook subscription without an address and topic will return a 422 - Unprocessable Entity error"
      summary: "Create a new webhook subscription by specifying both an address and a topic"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#create-unstable"
      parameters:
        - in: "query"
          name: "format"
          description: "Use this parameter to select the data format for the payload. Valid values are json and xml.\n                  (default: json)"
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_webhooks"
  /admin/api/unstable/webhooks/count.json:
    get:
      summary: "Retrieves a count of existing webhook subscriptions"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#count-unstable"
      parameters:
        - in: "query"
          name: "address"
          description: "Retrieve webhook subscriptions that send the POST request to this URI."
          schema: {}
          required: false
        - in: "query"
          name: "topic"
          description: "Show webhook subscriptions with a given topic.\nFor a list of valid values, refer to the topic property.>"
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_webhooks_count"
  /admin/api/unstable/webhooks/{webhook_id}.json:
    get:
      summary: "Retrieves a single webhook subscription"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#show-unstable"
      parameters:
        - in: "path"
          name: "webhook_id"
          required: true
          schema:
            type: "string"
          description: "webhook_id"
        - in: "query"
          name: "fields"
          description: "Comma-separated list of the properties you want returned for each item in the result list. Use this parameter to restrict the returned list of items to only those properties you specify."
          schema: {}
          required: false
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_webhooks_param_webhook_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  webhook:
                    id: 4759306
                    address: "https://somewhere-else.com/"
                summary: "Update a webhook subscription so that it POSTs to a different address"
      summary: "Update a webhook subscription's topic or address URIs"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#update-unstable"
      parameters:
        - in: "path"
          name: "webhook_id"
          required: true
          schema:
            type: "string"
          description: "webhook_id"
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_webhooks_param_webhook_id"
    delete:
      summary: "Delete a webhook subscription"
      description: "https://shopify.dev/docs/admin-api/rest/reference/events/webhook#destroy-unstable"
      parameters:
        - in: "path"
          name: "webhook_id"
          required: true
          schema:
            type: "string"
          description: "webhook_id"
      tags:
        - "events"
        - "webhook"
        - "events/webhook"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_webhooks_param_webhook_id"
  /admin/api/2020-01/inventory_items.json:
    get:
      summary: "Retrieves a list of inventory items. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventoryitem#index-2020-01"
      parameters:
        - in: "query"
          name: "ids\n                  required"
          description: "Show only inventory items specified by a comma-separated list of IDs.\n                  (maximum: 100)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "ids"
          schema:
            type: "integer"
          description: "ids"
          required: false
      tags:
        - "inventory"
        - "inventoryitem"
        - "inventory/inventoryitem"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_inventory_items"
  /admin/api/2020-01/inventory_items/{inventory_item_id}.json:
    get:
      summary: "Retrieves a single inventory item by ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventoryitem#show-2020-01"
      parameters:
        - in: "path"
          name: "inventory_item_id"
          required: true
          schema:
            type: "string"
          description: "inventory_item_id"
      tags:
        - "inventory"
        - "inventoryitem"
        - "inventory/inventoryitem"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_inventory_items_param_inventory_item_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  inventory_item:
                    id: 808950810
                    sku: "new sku"
                summary: "Update an inventory item's SKU"
              example2:
                value:
                  inventory_item:
                    id: 808950810
                    cost: "25.00"
                summary: "Update an inventory item's unit cost"
      summary: "Updates an existing inventory item"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventoryitem#update-2020-01"
      parameters:
        - in: "path"
          name: "inventory_item_id"
          required: true
          schema:
            type: "string"
          description: "inventory_item_id"
      tags:
        - "inventory"
        - "inventoryitem"
        - "inventory/inventoryitem"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_inventory_items_param_inventory_item_id"
  /admin/api/2020-04/inventory_items.json:
    get:
      summary: "Retrieves a list of inventory items. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventoryitem#index-2020-04"
      parameters:
        - in: "query"
          name: "ids\n                  required"
          description: "Show only inventory items specified by a comma-separated list of IDs.\n                  (maximum: 100)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "ids"
          schema:
            type: "integer"
          description: "ids"
          required: false
      tags:
        - "inventory"
        - "inventoryitem"
        - "inventory/inventoryitem"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_inventory_items"
  /admin/api/2020-04/inventory_items/{inventory_item_id}.json:
    get:
      summary: "Retrieves a single inventory item by ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventoryitem#show-2020-04"
      parameters:
        - in: "path"
          name: "inventory_item_id"
          required: true
          schema:
            type: "string"
          description: "inventory_item_id"
      tags:
        - "inventory"
        - "inventoryitem"
        - "inventory/inventoryitem"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_inventory_items_param_inventory_item_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  inventory_item:
                    id: 808950810
                    sku: "new sku"
                summary: "Update an inventory item's SKU"
              example2:
                value:
                  inventory_item:
                    id: 808950810
                    cost: "25.00"
                summary: "Update an inventory item's unit cost"
      summary: "Updates an existing inventory item"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventoryitem#update-2020-04"
      parameters:
        - in: "path"
          name: "inventory_item_id"
          required: true
          schema:
            type: "string"
          description: "inventory_item_id"
      tags:
        - "inventory"
        - "inventoryitem"
        - "inventory/inventoryitem"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_inventory_items_param_inventory_item_id"
  /admin/api/2020-07/inventory_items.json:
    get:
      summary: "Retrieves a list of inventory items. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventoryitem#index-2020-07"
      parameters:
        - in: "query"
          name: "ids\n                  required"
          description: "Show only inventory items specified by a comma-separated list of IDs.\n                  (maximum: 100)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "ids"
          schema:
            type: "integer"
          description: "ids"
          required: false
      tags:
        - "inventory"
        - "inventoryitem"
        - "inventory/inventoryitem"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_inventory_items"
  /admin/api/2020-07/inventory_items/{inventory_item_id}.json:
    get:
      summary: "Retrieves a single inventory item by ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventoryitem#show-2020-07"
      parameters:
        - in: "path"
          name: "inventory_item_id"
          required: true
          schema:
            type: "string"
          description: "inventory_item_id"
      tags:
        - "inventory"
        - "inventoryitem"
        - "inventory/inventoryitem"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_inventory_items_param_inventory_item_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  inventory_item:
                    id: 808950810
                    sku: "new sku"
                summary: "Update an inventory item's SKU"
              example2:
                value:
                  inventory_item:
                    id: 808950810
                    cost: "25.00"
                summary: "Update an inventory item's unit cost"
      summary: "Updates an existing inventory item"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventoryitem#update-2020-07"
      parameters:
        - in: "path"
          name: "inventory_item_id"
          required: true
          schema:
            type: "string"
          description: "inventory_item_id"
      tags:
        - "inventory"
        - "inventoryitem"
        - "inventory/inventoryitem"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_inventory_items_param_inventory_item_id"
  /admin/api/2020-10/inventory_items.json:
    get:
      summary: "Retrieves a list of inventory items. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventoryitem#index-2020-10"
      parameters:
        - in: "query"
          name: "ids\n                  required"
          description: "Show only inventory items specified by a comma-separated list of IDs.\n                  (maximum: 100)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "ids"
          schema:
            type: "integer"
          description: "ids"
          required: false
      tags:
        - "inventory"
        - "inventoryitem"
        - "inventory/inventoryitem"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_inventory_items"
  /admin/api/2020-10/inventory_items/{inventory_item_id}.json:
    get:
      summary: "Retrieves a single inventory item by ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventoryitem#show-2020-10"
      parameters:
        - in: "path"
          name: "inventory_item_id"
          required: true
          schema:
            type: "string"
          description: "inventory_item_id"
      tags:
        - "inventory"
        - "inventoryitem"
        - "inventory/inventoryitem"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_inventory_items_param_inventory_item_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  inventory_item:
                    id: 808950810
                    sku: "new sku"
                summary: "Update an inventory item's SKU"
              example2:
                value:
                  inventory_item:
                    id: 808950810
                    cost: "25.00"
                summary: "Update an inventory item's unit cost"
      summary: "Updates an existing inventory item"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventoryitem#update-2020-10"
      parameters:
        - in: "path"
          name: "inventory_item_id"
          required: true
          schema:
            type: "string"
          description: "inventory_item_id"
      tags:
        - "inventory"
        - "inventoryitem"
        - "inventory/inventoryitem"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_inventory_items_param_inventory_item_id"
  /admin/api/2021-01/inventory_items.json:
    get:
      summary: "Retrieves a list of inventory items. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventoryitem#index-2021-01"
      parameters:
        - in: "query"
          name: "ids\n                  required"
          description: "Show only inventory items specified by a comma-separated list of IDs.\n                  (maximum: 100)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "ids"
          schema:
            type: "integer"
          description: "ids"
          required: false
      tags:
        - "inventory"
        - "inventoryitem"
        - "inventory/inventoryitem"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_inventory_items"
  /admin/api/2021-01/inventory_items/{inventory_item_id}.json:
    get:
      summary: "Retrieves a single inventory item by ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventoryitem#show-2021-01"
      parameters:
        - in: "path"
          name: "inventory_item_id"
          required: true
          schema:
            type: "string"
          description: "inventory_item_id"
      tags:
        - "inventory"
        - "inventoryitem"
        - "inventory/inventoryitem"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_inventory_items_param_inventory_item_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  inventory_item:
                    id: 808950810
                    sku: "new sku"
                summary: "Update an inventory item's SKU"
              example2:
                value:
                  inventory_item:
                    id: 808950810
                    cost: "25.00"
                summary: "Update an inventory item's unit cost"
      summary: "Updates an existing inventory item"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventoryitem#update-2021-01"
      parameters:
        - in: "path"
          name: "inventory_item_id"
          required: true
          schema:
            type: "string"
          description: "inventory_item_id"
      tags:
        - "inventory"
        - "inventoryitem"
        - "inventory/inventoryitem"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_inventory_items_param_inventory_item_id"
  /admin/api/unstable/inventory_items.json:
    get:
      summary: "Retrieves a list of inventory items. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventoryitem#index-unstable"
      parameters:
        - in: "query"
          name: "ids\n                  required"
          description: "Show only inventory items specified by a comma-separated list of IDs.\n                  (maximum: 100)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "ids"
          schema:
            type: "integer"
          description: "ids"
          required: false
      tags:
        - "inventory"
        - "inventoryitem"
        - "inventory/inventoryitem"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_inventory_items"
  /admin/api/unstable/inventory_items/{inventory_item_id}.json:
    get:
      summary: "Retrieves a single inventory item by ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventoryitem#show-unstable"
      parameters:
        - in: "path"
          name: "inventory_item_id"
          required: true
          schema:
            type: "string"
          description: "inventory_item_id"
      tags:
        - "inventory"
        - "inventoryitem"
        - "inventory/inventoryitem"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_inventory_items_param_inventory_item_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  inventory_item:
                    id: 808950810
                    sku: "new sku"
                summary: "Update an inventory item's SKU"
              example2:
                value:
                  inventory_item:
                    id: 808950810
                    cost: "25.00"
                summary: "Update an inventory item's unit cost"
      summary: "Updates an existing inventory item"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventoryitem#update-unstable"
      parameters:
        - in: "path"
          name: "inventory_item_id"
          required: true
          schema:
            type: "string"
          description: "inventory_item_id"
      tags:
        - "inventory"
        - "inventoryitem"
        - "inventory/inventoryitem"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_inventory_items_param_inventory_item_id"
  /admin/api/2020-01/inventory_levels.json:
    get:
      summary: "Retrieves a list of inventory levels.\n          You must include inventory_item_ids, location_ids, or both as filter parameters.\n          Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#index-2020-01"
      parameters:
        - in: "query"
          name: "inventory_item_ids"
          description: "A comma-separated list of inventory item IDs.\n                  (maximum: 50)"
          schema: {}
          required: false
        - in: "query"
          name: "location_ids"
          description: "A comma-separated list of location IDs. To find the ID of a location, use the Location resource.\n                  (maximum: 50)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show inventory levels updated at or after date (format: 2019-03-19T01:21:44-04:00)."
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_inventory_levels"
    delete:
      summary: "Deletes an inventory level of an inventory item at a location.\n          Deleting an inventory level for an inventory item removes that item from the specified location.\n          Every inventory item must have at least one inventory level. To move inventory to another location,\n          first connect the inventory item to another location, and then delete the previous inventory level."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#destroy-2020-01"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID for the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "inventory_item_id"
          schema:
            type: "integer"
          description: "inventory_item_id"
          required: false
        - in: "query"
          name: "location_id"
          schema:
            type: "integer"
          description: "location_id"
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_inventory_levels"
  /admin/api/2020-01/inventory_levels/adjust.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available_adjustment: 5
                summary: "Adjust the available quantity of an inventory item by 5 at a single location"
              example2:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available_adjustment: 5
                summary: "Adjusting inventory levels at a non-existent location fails and returns an error"
              example3:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available_adjustment: 5
                summary: "Adjusting inventory levels for an inventory item that is untracked fails and returns an error"
      summary: "Adjusts the inventory level of an inventory item at a single location"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#adjust-2020-01"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID of the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "available_adjustment\n                  required"
          description: "The amount to adjust the available inventory quantity. Send negative values to subtract from the current available quantity. For example, \"available_adjustment\": 2 increases the current available quantity by 2, and \"available_adjustment\": -3decreases the current available quantity by 3."
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_inventory_levels_adjust"
  /admin/api/2020-01/inventory_levels/connect.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  location_id: 192722535
                  inventory_item_id: 457924702
                summary: "Connect an inventory item to a location"
              example2:
                value:
                  location_id: 123
                  inventory_item_id: 457924702
                summary: "Connecting an inventory item to a non-existent location fails and returns an error"
              example3:
                value:
                  location_id: 48752903
                  inventory_item_id: 808950810
                summary: "Connecting an inventory item to a fulfillment service location without \"relocate_if_necessary\": true fails with a 422 error"
              example4:
                value:
                  location_id: 192722535
                  inventory_item_id: 457924702
                summary: "Connecting an inventory item to a location when the store hasn't enabled multiple locations fails with a 403 error"
      summary: "Connects an inventory item to a location by creating an inventory level at that location.\n        When connecting inventory items to locations, it's important to understand the rules around\n        fulfillment service locations."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#connect-2020-01"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID of the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "relocate_if_necessary"
          description: "Whether inventory for any previously connected locations will be relocated. This property is ignored when no fulfillment service location is involved. For more information, see Inventory levels and fulfillment service locations.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_inventory_levels_connect"
  /admin/api/2020-01/inventory_levels/set.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available: 42
                summary: "Set the available inventory at a location"
              example2:
                value:
                  location_id: 61629186
                  inventory_item_id: 808950810
                  available: 42
                summary: "Setting an inventory item to a fulfillment service without \"disconnect_if_necessary\": true fails with a 422 error"
      summary: "Sets the inventory level for an inventory item at a location.\n          If the specified location is not connected, it will be automatically connected first.\n          When connecting inventory items to locations, it's important to understand the rules around\n          fulfillment service locations."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#set-2020-01"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID for the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "available\n                  required"
          description: "Sets the available inventory quantity."
          schema: {}
          required: false
        - in: "query"
          name: "disconnect_if_necessary"
          description: "Whether inventory for any previously connected locations will be set to 0 and the locations disconnected. This property is ignored when no fulfillment service  is involved. For more information, see Inventory levels and fulfillment service locations.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_inventory_levels_set"
  /admin/api/2020-04/inventory_levels.json:
    get:
      summary: "Retrieves a list of inventory levels.\n          You must include inventory_item_ids, location_ids, or both as filter parameters.\n          Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#index-2020-04"
      parameters:
        - in: "query"
          name: "inventory_item_ids"
          description: "A comma-separated list of inventory item IDs.\n                  (maximum: 50)"
          schema: {}
          required: false
        - in: "query"
          name: "location_ids"
          description: "A comma-separated list of location IDs. To find the ID of a location, use the Location resource.\n                  (maximum: 50)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show inventory levels updated at or after date (format: 2019-03-19T01:21:44-04:00)."
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_inventory_levels"
    delete:
      summary: "Deletes an inventory level of an inventory item at a location.\n          Deleting an inventory level for an inventory item removes that item from the specified location.\n          Every inventory item must have at least one inventory level. To move inventory to another location,\n          first connect the inventory item to another location, and then delete the previous inventory level."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#destroy-2020-04"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID for the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "inventory_item_id"
          schema:
            type: "integer"
          description: "inventory_item_id"
          required: false
        - in: "query"
          name: "location_id"
          schema:
            type: "integer"
          description: "location_id"
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_inventory_levels"
  /admin/api/2020-04/inventory_levels/adjust.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available_adjustment: 5
                summary: "Adjust the available quantity of an inventory item by 5 at a single location"
              example2:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available_adjustment: 5
                summary: "Adjusting inventory levels at a non-existent location fails and returns an error"
              example3:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available_adjustment: 5
                summary: "Adjusting inventory levels for an inventory item that is untracked fails and returns an error"
      summary: "Adjusts the inventory level of an inventory item at a single location"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#adjust-2020-04"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID of the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "available_adjustment\n                  required"
          description: "The amount to adjust the available inventory quantity. Send negative values to subtract from the current available quantity. For example, \"available_adjustment\": 2 increases the current available quantity by 2, and \"available_adjustment\": -3decreases the current available quantity by 3."
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_inventory_levels_adjust"
  /admin/api/2020-04/inventory_levels/connect.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  location_id: 192722535
                  inventory_item_id: 457924702
                summary: "Connect an inventory item to a location"
              example2:
                value:
                  location_id: 123
                  inventory_item_id: 457924702
                summary: "Connecting an inventory item to a non-existent location fails and returns an error"
              example3:
                value:
                  location_id: 48752903
                  inventory_item_id: 808950810
                summary: "Connecting an inventory item to a fulfillment service location without \"relocate_if_necessary\": true fails with a 422 error"
              example4:
                value:
                  location_id: 192722535
                  inventory_item_id: 457924702
                summary: "Connecting an inventory item to a location when the store hasn't enabled multiple locations fails with a 403 error"
      summary: "Connects an inventory item to a location by creating an inventory level at that location.\n        When connecting inventory items to locations, it's important to understand the rules around\n        fulfillment service locations."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#connect-2020-04"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID of the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "relocate_if_necessary"
          description: "Whether inventory for any previously connected locations will be relocated. This property is ignored when no fulfillment service location is involved. For more information, see Inventory levels and fulfillment service locations.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_inventory_levels_connect"
  /admin/api/2020-04/inventory_levels/set.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available: 42
                summary: "Set the available inventory at a location"
              example2:
                value:
                  location_id: 61629186
                  inventory_item_id: 808950810
                  available: 42
                summary: "Setting an inventory item to a fulfillment service without \"disconnect_if_necessary\": true fails with a 422 error"
      summary: "Sets the inventory level for an inventory item at a location.\n          If the specified location is not connected, it will be automatically connected first.\n          When connecting inventory items to locations, it's important to understand the rules around\n          fulfillment service locations."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#set-2020-04"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID for the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "available\n                  required"
          description: "Sets the available inventory quantity."
          schema: {}
          required: false
        - in: "query"
          name: "disconnect_if_necessary"
          description: "Whether inventory for any previously connected locations will be set to 0 and the locations disconnected. This property is ignored when no fulfillment service  is involved. For more information, see Inventory levels and fulfillment service locations.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_inventory_levels_set"
  /admin/api/2020-07/inventory_levels.json:
    get:
      summary: "Retrieves a list of inventory levels.\n          You must include inventory_item_ids, location_ids, or both as filter parameters.\n          Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#index-2020-07"
      parameters:
        - in: "query"
          name: "inventory_item_ids"
          description: "A comma-separated list of inventory item IDs.\n                  (maximum: 50)"
          schema: {}
          required: false
        - in: "query"
          name: "location_ids"
          description: "A comma-separated list of location IDs. To find the ID of a location, use the Location resource.\n                  (maximum: 50)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show inventory levels updated at or after date (format: 2019-03-19T01:21:44-04:00)."
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_inventory_levels"
    delete:
      summary: "Deletes an inventory level of an inventory item at a location.\n          Deleting an inventory level for an inventory item removes that item from the specified location.\n          Every inventory item must have at least one inventory level. To move inventory to another location,\n          first connect the inventory item to another location, and then delete the previous inventory level."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#destroy-2020-07"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID for the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "inventory_item_id"
          schema:
            type: "integer"
          description: "inventory_item_id"
          required: false
        - in: "query"
          name: "location_id"
          schema:
            type: "integer"
          description: "location_id"
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_inventory_levels"
  /admin/api/2020-07/inventory_levels/adjust.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available_adjustment: 5
                summary: "Adjust the available quantity of an inventory item by 5 at a single location"
              example2:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available_adjustment: 5
                summary: "Adjusting inventory levels at a non-existent location fails and returns an error"
              example3:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available_adjustment: 5
                summary: "Adjusting inventory levels for an inventory item that is untracked fails and returns an error"
      summary: "Adjusts the inventory level of an inventory item at a single location"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#adjust-2020-07"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID of the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "available_adjustment\n                  required"
          description: "The amount to adjust the available inventory quantity. Send negative values to subtract from the current available quantity. For example, \"available_adjustment\": 2 increases the current available quantity by 2, and \"available_adjustment\": -3decreases the current available quantity by 3."
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_inventory_levels_adjust"
  /admin/api/2020-07/inventory_levels/connect.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  location_id: 192722535
                  inventory_item_id: 457924702
                summary: "Connect an inventory item to a location"
              example2:
                value:
                  location_id: 123
                  inventory_item_id: 457924702
                summary: "Connecting an inventory item to a non-existent location fails and returns an error"
              example3:
                value:
                  location_id: 48752903
                  inventory_item_id: 808950810
                summary: "Connecting an inventory item to a fulfillment service location without \"relocate_if_necessary\": true fails with a 422 error"
              example4:
                value:
                  location_id: 192722535
                  inventory_item_id: 457924702
                summary: "Connecting an inventory item to a location when the store hasn't enabled multiple locations fails with a 403 error"
      summary: "Connects an inventory item to a location by creating an inventory level at that location.\n        When connecting inventory items to locations, it's important to understand the rules around\n        fulfillment service locations."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#connect-2020-07"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID of the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "relocate_if_necessary"
          description: "Whether inventory for any previously connected locations will be relocated. This property is ignored when no fulfillment service location is involved. For more information, see Inventory levels and fulfillment service locations.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_inventory_levels_connect"
  /admin/api/2020-07/inventory_levels/set.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available: 42
                summary: "Set the available inventory at a location"
              example2:
                value:
                  location_id: 61629186
                  inventory_item_id: 808950810
                  available: 42
                summary: "Setting an inventory item to a fulfillment service without \"disconnect_if_necessary\": true fails with a 422 error"
      summary: "Sets the inventory level for an inventory item at a location.\n          If the specified location is not connected, it will be automatically connected first.\n          When connecting inventory items to locations, it's important to understand the rules around\n          fulfillment service locations."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#set-2020-07"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID for the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "available\n                  required"
          description: "Sets the available inventory quantity."
          schema: {}
          required: false
        - in: "query"
          name: "disconnect_if_necessary"
          description: "Whether inventory for any previously connected locations will be set to 0 and the locations disconnected. This property is ignored when no fulfillment service  is involved. For more information, see Inventory levels and fulfillment service locations.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_inventory_levels_set"
  /admin/api/2020-10/inventory_levels.json:
    get:
      summary: "Retrieves a list of inventory levels.\n          You must include inventory_item_ids, location_ids, or both as filter parameters.\n          Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#index-2020-10"
      parameters:
        - in: "query"
          name: "inventory_item_ids"
          description: "A comma-separated list of inventory item IDs.\n                  (maximum: 50)"
          schema: {}
          required: false
        - in: "query"
          name: "location_ids"
          description: "A comma-separated list of location IDs. To find the ID of a location, use the Location resource.\n                  (maximum: 50)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show inventory levels updated at or after date (format: 2019-03-19T01:21:44-04:00)."
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_inventory_levels"
    delete:
      summary: "Deletes an inventory level of an inventory item at a location.\n          Deleting an inventory level for an inventory item removes that item from the specified location.\n          Every inventory item must have at least one inventory level. To move inventory to another location,\n          first connect the inventory item to another location, and then delete the previous inventory level."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#destroy-2020-10"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID for the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "inventory_item_id"
          schema:
            type: "integer"
          description: "inventory_item_id"
          required: false
        - in: "query"
          name: "location_id"
          schema:
            type: "integer"
          description: "location_id"
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_inventory_levels"
  /admin/api/2020-10/inventory_levels/adjust.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available_adjustment: 5
                summary: "Adjust the available quantity of an inventory item by 5 at a single location"
              example2:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available_adjustment: 5
                summary: "Adjusting inventory levels at a non-existent location fails and returns an error"
              example3:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available_adjustment: 5
                summary: "Adjusting inventory levels for an inventory item that is untracked fails and returns an error"
      summary: "Adjusts the inventory level of an inventory item at a single location"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#adjust-2020-10"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID of the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "available_adjustment\n                  required"
          description: "The amount to adjust the available inventory quantity. Send negative values to subtract from the current available quantity. For example, \"available_adjustment\": 2 increases the current available quantity by 2, and \"available_adjustment\": -3decreases the current available quantity by 3."
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_inventory_levels_adjust"
  /admin/api/2020-10/inventory_levels/connect.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  location_id: 192722535
                  inventory_item_id: 457924702
                summary: "Connect an inventory item to a location"
              example2:
                value:
                  location_id: 123
                  inventory_item_id: 457924702
                summary: "Connecting an inventory item to a non-existent location fails and returns an error"
              example3:
                value:
                  location_id: 48752903
                  inventory_item_id: 808950810
                summary: "Connecting an inventory item to a fulfillment service location without \"relocate_if_necessary\": true fails with a 422 error"
              example4:
                value:
                  location_id: 192722535
                  inventory_item_id: 457924702
                summary: "Connecting an inventory item to a location when the store hasn't enabled multiple locations fails with a 403 error"
      summary: "Connects an inventory item to a location by creating an inventory level at that location.\n        When connecting inventory items to locations, it's important to understand the rules around\n        fulfillment service locations."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#connect-2020-10"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID of the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "relocate_if_necessary"
          description: "Whether inventory for any previously connected locations will be relocated. This property is ignored when no fulfillment service location is involved. For more information, see Inventory levels and fulfillment service locations.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_inventory_levels_connect"
  /admin/api/2020-10/inventory_levels/set.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available: 42
                summary: "Set the available inventory at a location"
              example2:
                value:
                  location_id: 61629186
                  inventory_item_id: 808950810
                  available: 42
                summary: "Setting an inventory item to a fulfillment service without \"disconnect_if_necessary\": true fails with a 422 error"
      summary: "Sets the inventory level for an inventory item at a location.\n          If the specified location is not connected, it will be automatically connected first.\n          When connecting inventory items to locations, it's important to understand the rules around\n          fulfillment service locations."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#set-2020-10"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID for the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "available\n                  required"
          description: "Sets the available inventory quantity."
          schema: {}
          required: false
        - in: "query"
          name: "disconnect_if_necessary"
          description: "Whether inventory for any previously connected locations will be set to 0 and the locations disconnected. This property is ignored when no fulfillment service  is involved. For more information, see Inventory levels and fulfillment service locations.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_inventory_levels_set"
  /admin/api/2021-01/inventory_levels.json:
    get:
      summary: "Retrieves a list of inventory levels.\n          You must include inventory_item_ids, location_ids, or both as filter parameters.\n          Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#index-2021-01"
      parameters:
        - in: "query"
          name: "inventory_item_ids"
          description: "A comma-separated list of inventory item IDs.\n                  (maximum: 50)"
          schema: {}
          required: false
        - in: "query"
          name: "location_ids"
          description: "A comma-separated list of location IDs. To find the ID of a location, use the Location resource.\n                  (maximum: 50)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show inventory levels updated at or after date (format: 2019-03-19T01:21:44-04:00)."
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_inventory_levels"
    delete:
      summary: "Deletes an inventory level of an inventory item at a location.\n          Deleting an inventory level for an inventory item removes that item from the specified location.\n          Every inventory item must have at least one inventory level. To move inventory to another location,\n          first connect the inventory item to another location, and then delete the previous inventory level."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#destroy-2021-01"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID for the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "inventory_item_id"
          schema:
            type: "integer"
          description: "inventory_item_id"
          required: false
        - in: "query"
          name: "location_id"
          schema:
            type: "integer"
          description: "location_id"
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_inventory_levels"
  /admin/api/2021-01/inventory_levels/adjust.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available_adjustment: 5
                summary: "Adjust the available quantity of an inventory item by 5 at a single location"
              example2:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available_adjustment: 5
                summary: "Adjusting inventory levels at a non-existent location fails and returns an error"
              example3:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available_adjustment: 5
                summary: "Adjusting inventory levels for an inventory item that is untracked fails and returns an error"
      summary: "Adjusts the inventory level of an inventory item at a single location"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#adjust-2021-01"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID of the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "available_adjustment\n                  required"
          description: "The amount to adjust the available inventory quantity. Send negative values to subtract from the current available quantity. For example, \"available_adjustment\": 2 increases the current available quantity by 2, and \"available_adjustment\": -3decreases the current available quantity by 3."
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_inventory_levels_adjust"
  /admin/api/2021-01/inventory_levels/connect.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  location_id: 192722535
                  inventory_item_id: 457924702
                summary: "Connect an inventory item to a location"
              example2:
                value:
                  location_id: 123
                  inventory_item_id: 457924702
                summary: "Connecting an inventory item to a non-existent location fails and returns an error"
              example3:
                value:
                  location_id: 48752903
                  inventory_item_id: 808950810
                summary: "Connecting an inventory item to a fulfillment service location without \"relocate_if_necessary\": true fails with a 422 error"
              example4:
                value:
                  location_id: 192722535
                  inventory_item_id: 457924702
                summary: "Connecting an inventory item to a location when the store hasn't enabled multiple locations fails with a 403 error"
      summary: "Connects an inventory item to a location by creating an inventory level at that location.\n        When connecting inventory items to locations, it's important to understand the rules around\n        fulfillment service locations."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#connect-2021-01"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID of the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "relocate_if_necessary"
          description: "Whether inventory for any previously connected locations will be relocated. This property is ignored when no fulfillment service location is involved. For more information, see Inventory levels and fulfillment service locations.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_inventory_levels_connect"
  /admin/api/2021-01/inventory_levels/set.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available: 42
                summary: "Set the available inventory at a location"
              example2:
                value:
                  location_id: 61629186
                  inventory_item_id: 808950810
                  available: 42
                summary: "Setting an inventory item to a fulfillment service without \"disconnect_if_necessary\": true fails with a 422 error"
      summary: "Sets the inventory level for an inventory item at a location.\n          If the specified location is not connected, it will be automatically connected first.\n          When connecting inventory items to locations, it's important to understand the rules around\n          fulfillment service locations."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#set-2021-01"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID for the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "available\n                  required"
          description: "Sets the available inventory quantity."
          schema: {}
          required: false
        - in: "query"
          name: "disconnect_if_necessary"
          description: "Whether inventory for any previously connected locations will be set to 0 and the locations disconnected. This property is ignored when no fulfillment service  is involved. For more information, see Inventory levels and fulfillment service locations.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_inventory_levels_set"
  /admin/api/unstable/inventory_levels.json:
    get:
      summary: "Retrieves a list of inventory levels.\n          You must include inventory_item_ids, location_ids, or both as filter parameters.\n          Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#index-unstable"
      parameters:
        - in: "query"
          name: "inventory_item_ids"
          description: "A comma-separated list of inventory item IDs.\n                  (maximum: 50)"
          schema: {}
          required: false
        - in: "query"
          name: "location_ids"
          description: "A comma-separated list of location IDs. To find the ID of a location, use the Location resource.\n                  (maximum: 50)"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show inventory levels updated at or after date (format: 2019-03-19T01:21:44-04:00)."
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_inventory_levels"
    delete:
      summary: "Deletes an inventory level of an inventory item at a location.\n          Deleting an inventory level for an inventory item removes that item from the specified location.\n          Every inventory item must have at least one inventory level. To move inventory to another location,\n          first connect the inventory item to another location, and then delete the previous inventory level."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#destroy-unstable"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID for the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "inventory_item_id"
          schema:
            type: "integer"
          description: "inventory_item_id"
          required: false
        - in: "query"
          name: "location_id"
          schema:
            type: "integer"
          description: "location_id"
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_inventory_levels"
  /admin/api/unstable/inventory_levels/adjust.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available_adjustment: 5
                summary: "Adjust the available quantity of an inventory item by 5 at a single location"
              example2:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available_adjustment: 5
                summary: "Adjusting inventory levels at a non-existent location fails and returns an error"
              example3:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available_adjustment: 5
                summary: "Adjusting inventory levels for an inventory item that is untracked fails and returns an error"
      summary: "Adjusts the inventory level of an inventory item at a single location"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#adjust-unstable"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID of the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "available_adjustment\n                  required"
          description: "The amount to adjust the available inventory quantity. Send negative values to subtract from the current available quantity. For example, \"available_adjustment\": 2 increases the current available quantity by 2, and \"available_adjustment\": -3decreases the current available quantity by 3."
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_inventory_levels_adjust"
  /admin/api/unstable/inventory_levels/connect.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  location_id: 192722535
                  inventory_item_id: 457924702
                summary: "Connect an inventory item to a location"
              example2:
                value:
                  location_id: 123
                  inventory_item_id: 457924702
                summary: "Connecting an inventory item to a non-existent location fails and returns an error"
              example3:
                value:
                  location_id: 48752903
                  inventory_item_id: 808950810
                summary: "Connecting an inventory item to a fulfillment service location without \"relocate_if_necessary\": true fails with a 422 error"
              example4:
                value:
                  location_id: 192722535
                  inventory_item_id: 457924702
                summary: "Connecting an inventory item to a location when the store hasn't enabled multiple locations fails with a 403 error"
      summary: "Connects an inventory item to a location by creating an inventory level at that location.\n        When connecting inventory items to locations, it's important to understand the rules around\n        fulfillment service locations."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#connect-unstable"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID of the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "relocate_if_necessary"
          description: "Whether inventory for any previously connected locations will be relocated. This property is ignored when no fulfillment service location is involved. For more information, see Inventory levels and fulfillment service locations.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_inventory_levels_connect"
  /admin/api/unstable/inventory_levels/set.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  location_id: 905684977
                  inventory_item_id: 808950810
                  available: 42
                summary: "Set the available inventory at a location"
              example2:
                value:
                  location_id: 61629186
                  inventory_item_id: 808950810
                  available: 42
                summary: "Setting an inventory item to a fulfillment service without \"disconnect_if_necessary\": true fails with a 422 error"
      summary: "Sets the inventory level for an inventory item at a location.\n          If the specified location is not connected, it will be automatically connected first.\n          When connecting inventory items to locations, it's important to understand the rules around\n          fulfillment service locations."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/inventorylevel#set-unstable"
      parameters:
        - in: "query"
          name: "inventory_item_id\n                  required"
          description: "The ID for the inventory item."
          schema: {}
          required: false
        - in: "query"
          name: "location_id\n                  required"
          description: "The ID of the location that the inventory level belongs to. To find the ID of the location, use the Location resource."
          schema: {}
          required: false
        - in: "query"
          name: "available\n                  required"
          description: "Sets the available inventory quantity."
          schema: {}
          required: false
        - in: "query"
          name: "disconnect_if_necessary"
          description: "Whether inventory for any previously connected locations will be set to 0 and the locations disconnected. This property is ignored when no fulfillment service  is involved. For more information, see Inventory levels and fulfillment service locations.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "inventory"
        - "inventorylevel"
        - "inventory/inventorylevel"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_inventory_levels_set"
  /admin/api/2020-01/locations.json:
    get:
      summary: "Retrieves a list of locations"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#index-2020-01"
      parameters: []
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_locations"
  /admin/api/2020-01/locations/{location_id}.json:
    get:
      summary: "Retrieves a single location by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#show-2020-01"
      parameters:
        - in: "path"
          name: "location_id"
          required: true
          schema:
            type: "string"
          description: "location_id"
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_locations_param_location_id"
  /admin/api/2020-01/locations/count.json:
    get:
      summary: "Retrieves a count of locations"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#count-2020-01"
      parameters: []
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_locations_count"
  /admin/api/2020-01/locations/{location_id}/inventory_levels.json:
    get:
      summary: "Retrieves a list of inventory levels for a location. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#inventory_levels-2020-01"
      parameters:
        - in: "path"
          name: "location_id"
          required: true
          schema:
            type: "string"
          description: "location_id"
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_locations_param_location_id_inventory_levels"
  /admin/api/2020-04/locations.json:
    get:
      summary: "Retrieves a list of locations"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#index-2020-04"
      parameters: []
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_locations"
  /admin/api/2020-04/locations/{location_id}.json:
    get:
      summary: "Retrieves a single location by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#show-2020-04"
      parameters:
        - in: "path"
          name: "location_id"
          required: true
          schema:
            type: "string"
          description: "location_id"
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_locations_param_location_id"
  /admin/api/2020-04/locations/count.json:
    get:
      summary: "Retrieves a count of locations"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#count-2020-04"
      parameters: []
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_locations_count"
  /admin/api/2020-04/locations/{location_id}/inventory_levels.json:
    get:
      summary: "Retrieves a list of inventory levels for a location. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#inventory_levels-2020-04"
      parameters:
        - in: "path"
          name: "location_id"
          required: true
          schema:
            type: "string"
          description: "location_id"
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_locations_param_location_id_inventory_levels"
  /admin/api/2020-07/locations.json:
    get:
      summary: "Retrieves a list of locations"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#index-2020-07"
      parameters: []
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_locations"
  /admin/api/2020-07/locations/{location_id}.json:
    get:
      summary: "Retrieves a single location by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#show-2020-07"
      parameters:
        - in: "path"
          name: "location_id"
          required: true
          schema:
            type: "string"
          description: "location_id"
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_locations_param_location_id"
  /admin/api/2020-07/locations/count.json:
    get:
      summary: "Retrieves a count of locations"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#count-2020-07"
      parameters: []
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_locations_count"
  /admin/api/2020-07/locations/{location_id}/inventory_levels.json:
    get:
      summary: "Retrieves a list of inventory levels for a location. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#inventory_levels-2020-07"
      parameters:
        - in: "path"
          name: "location_id"
          required: true
          schema:
            type: "string"
          description: "location_id"
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_locations_param_location_id_inventory_levels"
  /admin/api/2020-10/locations.json:
    get:
      summary: "Retrieves a list of locations"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#index-2020-10"
      parameters: []
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_locations"
  /admin/api/2020-10/locations/{location_id}.json:
    get:
      summary: "Retrieves a single location by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#show-2020-10"
      parameters:
        - in: "path"
          name: "location_id"
          required: true
          schema:
            type: "string"
          description: "location_id"
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_locations_param_location_id"
  /admin/api/2020-10/locations/count.json:
    get:
      summary: "Retrieves a count of locations"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#count-2020-10"
      parameters: []
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_locations_count"
  /admin/api/2020-10/locations/{location_id}/inventory_levels.json:
    get:
      summary: "Retrieves a list of inventory levels for a location. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#inventory_levels-2020-10"
      parameters:
        - in: "path"
          name: "location_id"
          required: true
          schema:
            type: "string"
          description: "location_id"
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_locations_param_location_id_inventory_levels"
  /admin/api/2021-01/locations.json:
    get:
      summary: "Retrieves a list of locations"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#index-2021-01"
      parameters: []
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_locations"
  /admin/api/2021-01/locations/{location_id}.json:
    get:
      summary: "Retrieves a single location by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#show-2021-01"
      parameters:
        - in: "path"
          name: "location_id"
          required: true
          schema:
            type: "string"
          description: "location_id"
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_locations_param_location_id"
  /admin/api/2021-01/locations/count.json:
    get:
      summary: "Retrieves a count of locations"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#count-2021-01"
      parameters: []
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_locations_count"
  /admin/api/2021-01/locations/{location_id}/inventory_levels.json:
    get:
      summary: "Retrieves a list of inventory levels for a location. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#inventory_levels-2021-01"
      parameters:
        - in: "path"
          name: "location_id"
          required: true
          schema:
            type: "string"
          description: "location_id"
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_locations_param_location_id_inventory_levels"
  /admin/api/unstable/locations.json:
    get:
      summary: "Retrieves a list of locations"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#index-unstable"
      parameters: []
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_locations"
  /admin/api/unstable/locations/{location_id}.json:
    get:
      summary: "Retrieves a single location by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#show-unstable"
      parameters:
        - in: "path"
          name: "location_id"
          required: true
          schema:
            type: "string"
          description: "location_id"
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_locations_param_location_id"
  /admin/api/unstable/locations/count.json:
    get:
      summary: "Retrieves a count of locations"
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#count-unstable"
      parameters: []
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_locations_count"
  /admin/api/unstable/locations/{location_id}/inventory_levels.json:
    get:
      summary: "Retrieves a list of inventory levels for a location. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/inventory/location#inventory_levels-unstable"
      parameters:
        - in: "path"
          name: "location_id"
          required: true
          schema:
            type: "string"
          description: "location_id"
      tags:
        - "inventory"
        - "location"
        - "inventory/location"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_locations_param_location_id_inventory_levels"
  /admin/api/2020-01/metafields.json:
    get:
      summary: "Retrieves a list of metafields that belong to a Product Image resource."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#index-2020-01"
      parameters:
        - in: "query"
          name: "metafield[owner_id]"
          schema:
            type: "integer"
          description: "metafield[owner_id]"
          required: false
        - in: "query"
          name: "metafield[owner_resource]"
          schema:
            type: "string"
          description: "metafield[owner_resource]"
          required: false
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_metafields"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  metafield:
                    namespace: "inventory"
                    key: "warehouse"
                    value: 25
                    value_type: "integer"
                summary: "Create a new metafield for a Shop resource"
              example2:
                value:
                  metafield:
                    namespace: "inventory"
                    key: "warehouse"
                    value: 25
                    value_type: "integer"
                summary: "Create a new metafield for a Product resource"
              example3:
                value:
                  metafield:
                    key: null
                summary: "Creating a metafield without a key will fail and return an error"
      summary: "Creates a new metafield for a resource."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#create-2020-01"
      parameters: []
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_metafields"
  /admin/api/2020-01/metafields/count.json:
    get:
      summary: "Retrieves a count of a resource's metafields."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#count-2020-01"
      parameters: []
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_metafields_count"
  /admin/api/2020-01/metafields/{metafield_id}.json:
    get:
      summary: "Retrieves a single metafield from a resource by its ID."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#show-2020-01"
      parameters:
        - in: "path"
          name: "metafield_id"
          required: true
          schema:
            type: "string"
          description: "metafield_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_metafields_param_metafield_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  metafield:
                    id: 721389482
                    value: "something new"
                    value_type: "string"
                summary: "Update a metafield. The namespace and key of an existing metafield can't be changed."
              example2:
                value:
                  metafield:
                    id: 845366454
                    value: "titre"
                    value_type: "string"
                summary: "Update a metafield. The namespace and key of an existing metafield can't be changed."
      summary: "Updates a metafield."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#update-2020-01"
      parameters:
        - in: "path"
          name: "metafield_id"
          required: true
          schema:
            type: "string"
          description: "metafield_id"
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_metafields_param_metafield_id"
    delete:
      summary: "Deletes a metafield by its ID."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#destroy-2020-01"
      parameters:
        - in: "path"
          name: "metafield_id"
          required: true
          schema:
            type: "string"
          description: "metafield_id"
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_metafields_param_metafield_id"
  /admin/api/2020-04/metafields.json:
    get:
      summary: "Retrieves a list of metafields that belong to a Product Image resource."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#index-2020-04"
      parameters:
        - in: "query"
          name: "metafield[owner_id]"
          schema:
            type: "integer"
          description: "metafield[owner_id]"
          required: false
        - in: "query"
          name: "metafield[owner_resource]"
          schema:
            type: "string"
          description: "metafield[owner_resource]"
          required: false
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_metafields"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  metafield:
                    namespace: "inventory"
                    key: "warehouse"
                    value: 25
                    value_type: "integer"
                summary: "Create a new metafield for a Shop resource"
              example2:
                value:
                  metafield:
                    namespace: "inventory"
                    key: "warehouse"
                    value: 25
                    value_type: "integer"
                summary: "Create a new metafield for a Product resource"
              example3:
                value:
                  metafield:
                    key: null
                summary: "Creating a metafield without a key will fail and return an error"
      summary: "Creates a new metafield for a resource."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#create-2020-04"
      parameters: []
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_metafields"
  /admin/api/2020-04/metafields/count.json:
    get:
      summary: "Retrieves a count of a resource's metafields."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#count-2020-04"
      parameters: []
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_metafields_count"
  /admin/api/2020-04/metafields/{metafield_id}.json:
    get:
      summary: "Retrieves a single metafield from a resource by its ID."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#show-2020-04"
      parameters:
        - in: "path"
          name: "metafield_id"
          required: true
          schema:
            type: "string"
          description: "metafield_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_metafields_param_metafield_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  metafield:
                    id: 721389482
                    value: "something new"
                    value_type: "string"
                summary: "Update a metafield. The namespace and key of an existing metafield can't be changed."
              example2:
                value:
                  metafield:
                    id: 845366454
                    value: "titre"
                    value_type: "string"
                summary: "Update a metafield. The namespace and key of an existing metafield can't be changed."
      summary: "Updates a metafield."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#update-2020-04"
      parameters:
        - in: "path"
          name: "metafield_id"
          required: true
          schema:
            type: "string"
          description: "metafield_id"
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_metafields_param_metafield_id"
    delete:
      summary: "Deletes a metafield by its ID."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#destroy-2020-04"
      parameters:
        - in: "path"
          name: "metafield_id"
          required: true
          schema:
            type: "string"
          description: "metafield_id"
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_metafields_param_metafield_id"
  /admin/api/2020-07/metafields.json:
    get:
      summary: "Retrieves a list of metafields that belong to a Product Image resource."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#index-2020-07"
      parameters:
        - in: "query"
          name: "metafield[owner_id]"
          schema:
            type: "integer"
          description: "metafield[owner_id]"
          required: false
        - in: "query"
          name: "metafield[owner_resource]"
          schema:
            type: "string"
          description: "metafield[owner_resource]"
          required: false
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_metafields"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  metafield:
                    namespace: "inventory"
                    key: "warehouse"
                    value: 25
                    value_type: "integer"
                summary: "Create a new metafield for a Shop resource"
              example2:
                value:
                  metafield:
                    namespace: "inventory"
                    key: "warehouse"
                    value: 25
                    value_type: "integer"
                summary: "Create a new metafield for a Product resource"
              example3:
                value:
                  metafield:
                    key: null
                summary: "Creating a metafield without a key will fail and return an error"
      summary: "Creates a new metafield for a resource."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#create-2020-07"
      parameters: []
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_metafields"
  /admin/api/2020-07/metafields/count.json:
    get:
      summary: "Retrieves a count of a resource's metafields."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#count-2020-07"
      parameters: []
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_metafields_count"
  /admin/api/2020-07/metafields/{metafield_id}.json:
    get:
      summary: "Retrieves a single metafield from a resource by its ID."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#show-2020-07"
      parameters:
        - in: "path"
          name: "metafield_id"
          required: true
          schema:
            type: "string"
          description: "metafield_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_metafields_param_metafield_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  metafield:
                    id: 721389482
                    value: "something new"
                    value_type: "string"
                summary: "Update a metafield. The namespace and key of an existing metafield can't be changed."
              example2:
                value:
                  metafield:
                    id: 845366454
                    value: "titre"
                    value_type: "string"
                summary: "Update a metafield. The namespace and key of an existing metafield can't be changed."
      summary: "Updates a metafield."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#update-2020-07"
      parameters:
        - in: "path"
          name: "metafield_id"
          required: true
          schema:
            type: "string"
          description: "metafield_id"
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_metafields_param_metafield_id"
    delete:
      summary: "Deletes a metafield by its ID."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#destroy-2020-07"
      parameters:
        - in: "path"
          name: "metafield_id"
          required: true
          schema:
            type: "string"
          description: "metafield_id"
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_metafields_param_metafield_id"
  /admin/api/2020-10/metafields.json:
    get:
      summary: "Retrieves a list of metafields that belong to a Product Image resource."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#index-2020-10"
      parameters:
        - in: "query"
          name: "metafield[owner_id]"
          schema:
            type: "integer"
          description: "metafield[owner_id]"
          required: false
        - in: "query"
          name: "metafield[owner_resource]"
          schema:
            type: "string"
          description: "metafield[owner_resource]"
          required: false
      tags:
        - "metafield"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_metafields"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  metafield:
                    namespace: "inventory"
                    key: "warehouse"
                    value: 25
                    value_type: "integer"
                summary: "Create a new metafield for a Shop resource"
              example2:
                value:
                  metafield:
                    namespace: "inventory"
                    key: "warehouse"
                    value: 25
                    value_type: "integer"
                summary: "Create a new metafield for a Product resource"
              example3:
                value:
                  metafield:
                    key: null
                summary: "Creating a metafield without a key will fail and return an error"
      summary: "Creates a new metafield for a resource."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#create-2020-10"
      parameters: []
      tags:
        - "metafield"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_metafields"
  /admin/api/2020-10/metafields/count.json:
    get:
      summary: "Retrieves a count of a resource's metafields."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#count-2020-10"
      parameters: []
      tags:
        - "metafield"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_metafields_count"
  /admin/api/2020-10/metafields/{metafield_id}.json:
    get:
      summary: "Retrieves a single metafield from a resource by its ID."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#show-2020-10"
      parameters:
        - in: "path"
          name: "metafield_id"
          required: true
          schema:
            type: "string"
          description: "metafield_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "metafield"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_metafields_param_metafield_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  metafield:
                    id: 721389482
                    value: "something new"
                    value_type: "string"
                summary: "Update a metafield. The namespace and key of an existing metafield can't be changed."
              example2:
                value:
                  metafield:
                    id: 845366454
                    value: "titre"
                    value_type: "string"
                summary: "Update a metafield. The namespace and key of an existing metafield can't be changed."
      summary: "Updates a metafield."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#update-2020-10"
      parameters:
        - in: "path"
          name: "metafield_id"
          required: true
          schema:
            type: "string"
          description: "metafield_id"
      tags:
        - "metafield"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_metafields_param_metafield_id"
    delete:
      summary: "Deletes a metafield by its ID."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#destroy-2020-10"
      parameters:
        - in: "path"
          name: "metafield_id"
          required: true
          schema:
            type: "string"
          description: "metafield_id"
      tags:
        - "metafield"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_metafields_param_metafield_id"
  /admin/api/2021-01/metafields.json:
    get:
      summary: "Retrieves a list of metafields that belong to a Product Image resource."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#index-2021-01"
      parameters:
        - in: "query"
          name: "metafield[owner_id]"
          schema:
            type: "integer"
          description: "metafield[owner_id]"
          required: false
        - in: "query"
          name: "metafield[owner_resource]"
          schema:
            type: "string"
          description: "metafield[owner_resource]"
          required: false
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_metafields"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  metafield:
                    namespace: "inventory"
                    key: "warehouse"
                    value: 25
                    value_type: "integer"
                summary: "Create a new metafield for a Shop resource"
              example2:
                value:
                  metafield:
                    namespace: "inventory"
                    key: "warehouse"
                    value: 25
                    value_type: "integer"
                summary: "Create a new metafield for a Product resource"
              example3:
                value:
                  metafield:
                    key: null
                summary: "Creating a metafield without a key will fail and return an error"
      summary: "Creates a new metafield for a resource."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#create-2021-01"
      parameters: []
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_metafields"
  /admin/api/2021-01/metafields/count.json:
    get:
      summary: "Retrieves a count of a resource's metafields."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#count-2021-01"
      parameters: []
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_metafields_count"
  /admin/api/2021-01/metafields/{metafield_id}.json:
    get:
      summary: "Retrieves a single metafield from a resource by its ID."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#show-2021-01"
      parameters:
        - in: "path"
          name: "metafield_id"
          required: true
          schema:
            type: "string"
          description: "metafield_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_metafields_param_metafield_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  metafield:
                    id: 721389482
                    value: "something new"
                    value_type: "string"
                summary: "Update a metafield. The namespace and key of an existing metafield can't be changed."
              example2:
                value:
                  metafield:
                    id: 845366454
                    value: "titre"
                    value_type: "string"
                summary: "Update a metafield. The namespace and key of an existing metafield can't be changed."
      summary: "Updates a metafield."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#update-2021-01"
      parameters:
        - in: "path"
          name: "metafield_id"
          required: true
          schema:
            type: "string"
          description: "metafield_id"
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_metafields_param_metafield_id"
    delete:
      summary: "Deletes a metafield by its ID."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#destroy-2021-01"
      parameters:
        - in: "path"
          name: "metafield_id"
          required: true
          schema:
            type: "string"
          description: "metafield_id"
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_metafields_param_metafield_id"
  /admin/api/unstable/metafields.json:
    get:
      summary: "Retrieves a list of metafields that belong to a Product Image resource."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#index-unstable"
      parameters:
        - in: "query"
          name: "metafield[owner_id]"
          schema:
            type: "integer"
          description: "metafield[owner_id]"
          required: false
        - in: "query"
          name: "metafield[owner_resource]"
          schema:
            type: "string"
          description: "metafield[owner_resource]"
          required: false
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_metafields"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  metafield:
                    namespace: "inventory"
                    key: "warehouse"
                    value: 25
                    value_type: "integer"
                summary: "Create a new metafield for a Shop resource"
              example2:
                value:
                  metafield:
                    namespace: "inventory"
                    key: "warehouse"
                    value: 25
                    value_type: "integer"
                summary: "Create a new metafield for a Product resource"
              example3:
                value:
                  metafield:
                    key: null
                summary: "Creating a metafield without a key will fail and return an error"
      summary: "Creates a new metafield for a resource."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#create-unstable"
      parameters: []
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_metafields"
  /admin/api/unstable/metafields/count.json:
    get:
      summary: "Retrieves a count of a resource's metafields."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#count-unstable"
      parameters: []
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_metafields_count"
  /admin/api/unstable/metafields/{metafield_id}.json:
    get:
      summary: "Retrieves a single metafield from a resource by its ID."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#show-unstable"
      parameters:
        - in: "path"
          name: "metafield_id"
          required: true
          schema:
            type: "string"
          description: "metafield_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_metafields_param_metafield_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  metafield:
                    id: 721389482
                    value: "something new"
                    value_type: "string"
                summary: "Update a metafield. The namespace and key of an existing metafield can't be changed."
              example2:
                value:
                  metafield:
                    id: 845366454
                    value: "titre"
                    value_type: "string"
                summary: "Update a metafield. The namespace and key of an existing metafield can't be changed."
      summary: "Updates a metafield."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#update-unstable"
      parameters:
        - in: "path"
          name: "metafield_id"
          required: true
          schema:
            type: "string"
          description: "metafield_id"
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_metafields_param_metafield_id"
    delete:
      summary: "Deletes a metafield by its ID."
      description: "https://shopify.dev/docs/admin-api/rest/reference/metafield#destroy-unstable"
      parameters:
        - in: "path"
          name: "metafield_id"
          required: true
          schema:
            type: "string"
          description: "metafield_id"
      tags:
        - "metafield"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_metafields_param_metafield_id"
  /admin/api/2020-01/blogs/{blog_id}/articles.json:
    get:
      summary: "Retrieves a list of all articles from a blog. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#index-2020-01"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show articles created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show articles created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show articles last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show articles last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show articles published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show articles published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Retrieve results based on their published status.\n                  (default: any)\n                    \n                        published: Show only published articles.\n                        unpublished: Show only unpublished articles.\n                        any: Show articles of any published status."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Retrieve an article with a specific handle."
          schema: {}
          required: false
        - in: "query"
          name: "tag"
          description: "Filter articles with a specific tag."
          schema: {}
          required: false
        - in: "query"
          name: "author"
          description: "Filter articles by article author."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_blogs_param_blog_id_articles"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                summary: "Create an article with HTML markup for a blog"
              example2:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published: false
                summary: "Create an unpublished article for a blog"
              example3:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      attachment: "R0lGODlhAQABAIAAAAAAAAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==\n"
                summary: "Create an article with a base64 encoded image"
              example4:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      src: "http://example.com/rails_logo.gif"
                      alt: "Rails logo"
                summary: "Create an article with an image, which will be downloaded by Shopify"
              example5:
                value:
                  article:
                    body: "something"
                summary: "Creating an article without a title fails and returns an error"
              example6:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create an article with a metafield"
      summary: "Creates an article for a blog"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#create-2020-01"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_blogs_param_blog_id_articles"
  /admin/api/2020-01/blogs/{blog_id}/articles/count.json:
    get:
      summary: "Retrieves a count of all articles from a blog"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#count-2020-01"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "query"
          name: "created_at_min"
          description: "Count articles created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count articles created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count articles last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count articles last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Count articles published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Count articles published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Count articles with a given published status.\n                  (default: any)\n                    \n                        published: Count only published articles.\n                        unpublished: Count only unpublished articles.\n                        any: Count all articles."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_blogs_param_blog_id_articles_count"
  /admin/api/2020-01/blogs/{blog_id}/articles/{article_id}.json:
    get:
      summary: "Retrieves a single article"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#show-2020-01"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "path"
          name: "article_id"
          required: true
          schema:
            type: "string"
          description: "article_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specifed by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_blogs_param_blog_id_articles_param_article_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  article:
                    id: 134645308
                    title: "My new Title"
                    author: "Your name"
                    tags: "Tags, Will Be, Updated"
                    body_html: "<p>Look, I can even update through a web service.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                summary: "Update an existing article of a blog"
              example2:
                value:
                  article:
                    id: 134645308
                    published: true
                summary: "Publish a hidden article"
              example3:
                value:
                  article:
                    id: 134645308
                    published: false
                summary: "Hide a published article"
              example4:
                value:
                  article:
                    id: 134645308
                    title: "My new Title"
                    author: "Your name"
                    tags: "Tags, Will Be, Updated"
                    body_html: "<p>Look, I can even update through a web service.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                summary: "Update an article's image"
              example5:
                value:
                  article:
                    id: 134645308
                    title: "My new Title"
                    author: "Your name"
                    tags: "Tags, Will Be, Updated"
                    body_html: "<p>Look, I can even update through a web service.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      alt: "Rails logo"
                summary: "Update the alt text for an article image"
              example6:
                value:
                  article:
                    id: 134645308
                    image: ""
                summary: "Remove the image from an article"
              example7:
                value:
                  article:
                    id: 134645308
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add a metafield to an existing article"
      summary: "Updates an article"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#update-2020-01"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "path"
          name: "article_id"
          required: true
          schema:
            type: "string"
          description: "article_id"
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_blogs_param_blog_id_articles_param_article_id"
    delete:
      summary: "Deletes an article"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#destroy-2020-01"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "path"
          name: "article_id"
          required: true
          schema:
            type: "string"
          description: "article_id"
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_blogs_param_blog_id_articles_param_article_id"
  /admin/api/2020-01/articles/authors.json:
    get:
      summary: "Retrieves a list all of article authors"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#authors-2020-01"
      parameters: []
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_articles_authors"
  /admin/api/2020-01/articles/tags.json:
    get:
      summary: "Retrieves a list of all the tags"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#tags-2020-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of tags to retrieve."
          schema: {}
          required: false
        - in: "query"
          name: "popular"
          description: "A flag for ordering retrieved tags. If present in the request, then the results will be ordered by popularity, starting with the most popular tag."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_articles_tags"
  /admin/api/2020-04/blogs/{blog_id}/articles.json:
    get:
      summary: "Retrieves a list of all articles from a blog. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#index-2020-04"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show articles created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show articles created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show articles last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show articles last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show articles published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show articles published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Retrieve results based on their published status.\n                  (default: any)\n                    \n                        published: Show only published articles.\n                        unpublished: Show only unpublished articles.\n                        any: Show articles of any published status."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Retrieve an article with a specific handle."
          schema: {}
          required: false
        - in: "query"
          name: "tag"
          description: "Filter articles with a specific tag."
          schema: {}
          required: false
        - in: "query"
          name: "author"
          description: "Filter articles by article author."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_blogs_param_blog_id_articles"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                summary: "Create an article with HTML markup for a blog"
              example2:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published: false
                summary: "Create an unpublished article for a blog"
              example3:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      attachment: "R0lGODlhAQABAIAAAAAAAAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==\n"
                summary: "Create an article with a base64 encoded image"
              example4:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      src: "http://example.com/rails_logo.gif"
                      alt: "Rails logo"
                summary: "Create an article with an image, which will be downloaded by Shopify"
              example5:
                value:
                  article:
                    body: "something"
                summary: "Creating an article without a title fails and returns an error"
              example6:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create an article with a metafield"
      summary: "Creates an article for a blog"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#create-2020-04"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_blogs_param_blog_id_articles"
  /admin/api/2020-04/blogs/{blog_id}/articles/count.json:
    get:
      summary: "Retrieves a count of all articles from a blog"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#count-2020-04"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "query"
          name: "created_at_min"
          description: "Count articles created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count articles created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count articles last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count articles last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Count articles published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Count articles published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Count articles with a given published status.\n                  (default: any)\n                    \n                        published: Count only published articles.\n                        unpublished: Count only unpublished articles.\n                        any: Count all articles."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_blogs_param_blog_id_articles_count"
  /admin/api/2020-04/blogs/{blog_id}/articles/{article_id}.json:
    get:
      summary: "Retrieves a single article"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#show-2020-04"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "path"
          name: "article_id"
          required: true
          schema:
            type: "string"
          description: "article_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specifed by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_blogs_param_blog_id_articles_param_article_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  article:
                    id: 134645308
                    title: "My new Title"
                    author: "Your name"
                    tags: "Tags, Will Be, Updated"
                    body_html: "<p>Look, I can even update through a web service.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                summary: "Update an existing article of a blog"
              example2:
                value:
                  article:
                    id: 134645308
                    published: true
                summary: "Publish a hidden article"
              example3:
                value:
                  article:
                    id: 134645308
                    published: false
                summary: "Hide a published article"
              example4:
                value:
                  article:
                    id: 134645308
                    title: "My new Title"
                    author: "Your name"
                    tags: "Tags, Will Be, Updated"
                    body_html: "<p>Look, I can even update through a web service.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                summary: "Update an article's image"
              example5:
                value:
                  article:
                    id: 134645308
                    title: "My new Title"
                    author: "Your name"
                    tags: "Tags, Will Be, Updated"
                    body_html: "<p>Look, I can even update through a web service.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      alt: "Rails logo"
                summary: "Update the alt text for an article image"
              example6:
                value:
                  article:
                    id: 134645308
                    image: ""
                summary: "Remove the image from an article"
              example7:
                value:
                  article:
                    id: 134645308
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add a metafield to an existing article"
      summary: "Updates an article"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#update-2020-04"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "path"
          name: "article_id"
          required: true
          schema:
            type: "string"
          description: "article_id"
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_blogs_param_blog_id_articles_param_article_id"
    delete:
      summary: "Deletes an article"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#destroy-2020-04"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "path"
          name: "article_id"
          required: true
          schema:
            type: "string"
          description: "article_id"
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_blogs_param_blog_id_articles_param_article_id"
  /admin/api/2020-04/articles/authors.json:
    get:
      summary: "Retrieves a list all of article authors"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#authors-2020-04"
      parameters: []
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_articles_authors"
  /admin/api/2020-04/articles/tags.json:
    get:
      summary: "Retrieves a list of all the tags"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#tags-2020-04"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of tags to retrieve."
          schema: {}
          required: false
        - in: "query"
          name: "popular"
          description: "A flag for ordering retrieved tags. If present in the request, then the results will be ordered by popularity, starting with the most popular tag."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_articles_tags"
  /admin/api/2020-07/blogs/{blog_id}/articles.json:
    get:
      summary: "Retrieves a list of all articles from a blog. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#index-2020-07"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show articles created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show articles created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show articles last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show articles last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show articles published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show articles published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Retrieve results based on their published status.\n                  (default: any)\n                    \n                        published: Show only published articles.\n                        unpublished: Show only unpublished articles.\n                        any: Show articles of any published status."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Retrieve an article with a specific handle."
          schema: {}
          required: false
        - in: "query"
          name: "tag"
          description: "Filter articles with a specific tag."
          schema: {}
          required: false
        - in: "query"
          name: "author"
          description: "Filter articles by article author."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_blogs_param_blog_id_articles"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                summary: "Create an article with HTML markup for a blog"
              example2:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published: false
                summary: "Create an unpublished article for a blog"
              example3:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      attachment: "R0lGODlhAQABAIAAAAAAAAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==\n"
                summary: "Create an article with a base64 encoded image"
              example4:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      src: "http://example.com/rails_logo.gif"
                      alt: "Rails logo"
                summary: "Create an article with an image, which will be downloaded by Shopify"
              example5:
                value:
                  article:
                    body: "something"
                summary: "Creating an article without a title fails and returns an error"
              example6:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create an article with a metafield"
      summary: "Creates an article for a blog"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#create-2020-07"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_blogs_param_blog_id_articles"
  /admin/api/2020-07/blogs/{blog_id}/articles/count.json:
    get:
      summary: "Retrieves a count of all articles from a blog"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#count-2020-07"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "query"
          name: "created_at_min"
          description: "Count articles created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count articles created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count articles last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count articles last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Count articles published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Count articles published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Count articles with a given published status.\n                  (default: any)\n                    \n                        published: Count only published articles.\n                        unpublished: Count only unpublished articles.\n                        any: Count all articles."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_blogs_param_blog_id_articles_count"
  /admin/api/2020-07/blogs/{blog_id}/articles/{article_id}.json:
    get:
      summary: "Retrieves a single article"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#show-2020-07"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "path"
          name: "article_id"
          required: true
          schema:
            type: "string"
          description: "article_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specifed by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_blogs_param_blog_id_articles_param_article_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  article:
                    id: 134645308
                    title: "My new Title"
                    author: "Your name"
                    tags: "Tags, Will Be, Updated"
                    body_html: "<p>Look, I can even update through a web service.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                summary: "Update an existing article of a blog"
              example2:
                value:
                  article:
                    id: 134645308
                    published: true
                summary: "Publish a hidden article"
              example3:
                value:
                  article:
                    id: 134645308
                    published: false
                summary: "Hide a published article"
              example4:
                value:
                  article:
                    id: 134645308
                    title: "My new Title"
                    author: "Your name"
                    tags: "Tags, Will Be, Updated"
                    body_html: "<p>Look, I can even update through a web service.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                summary: "Update an article's image"
              example5:
                value:
                  article:
                    id: 134645308
                    title: "My new Title"
                    author: "Your name"
                    tags: "Tags, Will Be, Updated"
                    body_html: "<p>Look, I can even update through a web service.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      alt: "Rails logo"
                summary: "Update the alt text for an article image"
              example6:
                value:
                  article:
                    id: 134645308
                    image: ""
                summary: "Remove the image from an article"
              example7:
                value:
                  article:
                    id: 134645308
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add a metafield to an existing article"
      summary: "Updates an article"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#update-2020-07"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "path"
          name: "article_id"
          required: true
          schema:
            type: "string"
          description: "article_id"
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_blogs_param_blog_id_articles_param_article_id"
    delete:
      summary: "Deletes an article"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#destroy-2020-07"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "path"
          name: "article_id"
          required: true
          schema:
            type: "string"
          description: "article_id"
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_blogs_param_blog_id_articles_param_article_id"
  /admin/api/2020-07/articles/authors.json:
    get:
      summary: "Retrieves a list all of article authors"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#authors-2020-07"
      parameters: []
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_articles_authors"
  /admin/api/2020-07/articles/tags.json:
    get:
      summary: "Retrieves a list of all the tags"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#tags-2020-07"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of tags to retrieve."
          schema: {}
          required: false
        - in: "query"
          name: "popular"
          description: "A flag for ordering retrieved tags. If present in the request, then the results will be ordered by popularity, starting with the most popular tag."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_articles_tags"
  /admin/api/2020-10/blogs/{blog_id}/articles.json:
    get:
      summary: "Retrieves a list of all articles from a blog. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#index-2020-10"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show articles created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show articles created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show articles last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show articles last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show articles published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show articles published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Retrieve results based on their published status.\n                  (default: any)\n                    \n                        published: Show only published articles.\n                        unpublished: Show only unpublished articles.\n                        any: Show articles of any published status."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Retrieve an article with a specific handle."
          schema: {}
          required: false
        - in: "query"
          name: "tag"
          description: "Filter articles with a specific tag."
          schema: {}
          required: false
        - in: "query"
          name: "author"
          description: "Filter articles by article author."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_blogs_param_blog_id_articles"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                summary: "Create an article with HTML markup for a blog"
              example2:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published: false
                summary: "Create an unpublished article for a blog"
              example3:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      attachment: "R0lGODlhAQABAIAAAAAAAAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==\n"
                summary: "Create an article with a base64 encoded image"
              example4:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      src: "http://example.com/rails_logo.gif"
                      alt: "Rails logo"
                summary: "Create an article with an image, which will be downloaded by Shopify"
              example5:
                value:
                  article:
                    body: "something"
                summary: "Creating an article without a title fails and returns an error"
              example6:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create an article with a metafield"
      summary: "Creates an article for a blog"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#create-2020-10"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_blogs_param_blog_id_articles"
  /admin/api/2020-10/blogs/{blog_id}/articles/count.json:
    get:
      summary: "Retrieves a count of all articles from a blog"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#count-2020-10"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "query"
          name: "created_at_min"
          description: "Count articles created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count articles created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count articles last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count articles last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Count articles published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Count articles published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Count articles with a given published status.\n                  (default: any)\n                    \n                        published: Count only published articles.\n                        unpublished: Count only unpublished articles.\n                        any: Count all articles."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_blogs_param_blog_id_articles_count"
  /admin/api/2020-10/blogs/{blog_id}/articles/{article_id}.json:
    get:
      summary: "Retrieves a single article"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#show-2020-10"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "path"
          name: "article_id"
          required: true
          schema:
            type: "string"
          description: "article_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specifed by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_blogs_param_blog_id_articles_param_article_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  article:
                    id: 134645308
                    title: "My new Title"
                    author: "Your name"
                    tags: "Tags, Will Be, Updated"
                    body_html: "<p>Look, I can even update through a web service.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                summary: "Update an existing article of a blog"
              example2:
                value:
                  article:
                    id: 134645308
                    published: true
                summary: "Publish a hidden article"
              example3:
                value:
                  article:
                    id: 134645308
                    published: false
                summary: "Hide a published article"
              example4:
                value:
                  article:
                    id: 134645308
                    title: "My new Title"
                    author: "Your name"
                    tags: "Tags, Will Be, Updated"
                    body_html: "<p>Look, I can even update through a web service.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                summary: "Update an article's image"
              example5:
                value:
                  article:
                    id: 134645308
                    title: "My new Title"
                    author: "Your name"
                    tags: "Tags, Will Be, Updated"
                    body_html: "<p>Look, I can even update through a web service.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      alt: "Rails logo"
                summary: "Update the alt text for an article image"
              example6:
                value:
                  article:
                    id: 134645308
                    image: ""
                summary: "Remove the image from an article"
              example7:
                value:
                  article:
                    id: 134645308
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add a metafield to an existing article"
      summary: "Updates an article"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#update-2020-10"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "path"
          name: "article_id"
          required: true
          schema:
            type: "string"
          description: "article_id"
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_blogs_param_blog_id_articles_param_article_id"
    delete:
      summary: "Deletes an article"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#destroy-2020-10"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "path"
          name: "article_id"
          required: true
          schema:
            type: "string"
          description: "article_id"
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_blogs_param_blog_id_articles_param_article_id"
  /admin/api/2020-10/articles/authors.json:
    get:
      summary: "Retrieves a list all of article authors"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#authors-2020-10"
      parameters: []
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_articles_authors"
  /admin/api/2020-10/articles/tags.json:
    get:
      summary: "Retrieves a list of all the tags"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#tags-2020-10"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of tags to retrieve."
          schema: {}
          required: false
        - in: "query"
          name: "popular"
          description: "A flag for ordering retrieved tags. If present in the request, then the results will be ordered by popularity, starting with the most popular tag."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_articles_tags"
  /admin/api/2021-01/blogs/{blog_id}/articles.json:
    get:
      summary: "Retrieves a list of all articles from a blog. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#index-2021-01"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show articles created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show articles created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show articles last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show articles last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show articles published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show articles published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Retrieve results based on their published status.\n                  (default: any)\n                    \n                        published: Show only published articles.\n                        unpublished: Show only unpublished articles.\n                        any: Show articles of any published status."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Retrieve an article with a specific handle."
          schema: {}
          required: false
        - in: "query"
          name: "tag"
          description: "Filter articles with a specific tag."
          schema: {}
          required: false
        - in: "query"
          name: "author"
          description: "Filter articles by article author."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_blogs_param_blog_id_articles"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                summary: "Create an article with HTML markup for a blog"
              example2:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published: false
                summary: "Create an unpublished article for a blog"
              example3:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      attachment: "R0lGODlhAQABAIAAAAAAAAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==\n"
                summary: "Create an article with a base64 encoded image"
              example4:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      src: "http://example.com/rails_logo.gif"
                      alt: "Rails logo"
                summary: "Create an article with an image, which will be downloaded by Shopify"
              example5:
                value:
                  article:
                    body: "something"
                summary: "Creating an article without a title fails and returns an error"
              example6:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create an article with a metafield"
      summary: "Creates an article for a blog"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#create-2021-01"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_blogs_param_blog_id_articles"
  /admin/api/2021-01/blogs/{blog_id}/articles/count.json:
    get:
      summary: "Retrieves a count of all articles from a blog"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#count-2021-01"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "query"
          name: "created_at_min"
          description: "Count articles created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count articles created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count articles last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count articles last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Count articles published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Count articles published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Count articles with a given published status.\n                  (default: any)\n                    \n                        published: Count only published articles.\n                        unpublished: Count only unpublished articles.\n                        any: Count all articles."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_blogs_param_blog_id_articles_count"
  /admin/api/2021-01/blogs/{blog_id}/articles/{article_id}.json:
    get:
      summary: "Retrieves a single article"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#show-2021-01"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "path"
          name: "article_id"
          required: true
          schema:
            type: "string"
          description: "article_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specifed by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_blogs_param_blog_id_articles_param_article_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  article:
                    id: 134645308
                    title: "My new Title"
                    author: "Your name"
                    tags: "Tags, Will Be, Updated"
                    body_html: "<p>Look, I can even update through a web service.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                summary: "Update an existing article of a blog"
              example2:
                value:
                  article:
                    id: 134645308
                    published: true
                summary: "Publish a hidden article"
              example3:
                value:
                  article:
                    id: 134645308
                    published: false
                summary: "Hide a published article"
              example4:
                value:
                  article:
                    id: 134645308
                    title: "My new Title"
                    author: "Your name"
                    tags: "Tags, Will Be, Updated"
                    body_html: "<p>Look, I can even update through a web service.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                summary: "Update an article's image"
              example5:
                value:
                  article:
                    id: 134645308
                    title: "My new Title"
                    author: "Your name"
                    tags: "Tags, Will Be, Updated"
                    body_html: "<p>Look, I can even update through a web service.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      alt: "Rails logo"
                summary: "Update the alt text for an article image"
              example6:
                value:
                  article:
                    id: 134645308
                    image: ""
                summary: "Remove the image from an article"
              example7:
                value:
                  article:
                    id: 134645308
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add a metafield to an existing article"
      summary: "Updates an article"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#update-2021-01"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "path"
          name: "article_id"
          required: true
          schema:
            type: "string"
          description: "article_id"
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_blogs_param_blog_id_articles_param_article_id"
    delete:
      summary: "Deletes an article"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#destroy-2021-01"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "path"
          name: "article_id"
          required: true
          schema:
            type: "string"
          description: "article_id"
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_blogs_param_blog_id_articles_param_article_id"
  /admin/api/2021-01/articles/authors.json:
    get:
      summary: "Retrieves a list all of article authors"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#authors-2021-01"
      parameters: []
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_articles_authors"
  /admin/api/2021-01/articles/tags.json:
    get:
      summary: "Retrieves a list of all the tags"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#tags-2021-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of tags to retrieve."
          schema: {}
          required: false
        - in: "query"
          name: "popular"
          description: "A flag for ordering retrieved tags. If present in the request, then the results will be ordered by popularity, starting with the most popular tag."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_articles_tags"
  /admin/api/unstable/blogs/{blog_id}/articles.json:
    get:
      summary: "Retrieves a list of all articles from a blog. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#index-unstable"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show articles created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show articles created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show articles last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show articles last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show articles published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show articles published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Retrieve results based on their published status.\n                  (default: any)\n                    \n                        published: Show only published articles.\n                        unpublished: Show only unpublished articles.\n                        any: Show articles of any published status."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Retrieve an article with a specific handle."
          schema: {}
          required: false
        - in: "query"
          name: "tag"
          description: "Filter articles with a specific tag."
          schema: {}
          required: false
        - in: "query"
          name: "author"
          description: "Filter articles by article author."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_blogs_param_blog_id_articles"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                summary: "Create an article with HTML markup for a blog"
              example2:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published: false
                summary: "Create an unpublished article for a blog"
              example3:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      attachment: "R0lGODlhAQABAIAAAAAAAAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==\n"
                summary: "Create an article with a base64 encoded image"
              example4:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      src: "http://example.com/rails_logo.gif"
                      alt: "Rails logo"
                summary: "Create an article with an image, which will be downloaded by Shopify"
              example5:
                value:
                  article:
                    body: "something"
                summary: "Creating an article without a title fails and returns an error"
              example6:
                value:
                  article:
                    title: "My new Article title"
                    author: "John Smith"
                    tags: "This Post, Has Been Tagged"
                    body_html: "<h1>I like articles</h1>\n<p><strong>Yea</strong>, I like posting them through <span class=\"caps\">REST</span>.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create an article with a metafield"
      summary: "Creates an article for a blog"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#create-unstable"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_blogs_param_blog_id_articles"
  /admin/api/unstable/blogs/{blog_id}/articles/count.json:
    get:
      summary: "Retrieves a count of all articles from a blog"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#count-unstable"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "query"
          name: "created_at_min"
          description: "Count articles created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count articles created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count articles last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count articles last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Count articles published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Count articles published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Count articles with a given published status.\n                  (default: any)\n                    \n                        published: Count only published articles.\n                        unpublished: Count only unpublished articles.\n                        any: Count all articles."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_blogs_param_blog_id_articles_count"
  /admin/api/unstable/blogs/{blog_id}/articles/{article_id}.json:
    get:
      summary: "Retrieves a single article"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#show-unstable"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "path"
          name: "article_id"
          required: true
          schema:
            type: "string"
          description: "article_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specifed by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_blogs_param_blog_id_articles_param_article_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  article:
                    id: 134645308
                    title: "My new Title"
                    author: "Your name"
                    tags: "Tags, Will Be, Updated"
                    body_html: "<p>Look, I can even update through a web service.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                summary: "Update an existing article of a blog"
              example2:
                value:
                  article:
                    id: 134645308
                    published: true
                summary: "Publish a hidden article"
              example3:
                value:
                  article:
                    id: 134645308
                    published: false
                summary: "Hide a published article"
              example4:
                value:
                  article:
                    id: 134645308
                    title: "My new Title"
                    author: "Your name"
                    tags: "Tags, Will Be, Updated"
                    body_html: "<p>Look, I can even update through a web service.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                summary: "Update an article's image"
              example5:
                value:
                  article:
                    id: 134645308
                    title: "My new Title"
                    author: "Your name"
                    tags: "Tags, Will Be, Updated"
                    body_html: "<p>Look, I can even update through a web service.</p>"
                    published_at: "Thu Mar 24 15:45:47 UTC 2011"
                    image:
                      alt: "Rails logo"
                summary: "Update the alt text for an article image"
              example6:
                value:
                  article:
                    id: 134645308
                    image: ""
                summary: "Remove the image from an article"
              example7:
                value:
                  article:
                    id: 134645308
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add a metafield to an existing article"
      summary: "Updates an article"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#update-unstable"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "path"
          name: "article_id"
          required: true
          schema:
            type: "string"
          description: "article_id"
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_blogs_param_blog_id_articles_param_article_id"
    delete:
      summary: "Deletes an article"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#destroy-unstable"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "path"
          name: "article_id"
          required: true
          schema:
            type: "string"
          description: "article_id"
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_blogs_param_blog_id_articles_param_article_id"
  /admin/api/unstable/articles/authors.json:
    get:
      summary: "Retrieves a list all of article authors"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#authors-unstable"
      parameters: []
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_articles_authors"
  /admin/api/unstable/articles/tags.json:
    get:
      summary: "Retrieves a list of all the tags"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/article#tags-unstable"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of tags to retrieve."
          schema: {}
          required: false
        - in: "query"
          name: "popular"
          description: "A flag for ordering retrieved tags. If present in the request, then the results will be ordered by popularity, starting with the most popular tag."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "article"
        - "online-store/article"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_articles_tags"
  /admin/api/2020-01/themes/{theme_id}/assets.json:
    get:
      summary: "Retrieves a single asset for a theme by its key.\n          To retrieve a single asset, include asset[key]=#{asset_key} as a request parameter. For example, to retrieve the asset with a key of templates/index.liquid, the request might be /admin/themes/828155753/assets.json?asset[key]=templates/index.liquid.\n          For more information on the key property, see Asset properties."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/asset#show-2020-01"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names"
          schema: {}
          required: false
        - in: "query"
          name: "asset[key]"
          schema:
            type: "string"
          description: "asset[key]"
          required: false
      tags:
        - "online-store"
        - "asset"
        - "online-store/asset"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_themes_param_theme_id_assets"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  asset:
                    key: "templates/index.liquid"
                    value: "<img src='backsoon-postit.png'><p>We are busy updating the store for you and will be back within the hour.</p>"
                summary: "Change an existing Liquid template's value"
              example2:
                value:
                  asset:
                    key: "assets/empty.gif"
                    attachment: "R0lGODlhAQABAPABAP///wAAACH5BAEKAAAALAAAAAABAAEAAAICRAEAOw==\n"
                summary: "Create an image asset by providing a base64-encoded attachment"
              example3:
                value:
                  asset:
                    key: "assets/bg-body.gif"
                    src: "http://apple.com/new_bg.gif"
                summary: "Create an image asset by providing a source URL from which to upload the image"
              example4:
                value:
                  asset:
                    key: "layout/alternate.liquid"
                    source_key: "layout/theme.liquid"
                summary: "Duplicate an existing asset by providing a source key"
      summary: "Creates or updates an asset for a theme.\n          In the PUT request, you can include the src or source_key property to create the asset from an existing file."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/asset#update-2020-01"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "src"
          description: "The source URL of an image. Include in the body of the PUT request to upload the image to Shopify."
          schema: {}
          required: false
        - in: "query"
          name: "source_key"
          description: "The path within the theme to an existing asset. Include in the body of the PUT request to create a duplicate asset."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "asset"
        - "online-store/asset"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_themes_param_theme_id_assets"
    delete:
      summary: "Deletes an asset from a theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/asset#destroy-2020-01"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "asset[key]"
          schema:
            type: "string"
          description: "asset[key]"
          required: false
      tags:
        - "online-store"
        - "asset"
        - "online-store/asset"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_themes_param_theme_id_assets"
  /admin/api/2020-04/themes/{theme_id}/assets.json:
    get:
      summary: "Retrieves a single asset for a theme by its key.\n          To retrieve a single asset, include asset[key]=#{asset_key} as a request parameter. For example, to retrieve the asset with a key of templates/index.liquid, the request might be /admin/themes/828155753/assets.json?asset[key]=templates/index.liquid.\n          For more information on the key property, see Asset properties."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/asset#show-2020-04"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names"
          schema: {}
          required: false
        - in: "query"
          name: "asset[key]"
          schema:
            type: "string"
          description: "asset[key]"
          required: false
      tags:
        - "online-store"
        - "asset"
        - "online-store/asset"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_themes_param_theme_id_assets"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  asset:
                    key: "templates/index.liquid"
                    value: "<img src='backsoon-postit.png'><p>We are busy updating the store for you and will be back within the hour.</p>"
                summary: "Change an existing Liquid template's value"
              example2:
                value:
                  asset:
                    key: "assets/empty.gif"
                    attachment: "R0lGODlhAQABAPABAP///wAAACH5BAEKAAAALAAAAAABAAEAAAICRAEAOw==\n"
                summary: "Create an image asset by providing a base64-encoded attachment"
              example3:
                value:
                  asset:
                    key: "assets/bg-body.gif"
                    src: "http://apple.com/new_bg.gif"
                summary: "Create an image asset by providing a source URL from which to upload the image"
              example4:
                value:
                  asset:
                    key: "layout/alternate.liquid"
                    source_key: "layout/theme.liquid"
                summary: "Duplicate an existing asset by providing a source key"
      summary: "Creates or updates an asset for a theme.\n          In the PUT request, you can include the src or source_key property to create the asset from an existing file."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/asset#update-2020-04"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "src"
          description: "The source URL of an image. Include in the body of the PUT request to upload the image to Shopify."
          schema: {}
          required: false
        - in: "query"
          name: "source_key"
          description: "The path within the theme to an existing asset. Include in the body of the PUT request to create a duplicate asset."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "asset"
        - "online-store/asset"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_themes_param_theme_id_assets"
    delete:
      summary: "Deletes an asset from a theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/asset#destroy-2020-04"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "asset[key]"
          schema:
            type: "string"
          description: "asset[key]"
          required: false
      tags:
        - "online-store"
        - "asset"
        - "online-store/asset"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_themes_param_theme_id_assets"
  /admin/api/2020-07/themes/{theme_id}/assets.json:
    get:
      summary: "Retrieves a single asset for a theme by its key.\n          To retrieve a single asset, include asset[key]=#{asset_key} as a request parameter. For example, to retrieve the asset with a key of templates/index.liquid, the request might be /admin/themes/828155753/assets.json?asset[key]=templates/index.liquid.\n          For more information on the key property, see Asset properties."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/asset#show-2020-07"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names"
          schema: {}
          required: false
        - in: "query"
          name: "asset[key]"
          schema:
            type: "string"
          description: "asset[key]"
          required: false
      tags:
        - "online-store"
        - "asset"
        - "online-store/asset"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_themes_param_theme_id_assets"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  asset:
                    key: "templates/index.liquid"
                    value: "<img src='backsoon-postit.png'><p>We are busy updating the store for you and will be back within the hour.</p>"
                summary: "Change an existing Liquid template's value"
              example2:
                value:
                  asset:
                    key: "assets/empty.gif"
                    attachment: "R0lGODlhAQABAPABAP///wAAACH5BAEKAAAALAAAAAABAAEAAAICRAEAOw==\n"
                summary: "Create an image asset by providing a base64-encoded attachment"
              example3:
                value:
                  asset:
                    key: "assets/bg-body.gif"
                    src: "http://apple.com/new_bg.gif"
                summary: "Create an image asset by providing a source URL from which to upload the image"
              example4:
                value:
                  asset:
                    key: "layout/alternate.liquid"
                    source_key: "layout/theme.liquid"
                summary: "Duplicate an existing asset by providing a source key"
      summary: "Creates or updates an asset for a theme.\n          In the PUT request, you can include the src or source_key property to create the asset from an existing file."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/asset#update-2020-07"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "src"
          description: "The source URL of an image. Include in the body of the PUT request to upload the image to Shopify."
          schema: {}
          required: false
        - in: "query"
          name: "source_key"
          description: "The path within the theme to an existing asset. Include in the body of the PUT request to create a duplicate asset."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "asset"
        - "online-store/asset"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_themes_param_theme_id_assets"
    delete:
      summary: "Deletes an asset from a theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/asset#destroy-2020-07"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "asset[key]"
          schema:
            type: "string"
          description: "asset[key]"
          required: false
      tags:
        - "online-store"
        - "asset"
        - "online-store/asset"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_themes_param_theme_id_assets"
  /admin/api/2020-10/themes/{theme_id}/assets.json:
    get:
      summary: "Retrieves a single asset for a theme by its key.\n          To retrieve a single asset, include asset[key]=#{asset_key} as a request parameter. For example, to retrieve the asset with a key of templates/index.liquid, the request might be /admin/themes/828155753/assets.json?asset[key]=templates/index.liquid.\n          For more information on the key property, see Asset properties."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/asset#show-2020-10"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names"
          schema: {}
          required: false
        - in: "query"
          name: "asset[key]"
          schema:
            type: "string"
          description: "asset[key]"
          required: false
      tags:
        - "online-store"
        - "asset"
        - "online-store/asset"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_themes_param_theme_id_assets"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  asset:
                    key: "templates/index.liquid"
                    value: "<img src='backsoon-postit.png'><p>We are busy updating the store for you and will be back within the hour.</p>"
                summary: "Change an existing Liquid template's value"
              example2:
                value:
                  asset:
                    key: "assets/empty.gif"
                    attachment: "R0lGODlhAQABAPABAP///wAAACH5BAEKAAAALAAAAAABAAEAAAICRAEAOw==\n"
                summary: "Create an image asset by providing a base64-encoded attachment"
              example3:
                value:
                  asset:
                    key: "assets/bg-body.gif"
                    src: "http://apple.com/new_bg.gif"
                summary: "Create an image asset by providing a source URL from which to upload the image"
              example4:
                value:
                  asset:
                    key: "layout/alternate.liquid"
                    source_key: "layout/theme.liquid"
                summary: "Duplicate an existing asset by providing a source key"
      summary: "Creates or updates an asset for a theme.\n          In the PUT request, you can include the src or source_key property to create the asset from an existing file."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/asset#update-2020-10"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "src"
          description: "The source URL of an image. Include in the body of the PUT request to upload the image to Shopify."
          schema: {}
          required: false
        - in: "query"
          name: "source_key"
          description: "The path within the theme to an existing asset. Include in the body of the PUT request to create a duplicate asset."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "asset"
        - "online-store/asset"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_themes_param_theme_id_assets"
    delete:
      summary: "Deletes an asset from a theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/asset#destroy-2020-10"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "asset[key]"
          schema:
            type: "string"
          description: "asset[key]"
          required: false
      tags:
        - "online-store"
        - "asset"
        - "online-store/asset"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_themes_param_theme_id_assets"
  /admin/api/2021-01/themes/{theme_id}/assets.json:
    get:
      summary: "Retrieves a single asset for a theme by its key.\n          To retrieve a single asset, include asset[key]=#{asset_key} as a request parameter. For example, to retrieve the asset with a key of templates/index.liquid, the request might be /admin/themes/828155753/assets.json?asset[key]=templates/index.liquid.\n          For more information on the key property, see Asset properties."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/asset#show-2021-01"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names"
          schema: {}
          required: false
        - in: "query"
          name: "asset[key]"
          schema:
            type: "string"
          description: "asset[key]"
          required: false
      tags:
        - "online-store"
        - "asset"
        - "online-store/asset"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_themes_param_theme_id_assets"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  asset:
                    key: "templates/index.liquid"
                    value: "<img src='backsoon-postit.png'><p>We are busy updating the store for you and will be back within the hour.</p>"
                summary: "Change an existing Liquid template's value"
              example2:
                value:
                  asset:
                    key: "assets/empty.gif"
                    attachment: "R0lGODlhAQABAPABAP///wAAACH5BAEKAAAALAAAAAABAAEAAAICRAEAOw==\n"
                summary: "Create an image asset by providing a base64-encoded attachment"
              example3:
                value:
                  asset:
                    key: "assets/bg-body.gif"
                    src: "http://apple.com/new_bg.gif"
                summary: "Create an image asset by providing a source URL from which to upload the image"
              example4:
                value:
                  asset:
                    key: "layout/alternate.liquid"
                    source_key: "layout/theme.liquid"
                summary: "Duplicate an existing asset by providing a source key"
      summary: "Creates or updates an asset for a theme.\n          In the PUT request, you can include the src or source_key property to create the asset from an existing file."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/asset#update-2021-01"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "src"
          description: "The source URL of an image. Include in the body of the PUT request to upload the image to Shopify."
          schema: {}
          required: false
        - in: "query"
          name: "source_key"
          description: "The path within the theme to an existing asset. Include in the body of the PUT request to create a duplicate asset."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "asset"
        - "online-store/asset"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_themes_param_theme_id_assets"
    delete:
      summary: "Deletes an asset from a theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/asset#destroy-2021-01"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "asset[key]"
          schema:
            type: "string"
          description: "asset[key]"
          required: false
      tags:
        - "online-store"
        - "asset"
        - "online-store/asset"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_themes_param_theme_id_assets"
  /admin/api/unstable/themes/{theme_id}/assets.json:
    get:
      summary: "Retrieves a single asset for a theme by its key.\n          To retrieve a single asset, include asset[key]=#{asset_key} as a request parameter. For example, to retrieve the asset with a key of templates/index.liquid, the request might be /admin/themes/828155753/assets.json?asset[key]=templates/index.liquid.\n          For more information on the key property, see Asset properties."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/asset#show-unstable"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names"
          schema: {}
          required: false
        - in: "query"
          name: "asset[key]"
          schema:
            type: "string"
          description: "asset[key]"
          required: false
      tags:
        - "online-store"
        - "asset"
        - "online-store/asset"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_themes_param_theme_id_assets"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  asset:
                    key: "templates/index.liquid"
                    value: "<img src='backsoon-postit.png'><p>We are busy updating the store for you and will be back within the hour.</p>"
                summary: "Change an existing Liquid template's value"
              example2:
                value:
                  asset:
                    key: "assets/empty.gif"
                    attachment: "R0lGODlhAQABAPABAP///wAAACH5BAEKAAAALAAAAAABAAEAAAICRAEAOw==\n"
                summary: "Create an image asset by providing a base64-encoded attachment"
              example3:
                value:
                  asset:
                    key: "assets/bg-body.gif"
                    src: "http://apple.com/new_bg.gif"
                summary: "Create an image asset by providing a source URL from which to upload the image"
              example4:
                value:
                  asset:
                    key: "layout/alternate.liquid"
                    source_key: "layout/theme.liquid"
                summary: "Duplicate an existing asset by providing a source key"
      summary: "Creates or updates an asset for a theme.\n          In the PUT request, you can include the src or source_key property to create the asset from an existing file."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/asset#update-unstable"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "src"
          description: "The source URL of an image. Include in the body of the PUT request to upload the image to Shopify."
          schema: {}
          required: false
        - in: "query"
          name: "source_key"
          description: "The path within the theme to an existing asset. Include in the body of the PUT request to create a duplicate asset."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "asset"
        - "online-store/asset"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_themes_param_theme_id_assets"
    delete:
      summary: "Deletes an asset from a theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/asset#destroy-unstable"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "asset[key]"
          schema:
            type: "string"
          description: "asset[key]"
          required: false
      tags:
        - "online-store"
        - "asset"
        - "online-store/asset"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_themes_param_theme_id_assets"
  /admin/api/2020-01/blogs.json:
    get:
      summary: "Retrieve a list of all blogs. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/blog#index-2020-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID"
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Filter by blog handle"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "comma-separated list of fields to include in the response"
          schema: {}
          required: false
      tags:
        - "online-store"
        - "blog"
        - "online-store/blog"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_blogs"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  blog:
                    title: "Apple main blog"
                summary: "Create a new empty blog"
              example2:
                value:
                  blog:
                    body: "foobar"
                summary: "Trying to create a blog without a title will return an error"
              example3:
                value:
                  blog:
                    title: "Apple main blog"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create a new empty blog with a metafield"
      summary: "Create a new blog"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/blog#create-2020-01"
      parameters: []
      tags:
        - "online-store"
        - "blog"
        - "online-store/blog"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_blogs"
  /admin/api/2020-01/blogs/count.json:
    get:
      summary: "Get a count of all blogs"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/blog#count-2020-01"
      parameters: []
      tags:
        - "online-store"
        - "blog"
        - "online-store/blog"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_blogs_count"
  /admin/api/2020-01/blogs/{blog_id}.json:
    get:
      summary: "Get a single blog by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/blog#show-2020-01"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
        - in: "query"
          name: "fields"
          description: "comma-separated list of fields to include in the response"
          schema: {}
          required: false
      tags:
        - "online-store"
        - "blog"
        - "online-store/blog"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_blogs_param_blog_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  blog:
                    id: 241253187
                    title: "IPod Updates"
                summary: "Update an existing blog title"
              example2:
                value:
                  blog:
                    id: 241253187
                    title: "IPod Updates"
                    handle: "ipod-updates"
                    commentable: "moderate"
                summary: "Update an existing blog title and handle and also activate comments"
              example3:
                value:
                  blog:
                    id: 241253187
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add a metafield to an existing blog"
      summary: "Update a blog"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/blog#update-2020-01"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
      tags:
        - "online-store"
        - "blog"
        - "online-store/blog"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_blogs_param_blog_id"
    delete:
      summary: "Delete a blog"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/blog#destroy-2020-01"
      parameters:
        - in: "path"
          name: "blog_id"
          required: true
          schema:
            type: "string"
          description: "blog_id"
      tags:
        - "online-store"
        - "blog"
        - "online-store/blog"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_blogs_param_blog_id"
  /admin/api/2020-01/comments.json:
    get:
      summary: "Retrieves a list of comments. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/comment#index-2020-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show comments created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show comments created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show comments last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show comments last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show comments published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show comments published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Filter results by their published status.\n                  (default: any)\n                    \n                        published: Show only published comments.\n                        unpublished: Show only unpublished comments.\n                        any: Show comments of any published status."
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Filter results by their status.\n                    \n                        pending: Show only pending comments.\n                        published: Show only published comments.\n                        unapproved: Show only unapproved comments."
          schema: {}
          required: false
        - in: "query"
          name: "article_id"
          schema:
            type: "integer"
          description: "article_id"
          required: false
        - in: "query"
          name: "blog_id"
          schema:
            type: "integer"
          description: "blog_id"
          required: false
      tags:
        - "online-store"
        - "comment"
        - "online-store/comment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_comments"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  comment:
                    body: "I like comments\nAnd I like posting them *RESTfully*."
                    author: "Your name"
                    email: "your@email.com"
                    ip: "107.20.160.121"
                    blog_id: 241253187
                    article_id: 134645308
                summary: "Create a comment for an article of a blog using basic Textile markup"
              example2:
                value:
                  comment:
                    article_id: 134645308
                summary: "Creating a comment without a body, author, and email fails and returns an error"
      summary: "Creates a comment for an article"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/comment#create-2020-01"
      parameters: []
      tags:
        - "online-store"
        - "comment"
        - "online-store/comment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_comments"
  /admin/api/2020-01/comments/count.json:
    get:
      summary: "Retrieves a count of comments"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/comment#count-2020-01"
      parameters:
        - in: "query"
          name: "created_at_min"
          description: "Count comments created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count comments created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count comments last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count comments last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Count comments published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Count comments published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Retrieve a count of comments with a given published status.\n                  (default: any)\n                    \n                        published: Count only published comments.\n                        unpublished: Count only unpublished comments.\n                        any: Count comments of any published status."
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Retrieve a count of comments with a given status.\n                    \n                        pending: Count pending comments.\n                        published: Count published comments.\n                        unapproved: Count unapproved comments."
          schema: {}
          required: false
        - in: "query"
          name: "article_id"
          schema:
            type: "integer"
          description: "article_id"
          required: false
        - in: "query"
          name: "blog_id"
          schema:
            type: "integer"
          description: "blog_id"
          required: false
      tags:
        - "online-store"
        - "comment"
        - "online-store/comment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_comments_count"
  /admin/api/2020-01/comments/{comment_id}.json:
    get:
      summary: "Retrieves a single comment by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/comment#show-2020-01"
      parameters:
        - in: "path"
          name: "comment_id"
          required: true
          schema:
            type: "string"
          description: "comment_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "comment"
        - "online-store/comment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_comments_param_comment_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  comment:
                    id: 118373535
                    body: "You can even update through a web service."
                    author: "Your new name"
                    email: "your@updated-email.com"
                    published_at: "2020-11-05T00:48:11.132Z"
                summary: "Update the body of an existing comment"
      summary: "Updates a comment of an article"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/comment#update-2020-01"
      parameters:
        - in: "path"
          name: "comment_id"
          required: true
          schema:
            type: "string"
          description: "comment_id"
      tags:
        - "online-store"
        - "comment"
        - "online-store/comment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_comments_param_comment_id"
  /admin/api/2020-01/comments/{comment_id}/spam.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Mark a comment as spam"
      summary: "Marks a comment as spam"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/comment#spam-2020-01"
      parameters:
        - in: "path"
          name: "comment_id"
          required: true
          schema:
            type: "string"
          description: "comment_id"
      tags:
        - "online-store"
        - "comment"
        - "online-store/comment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_comments_param_comment_id_spam"
  /admin/api/2020-01/comments/{comment_id}/not_spam.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Mark a comment as not spam, restoring it to an unapproved or published state"
      summary: "Marks a comment as not spam"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/comment#not_spam-2020-01"
      parameters:
        - in: "path"
          name: "comment_id"
          required: true
          schema:
            type: "string"
          description: "comment_id"
      tags:
        - "online-store"
        - "comment"
        - "online-store/comment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_comments_param_comment_id_not_spam"
  /admin/api/2020-01/comments/{comment_id}/approve.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Approve a comment and publish it to the blog"
      summary: "Approves a comment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/comment#approve-2020-01"
      parameters:
        - in: "path"
          name: "comment_id"
          required: true
          schema:
            type: "string"
          description: "comment_id"
      tags:
        - "online-store"
        - "comment"
        - "online-store/comment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_comments_param_comment_id_approve"
  /admin/api/2020-01/comments/{comment_id}/remove.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Remove a comment"
      summary: "Removes a comment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/comment#remove-2020-01"
      parameters:
        - in: "path"
          name: "comment_id"
          required: true
          schema:
            type: "string"
          description: "comment_id"
      tags:
        - "online-store"
        - "comment"
        - "online-store/comment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_comments_param_comment_id_remove"
  /admin/api/2020-01/comments/{comment_id}/restore.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Restore a removed comment"
      summary: "Restores a previously removed comment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/comment#restore-2020-01"
      parameters:
        - in: "path"
          name: "comment_id"
          required: true
          schema:
            type: "string"
          description: "comment_id"
      tags:
        - "online-store"
        - "comment"
        - "online-store/comment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_comments_param_comment_id_restore"
  /admin/api/2020-01/redirects.json:
    get:
      summary: "Retrieves a list of URL redirects. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#index-2020-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "path"
          description: "Show redirects with a given path."
          schema: {}
          required: false
        - in: "query"
          name: "target"
          description: "Show redirects with a given target."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_redirects"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  redirect:
                    path: "/ipod"
                    target: "/pages/itunes"
                summary: "Create a redirect"
              example2:
                value:
                  redirect:
                    path: "http://www.apple.com/forums"
                    target: "http://forums.apple.com"
                summary: "Create a redirect using a full URL for the path, which will be saved as an absolute path without a domain"
              example3:
                value:
                  redirect:
                    body: "foobar"
                summary: "Creating a redirect without a path or target fails and returns an error"
      summary: "Creates a redirect. When you provide a full URL as the value of the path property, it will be saved as an absolute path without the domain.\n          For example, \"path\": \"http://www.johns-apparel.com/springwear\" will be saved as \"path\": \"springwear\"."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#create-2020-01"
      parameters: []
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_redirects"
  /admin/api/2020-01/redirects/count.json:
    get:
      summary: "Retrieves a count of URL redirects"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#count-2020-01"
      parameters:
        - in: "query"
          name: "path"
          description: "Count redirects with given path."
          schema: {}
          required: false
        - in: "query"
          name: "target"
          description: "Count redirects with given target."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_redirects_count"
  /admin/api/2020-01/redirects/{redirect_id}.json:
    get:
      summary: "Retrieves a single redirect"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#show-2020-01"
      parameters:
        - in: "path"
          name: "redirect_id"
          required: true
          schema:
            type: "string"
          description: "redirect_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_redirects_param_redirect_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  redirect:
                    id: 668809255
                    path: "/tiger"
                summary: "Update the path URI of a redirect"
              example2:
                value:
                  redirect:
                    id: 950115854
                    path: "/powermac"
                    target: "/pages/macpro"
                summary: "Update both the path and target URIs of a redirect"
      summary: "Updates an existing redirect"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#update-2020-01"
      parameters:
        - in: "path"
          name: "redirect_id"
          required: true
          schema:
            type: "string"
          description: "redirect_id"
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_redirects_param_redirect_id"
    delete:
      summary: "Deletes a redirect"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#destroy-2020-01"
      parameters:
        - in: "path"
          name: "redirect_id"
          required: true
          schema:
            type: "string"
          description: "redirect_id"
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_redirects_param_redirect_id"
  /admin/api/2020-04/redirects.json:
    get:
      summary: "Retrieves a list of URL redirects. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#index-2020-04"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "path"
          description: "Show redirects with a given path."
          schema: {}
          required: false
        - in: "query"
          name: "target"
          description: "Show redirects with a given target."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_redirects"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  redirect:
                    path: "/ipod"
                    target: "/pages/itunes"
                summary: "Create a redirect"
              example2:
                value:
                  redirect:
                    path: "http://www.apple.com/forums"
                    target: "http://forums.apple.com"
                summary: "Create a redirect using a full URL for the path, which will be saved as an absolute path without a domain"
              example3:
                value:
                  redirect:
                    body: "foobar"
                summary: "Creating a redirect without a path or target fails and returns an error"
      summary: "Creates a redirect. When you provide a full URL as the value of the path property, it will be saved as an absolute path without the domain.\n          For example, \"path\": \"http://www.johns-apparel.com/springwear\" will be saved as \"path\": \"springwear\"."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#create-2020-04"
      parameters: []
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_redirects"
  /admin/api/2020-04/redirects/count.json:
    get:
      summary: "Retrieves a count of URL redirects"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#count-2020-04"
      parameters:
        - in: "query"
          name: "path"
          description: "Count redirects with given path."
          schema: {}
          required: false
        - in: "query"
          name: "target"
          description: "Count redirects with given target."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_redirects_count"
  /admin/api/2020-04/redirects/{redirect_id}.json:
    get:
      summary: "Retrieves a single redirect"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#show-2020-04"
      parameters:
        - in: "path"
          name: "redirect_id"
          required: true
          schema:
            type: "string"
          description: "redirect_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_redirects_param_redirect_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  redirect:
                    id: 668809255
                    path: "/tiger"
                summary: "Update the path URI of a redirect"
              example2:
                value:
                  redirect:
                    id: 950115854
                    path: "/powermac"
                    target: "/pages/macpro"
                summary: "Update both the path and target URIs of a redirect"
      summary: "Updates an existing redirect"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#update-2020-04"
      parameters:
        - in: "path"
          name: "redirect_id"
          required: true
          schema:
            type: "string"
          description: "redirect_id"
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_redirects_param_redirect_id"
    delete:
      summary: "Deletes a redirect"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#destroy-2020-04"
      parameters:
        - in: "path"
          name: "redirect_id"
          required: true
          schema:
            type: "string"
          description: "redirect_id"
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_redirects_param_redirect_id"
  /admin/api/2020-07/redirects.json:
    get:
      summary: "Retrieves a list of URL redirects. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#index-2020-07"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "path"
          description: "Show redirects with a given path."
          schema: {}
          required: false
        - in: "query"
          name: "target"
          description: "Show redirects with a given target."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_redirects"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  redirect:
                    path: "/ipod"
                    target: "/pages/itunes"
                summary: "Create a redirect"
              example2:
                value:
                  redirect:
                    path: "http://www.apple.com/forums"
                    target: "http://forums.apple.com"
                summary: "Create a redirect using a full URL for the path, which will be saved as an absolute path without a domain"
              example3:
                value:
                  redirect:
                    body: "foobar"
                summary: "Creating a redirect without a path or target fails and returns an error"
      summary: "Creates a redirect. When you provide a full URL as the value of the path property, it will be saved as an absolute path without the domain.\n          For example, \"path\": \"http://www.johns-apparel.com/springwear\" will be saved as \"path\": \"springwear\"."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#create-2020-07"
      parameters: []
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_redirects"
  /admin/api/2020-07/redirects/count.json:
    get:
      summary: "Retrieves a count of URL redirects"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#count-2020-07"
      parameters:
        - in: "query"
          name: "path"
          description: "Count redirects with given path."
          schema: {}
          required: false
        - in: "query"
          name: "target"
          description: "Count redirects with given target."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_redirects_count"
  /admin/api/2020-07/redirects/{redirect_id}.json:
    get:
      summary: "Retrieves a single redirect"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#show-2020-07"
      parameters:
        - in: "path"
          name: "redirect_id"
          required: true
          schema:
            type: "string"
          description: "redirect_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_redirects_param_redirect_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  redirect:
                    id: 668809255
                    path: "/tiger"
                summary: "Update the path URI of a redirect"
              example2:
                value:
                  redirect:
                    id: 950115854
                    path: "/powermac"
                    target: "/pages/macpro"
                summary: "Update both the path and target URIs of a redirect"
      summary: "Updates an existing redirect"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#update-2020-07"
      parameters:
        - in: "path"
          name: "redirect_id"
          required: true
          schema:
            type: "string"
          description: "redirect_id"
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_redirects_param_redirect_id"
    delete:
      summary: "Deletes a redirect"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#destroy-2020-07"
      parameters:
        - in: "path"
          name: "redirect_id"
          required: true
          schema:
            type: "string"
          description: "redirect_id"
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_redirects_param_redirect_id"
  /admin/api/2020-10/redirects.json:
    get:
      summary: "Retrieves a list of URL redirects. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#index-2020-10"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "path"
          description: "Show redirects with a given path."
          schema: {}
          required: false
        - in: "query"
          name: "target"
          description: "Show redirects with a given target."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_redirects"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  redirect:
                    path: "/ipod"
                    target: "/pages/itunes"
                summary: "Create a redirect"
              example2:
                value:
                  redirect:
                    path: "http://www.apple.com/forums"
                    target: "http://forums.apple.com"
                summary: "Create a redirect using a full URL for the path, which will be saved as an absolute path without a domain"
              example3:
                value:
                  redirect:
                    body: "foobar"
                summary: "Creating a redirect without a path or target fails and returns an error"
      summary: "Creates a redirect. When you provide a full URL as the value of the path property, it will be saved as an absolute path without the domain.\n          For example, \"path\": \"http://www.johns-apparel.com/springwear\" will be saved as \"path\": \"springwear\"."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#create-2020-10"
      parameters: []
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_redirects"
  /admin/api/2020-10/redirects/count.json:
    get:
      summary: "Retrieves a count of URL redirects"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#count-2020-10"
      parameters:
        - in: "query"
          name: "path"
          description: "Count redirects with given path."
          schema: {}
          required: false
        - in: "query"
          name: "target"
          description: "Count redirects with given target."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_redirects_count"
  /admin/api/2020-10/redirects/{redirect_id}.json:
    get:
      summary: "Retrieves a single redirect"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#show-2020-10"
      parameters:
        - in: "path"
          name: "redirect_id"
          required: true
          schema:
            type: "string"
          description: "redirect_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_redirects_param_redirect_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  redirect:
                    id: 668809255
                    path: "/tiger"
                summary: "Update the path URI of a redirect"
              example2:
                value:
                  redirect:
                    id: 950115854
                    path: "/powermac"
                    target: "/pages/macpro"
                summary: "Update both the path and target URIs of a redirect"
      summary: "Updates an existing redirect"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#update-2020-10"
      parameters:
        - in: "path"
          name: "redirect_id"
          required: true
          schema:
            type: "string"
          description: "redirect_id"
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_redirects_param_redirect_id"
    delete:
      summary: "Deletes a redirect"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#destroy-2020-10"
      parameters:
        - in: "path"
          name: "redirect_id"
          required: true
          schema:
            type: "string"
          description: "redirect_id"
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_redirects_param_redirect_id"
  /admin/api/2021-01/redirects.json:
    get:
      summary: "Retrieves a list of URL redirects. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#index-2021-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "path"
          description: "Show redirects with a given path."
          schema: {}
          required: false
        - in: "query"
          name: "target"
          description: "Show redirects with a given target."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_redirects"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  redirect:
                    path: "/ipod"
                    target: "/pages/itunes"
                summary: "Create a redirect"
              example2:
                value:
                  redirect:
                    path: "http://www.apple.com/forums"
                    target: "http://forums.apple.com"
                summary: "Create a redirect using a full URL for the path, which will be saved as an absolute path without a domain"
              example3:
                value:
                  redirect:
                    body: "foobar"
                summary: "Creating a redirect without a path or target fails and returns an error"
      summary: "Creates a redirect. When you provide a full URL as the value of the path property, it will be saved as an absolute path without the domain.\n          For example, \"path\": \"http://www.johns-apparel.com/springwear\" will be saved as \"path\": \"springwear\"."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#create-2021-01"
      parameters: []
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_redirects"
  /admin/api/2021-01/redirects/count.json:
    get:
      summary: "Retrieves a count of URL redirects"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#count-2021-01"
      parameters:
        - in: "query"
          name: "path"
          description: "Count redirects with given path."
          schema: {}
          required: false
        - in: "query"
          name: "target"
          description: "Count redirects with given target."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_redirects_count"
  /admin/api/2021-01/redirects/{redirect_id}.json:
    get:
      summary: "Retrieves a single redirect"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#show-2021-01"
      parameters:
        - in: "path"
          name: "redirect_id"
          required: true
          schema:
            type: "string"
          description: "redirect_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_redirects_param_redirect_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  redirect:
                    id: 668809255
                    path: "/tiger"
                summary: "Update the path URI of a redirect"
              example2:
                value:
                  redirect:
                    id: 950115854
                    path: "/powermac"
                    target: "/pages/macpro"
                summary: "Update both the path and target URIs of a redirect"
      summary: "Updates an existing redirect"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#update-2021-01"
      parameters:
        - in: "path"
          name: "redirect_id"
          required: true
          schema:
            type: "string"
          description: "redirect_id"
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_redirects_param_redirect_id"
    delete:
      summary: "Deletes a redirect"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#destroy-2021-01"
      parameters:
        - in: "path"
          name: "redirect_id"
          required: true
          schema:
            type: "string"
          description: "redirect_id"
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_redirects_param_redirect_id"
  /admin/api/unstable/redirects.json:
    get:
      summary: "Retrieves a list of URL redirects. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#index-unstable"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "path"
          description: "Show redirects with a given path."
          schema: {}
          required: false
        - in: "query"
          name: "target"
          description: "Show redirects with a given target."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_redirects"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  redirect:
                    path: "/ipod"
                    target: "/pages/itunes"
                summary: "Create a redirect"
              example2:
                value:
                  redirect:
                    path: "http://www.apple.com/forums"
                    target: "http://forums.apple.com"
                summary: "Create a redirect using a full URL for the path, which will be saved as an absolute path without a domain"
              example3:
                value:
                  redirect:
                    body: "foobar"
                summary: "Creating a redirect without a path or target fails and returns an error"
      summary: "Creates a redirect. When you provide a full URL as the value of the path property, it will be saved as an absolute path without the domain.\n          For example, \"path\": \"http://www.johns-apparel.com/springwear\" will be saved as \"path\": \"springwear\"."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#create-unstable"
      parameters: []
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_redirects"
  /admin/api/unstable/redirects/count.json:
    get:
      summary: "Retrieves a count of URL redirects"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#count-unstable"
      parameters:
        - in: "query"
          name: "path"
          description: "Count redirects with given path."
          schema: {}
          required: false
        - in: "query"
          name: "target"
          description: "Count redirects with given target."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_redirects_count"
  /admin/api/unstable/redirects/{redirect_id}.json:
    get:
      summary: "Retrieves a single redirect"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#show-unstable"
      parameters:
        - in: "path"
          name: "redirect_id"
          required: true
          schema:
            type: "string"
          description: "redirect_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_redirects_param_redirect_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  redirect:
                    id: 668809255
                    path: "/tiger"
                summary: "Update the path URI of a redirect"
              example2:
                value:
                  redirect:
                    id: 950115854
                    path: "/powermac"
                    target: "/pages/macpro"
                summary: "Update both the path and target URIs of a redirect"
      summary: "Updates an existing redirect"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#update-unstable"
      parameters:
        - in: "path"
          name: "redirect_id"
          required: true
          schema:
            type: "string"
          description: "redirect_id"
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_redirects_param_redirect_id"
    delete:
      summary: "Deletes a redirect"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/redirect#destroy-unstable"
      parameters:
        - in: "path"
          name: "redirect_id"
          required: true
          schema:
            type: "string"
          description: "redirect_id"
      tags:
        - "online-store"
        - "redirect"
        - "online-store/redirect"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_redirects_param_redirect_id"
  /admin/api/2020-01/script_tags.json:
    get:
      summary: "Retrieves a list of all script tags. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#index-2020-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "The number of results to return.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show script tags created after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show script tags created before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show script tags last updated after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show script tags last updated before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "src"
          description: "Show script tags with this URL."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_script_tags"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  script_tag:
                    event: "onload"
                    src: "https://djavaskripped.org/fancy.js"
                summary: "Create a new script tag"
              example2:
                value:
                  script_tag:
                    body: "foobar"
                summary: "Creating a script tag without a src and event will return an error"
      summary: "Creates a new script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#create-2020-01"
      parameters: []
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_script_tags"
  /admin/api/2020-01/script_tags/count.json:
    get:
      summary: "Retrieves a count of all script tags"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#count-2020-01"
      parameters:
        - in: "query"
          name: "src"
          description: "Count only script tags with a given URL."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_script_tags_count"
  /admin/api/2020-01/script_tags/{script_tag_id}.json:
    get:
      summary: "Retrieves a single script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#show-2020-01"
      parameters:
        - in: "path"
          name: "script_tag_id"
          required: true
          schema:
            type: "string"
          description: "script_tag_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_script_tags_param_script_tag_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  script_tag:
                    id: 596726825
                    src: "https://somewhere-else.com/another.js"
                summary: "Update a script tag's URL"
      summary: "Updates a script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#update-2020-01"
      parameters:
        - in: "path"
          name: "script_tag_id"
          required: true
          schema:
            type: "string"
          description: "script_tag_id"
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_script_tags_param_script_tag_id"
    delete:
      summary: "Deletes a script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#destroy-2020-01"
      parameters:
        - in: "path"
          name: "script_tag_id"
          required: true
          schema:
            type: "string"
          description: "script_tag_id"
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_script_tags_param_script_tag_id"
  /admin/api/2020-04/script_tags.json:
    get:
      summary: "Retrieves a list of all script tags. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#index-2020-04"
      parameters:
        - in: "query"
          name: "limit"
          description: "The number of results to return.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show script tags created after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show script tags created before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show script tags last updated after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show script tags last updated before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "src"
          description: "Show script tags with this URL."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_script_tags"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  script_tag:
                    event: "onload"
                    src: "https://djavaskripped.org/fancy.js"
                summary: "Create a new script tag"
              example2:
                value:
                  script_tag:
                    body: "foobar"
                summary: "Creating a script tag without a src and event will return an error"
      summary: "Creates a new script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#create-2020-04"
      parameters: []
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_script_tags"
  /admin/api/2020-04/script_tags/count.json:
    get:
      summary: "Retrieves a count of all script tags"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#count-2020-04"
      parameters:
        - in: "query"
          name: "src"
          description: "Count only script tags with a given URL."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_script_tags_count"
  /admin/api/2020-04/script_tags/{script_tag_id}.json:
    get:
      summary: "Retrieves a single script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#show-2020-04"
      parameters:
        - in: "path"
          name: "script_tag_id"
          required: true
          schema:
            type: "string"
          description: "script_tag_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_script_tags_param_script_tag_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  script_tag:
                    id: 596726825
                    src: "https://somewhere-else.com/another.js"
                summary: "Update a script tag's URL"
      summary: "Updates a script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#update-2020-04"
      parameters:
        - in: "path"
          name: "script_tag_id"
          required: true
          schema:
            type: "string"
          description: "script_tag_id"
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_script_tags_param_script_tag_id"
    delete:
      summary: "Deletes a script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#destroy-2020-04"
      parameters:
        - in: "path"
          name: "script_tag_id"
          required: true
          schema:
            type: "string"
          description: "script_tag_id"
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_script_tags_param_script_tag_id"
  /admin/api/2020-07/script_tags.json:
    get:
      summary: "Retrieves a list of all script tags. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#index-2020-07"
      parameters:
        - in: "query"
          name: "limit"
          description: "The number of results to return.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show script tags created after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show script tags created before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show script tags last updated after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show script tags last updated before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "src"
          description: "Show script tags with this URL."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_script_tags"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  script_tag:
                    event: "onload"
                    src: "https://djavaskripped.org/fancy.js"
                summary: "Create a new script tag"
              example2:
                value:
                  script_tag:
                    body: "foobar"
                summary: "Creating a script tag without a src and event will return an error"
      summary: "Creates a new script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#create-2020-07"
      parameters: []
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_script_tags"
  /admin/api/2020-07/script_tags/count.json:
    get:
      summary: "Retrieves a count of all script tags"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#count-2020-07"
      parameters:
        - in: "query"
          name: "src"
          description: "Count only script tags with a given URL."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_script_tags_count"
  /admin/api/2020-07/script_tags/{script_tag_id}.json:
    get:
      summary: "Retrieves a single script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#show-2020-07"
      parameters:
        - in: "path"
          name: "script_tag_id"
          required: true
          schema:
            type: "string"
          description: "script_tag_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_script_tags_param_script_tag_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  script_tag:
                    id: 596726825
                    src: "https://somewhere-else.com/another.js"
                summary: "Update a script tag's URL"
      summary: "Updates a script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#update-2020-07"
      parameters:
        - in: "path"
          name: "script_tag_id"
          required: true
          schema:
            type: "string"
          description: "script_tag_id"
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_script_tags_param_script_tag_id"
    delete:
      summary: "Deletes a script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#destroy-2020-07"
      parameters:
        - in: "path"
          name: "script_tag_id"
          required: true
          schema:
            type: "string"
          description: "script_tag_id"
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_script_tags_param_script_tag_id"
  /admin/api/2020-10/script_tags.json:
    get:
      summary: "Retrieves a list of all script tags. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#index-2020-10"
      parameters:
        - in: "query"
          name: "limit"
          description: "The number of results to return.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show script tags created after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show script tags created before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show script tags last updated after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show script tags last updated before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "src"
          description: "Show script tags with this URL."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_script_tags"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  script_tag:
                    event: "onload"
                    src: "https://djavaskripped.org/fancy.js"
                summary: "Create a new script tag"
              example2:
                value:
                  script_tag:
                    body: "foobar"
                summary: "Creating a script tag without a src and event will return an error"
      summary: "Creates a new script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#create-2020-10"
      parameters: []
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_script_tags"
  /admin/api/2020-10/script_tags/count.json:
    get:
      summary: "Retrieves a count of all script tags"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#count-2020-10"
      parameters:
        - in: "query"
          name: "src"
          description: "Count only script tags with a given URL."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_script_tags_count"
  /admin/api/2020-10/script_tags/{script_tag_id}.json:
    get:
      summary: "Retrieves a single script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#show-2020-10"
      parameters:
        - in: "path"
          name: "script_tag_id"
          required: true
          schema:
            type: "string"
          description: "script_tag_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_script_tags_param_script_tag_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  script_tag:
                    id: 596726825
                    src: "https://somewhere-else.com/another.js"
                summary: "Update a script tag's URL"
      summary: "Updates a script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#update-2020-10"
      parameters:
        - in: "path"
          name: "script_tag_id"
          required: true
          schema:
            type: "string"
          description: "script_tag_id"
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_script_tags_param_script_tag_id"
    delete:
      summary: "Deletes a script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#destroy-2020-10"
      parameters:
        - in: "path"
          name: "script_tag_id"
          required: true
          schema:
            type: "string"
          description: "script_tag_id"
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_script_tags_param_script_tag_id"
  /admin/api/2021-01/script_tags.json:
    get:
      summary: "Retrieves a list of all script tags. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#index-2021-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "The number of results to return.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show script tags created after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show script tags created before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show script tags last updated after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show script tags last updated before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "src"
          description: "Show script tags with this URL."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_script_tags"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  script_tag:
                    event: "onload"
                    src: "https://djavaskripped.org/fancy.js"
                summary: "Create a new script tag"
              example2:
                value:
                  script_tag:
                    body: "foobar"
                summary: "Creating a script tag without a src and event will return an error"
      summary: "Creates a new script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#create-2021-01"
      parameters: []
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_script_tags"
  /admin/api/2021-01/script_tags/count.json:
    get:
      summary: "Retrieves a count of all script tags"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#count-2021-01"
      parameters:
        - in: "query"
          name: "src"
          description: "Count only script tags with a given URL."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_script_tags_count"
  /admin/api/2021-01/script_tags/{script_tag_id}.json:
    get:
      summary: "Retrieves a single script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#show-2021-01"
      parameters:
        - in: "path"
          name: "script_tag_id"
          required: true
          schema:
            type: "string"
          description: "script_tag_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_script_tags_param_script_tag_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  script_tag:
                    id: 596726825
                    src: "https://somewhere-else.com/another.js"
                summary: "Update a script tag's URL"
      summary: "Updates a script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#update-2021-01"
      parameters:
        - in: "path"
          name: "script_tag_id"
          required: true
          schema:
            type: "string"
          description: "script_tag_id"
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_script_tags_param_script_tag_id"
    delete:
      summary: "Deletes a script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#destroy-2021-01"
      parameters:
        - in: "path"
          name: "script_tag_id"
          required: true
          schema:
            type: "string"
          description: "script_tag_id"
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_script_tags_param_script_tag_id"
  /admin/api/unstable/script_tags.json:
    get:
      summary: "Retrieves a list of all script tags. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#index-unstable"
      parameters:
        - in: "query"
          name: "limit"
          description: "The number of results to return.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show script tags created after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show script tags created before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show script tags last updated after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show script tags last updated before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "src"
          description: "Show script tags with this URL."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_script_tags"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  script_tag:
                    event: "onload"
                    src: "https://djavaskripped.org/fancy.js"
                summary: "Create a new script tag"
              example2:
                value:
                  script_tag:
                    body: "foobar"
                summary: "Creating a script tag without a src and event will return an error"
      summary: "Creates a new script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#create-unstable"
      parameters: []
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_script_tags"
  /admin/api/unstable/script_tags/count.json:
    get:
      summary: "Retrieves a count of all script tags"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#count-unstable"
      parameters:
        - in: "query"
          name: "src"
          description: "Count only script tags with a given URL."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_script_tags_count"
  /admin/api/unstable/script_tags/{script_tag_id}.json:
    get:
      summary: "Retrieves a single script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#show-unstable"
      parameters:
        - in: "path"
          name: "script_tag_id"
          required: true
          schema:
            type: "string"
          description: "script_tag_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_script_tags_param_script_tag_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  script_tag:
                    id: 596726825
                    src: "https://somewhere-else.com/another.js"
                summary: "Update a script tag's URL"
      summary: "Updates a script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#update-unstable"
      parameters:
        - in: "path"
          name: "script_tag_id"
          required: true
          schema:
            type: "string"
          description: "script_tag_id"
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_script_tags_param_script_tag_id"
    delete:
      summary: "Deletes a script tag"
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/scripttag#destroy-unstable"
      parameters:
        - in: "path"
          name: "script_tag_id"
          required: true
          schema:
            type: "string"
          description: "script_tag_id"
      tags:
        - "online-store"
        - "scripttag"
        - "online-store/scripttag"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_script_tags_param_script_tag_id"
  /admin/api/2020-01/themes.json:
    get:
      summary: "Retrieves a list of themes."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#index-2020-01"
      parameters:
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_themes"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  theme:
                    name: "Lemongrass"
                    src: "http://themes.shopify.com/theme.zip"
                    role: "main"
                summary: "Create a theme that has a custom name and is published"
              example2:
                value:
                  theme:
                    body: "foobar"
                summary: "Creating a theme without a name fails and returns an error"
      summary: "Creates a theme by providing the public URL of a ZIP file that contains the theme.\n          A new theme is always unpublished by default. To publish a theme when you create it, include\n          \"role\": \"main\" in the POST request. The theme will be published only after all\n          of its files have been extracted and stored by Shopify, which might take a couple of minutes."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#create-2020-01"
      parameters: []
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_themes"
  /admin/api/2020-01/themes/{theme_id}.json:
    get:
      summary: "Retrieves a single theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#show-2020-01"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_themes_param_theme_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  theme:
                    id: 752253240
                    name: "Experimental"
                summary: "Update a theme's name"
              example2:
                value:
                  theme:
                    id: 752253240
                    role: "main"
                summary: "Publish an unpublished theme"
      summary: "Updates an existing theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#update-2020-01"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_themes_param_theme_id"
    delete:
      summary: "Deletes a theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#destroy-2020-01"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_themes_param_theme_id"
  /admin/api/2020-04/themes.json:
    get:
      summary: "Retrieves a list of themes."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#index-2020-04"
      parameters:
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_themes"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  theme:
                    name: "Lemongrass"
                    src: "http://themes.shopify.com/theme.zip"
                    role: "main"
                summary: "Create a theme that has a custom name and is published"
              example2:
                value:
                  theme:
                    body: "foobar"
                summary: "Creating a theme without a name fails and returns an error"
      summary: "Creates a theme by providing the public URL of a ZIP file that contains the theme.\n          A new theme is always unpublished by default. To publish a theme when you create it, include\n          \"role\": \"main\" in the POST request. The theme will be published only after all\n          of its files have been extracted and stored by Shopify, which might take a couple of minutes."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#create-2020-04"
      parameters: []
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_themes"
  /admin/api/2020-04/themes/{theme_id}.json:
    get:
      summary: "Retrieves a single theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#show-2020-04"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_themes_param_theme_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  theme:
                    id: 752253240
                    name: "Experimental"
                summary: "Update a theme's name"
              example2:
                value:
                  theme:
                    id: 752253240
                    role: "main"
                summary: "Publish an unpublished theme"
      summary: "Updates an existing theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#update-2020-04"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_themes_param_theme_id"
    delete:
      summary: "Deletes a theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#destroy-2020-04"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_themes_param_theme_id"
  /admin/api/2020-07/themes.json:
    get:
      summary: "Retrieves a list of themes."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#index-2020-07"
      parameters:
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_themes"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  theme:
                    name: "Lemongrass"
                    src: "http://themes.shopify.com/theme.zip"
                    role: "main"
                summary: "Create a theme that has a custom name and is published"
              example2:
                value:
                  theme:
                    body: "foobar"
                summary: "Creating a theme without a name fails and returns an error"
      summary: "Creates a theme by providing the public URL of a ZIP file that contains the theme.\n          A new theme is always unpublished by default. To publish a theme when you create it, include\n          \"role\": \"main\" in the POST request. The theme will be published only after all\n          of its files have been extracted and stored by Shopify, which might take a couple of minutes."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#create-2020-07"
      parameters: []
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_themes"
  /admin/api/2020-07/themes/{theme_id}.json:
    get:
      summary: "Retrieves a single theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#show-2020-07"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_themes_param_theme_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  theme:
                    id: 752253240
                    name: "Experimental"
                summary: "Update a theme's name"
              example2:
                value:
                  theme:
                    id: 752253240
                    role: "main"
                summary: "Publish an unpublished theme"
      summary: "Updates an existing theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#update-2020-07"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_themes_param_theme_id"
    delete:
      summary: "Deletes a theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#destroy-2020-07"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_themes_param_theme_id"
  /admin/api/2020-10/themes.json:
    get:
      summary: "Retrieves a list of themes."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#index-2020-10"
      parameters:
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_themes"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  theme:
                    name: "Lemongrass"
                    src: "http://themes.shopify.com/theme.zip"
                    role: "main"
                summary: "Create a theme that has a custom name and is published"
              example2:
                value:
                  theme:
                    body: "foobar"
                summary: "Creating a theme without a name fails and returns an error"
      summary: "Creates a theme by providing the public URL of a ZIP file that contains the theme.\n          A new theme is always unpublished by default. To publish a theme when you create it, include\n          \"role\": \"main\" in the POST request. The theme will be published only after all\n          of its files have been extracted and stored by Shopify, which might take a couple of minutes."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#create-2020-10"
      parameters: []
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_themes"
  /admin/api/2020-10/themes/{theme_id}.json:
    get:
      summary: "Retrieves a single theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#show-2020-10"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_themes_param_theme_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  theme:
                    id: 752253240
                    name: "Experimental"
                summary: "Update a theme's name"
              example2:
                value:
                  theme:
                    id: 752253240
                    role: "main"
                summary: "Publish an unpublished theme"
      summary: "Updates an existing theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#update-2020-10"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_themes_param_theme_id"
    delete:
      summary: "Deletes a theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#destroy-2020-10"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_themes_param_theme_id"
  /admin/api/2021-01/themes.json:
    get:
      summary: "Retrieves a list of themes."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#index-2021-01"
      parameters:
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_themes"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  theme:
                    name: "Lemongrass"
                    src: "http://themes.shopify.com/theme.zip"
                    role: "main"
                summary: "Create a theme that has a custom name and is published"
              example2:
                value:
                  theme:
                    body: "foobar"
                summary: "Creating a theme without a name fails and returns an error"
      summary: "Creates a theme by providing the public URL of a ZIP file that contains the theme.\n          A new theme is always unpublished by default. To publish a theme when you create it, include\n          \"role\": \"main\" in the POST request. The theme will be published only after all\n          of its files have been extracted and stored by Shopify, which might take a couple of minutes."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#create-2021-01"
      parameters: []
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_themes"
  /admin/api/2021-01/themes/{theme_id}.json:
    get:
      summary: "Retrieves a single theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#show-2021-01"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_themes_param_theme_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  theme:
                    id: 752253240
                    name: "Experimental"
                summary: "Update a theme's name"
              example2:
                value:
                  theme:
                    id: 752253240
                    role: "main"
                summary: "Publish an unpublished theme"
      summary: "Updates an existing theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#update-2021-01"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_themes_param_theme_id"
    delete:
      summary: "Deletes a theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#destroy-2021-01"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_themes_param_theme_id"
  /admin/api/unstable/themes.json:
    get:
      summary: "Retrieves a list of themes."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#index-unstable"
      parameters:
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_themes"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  theme:
                    name: "Lemongrass"
                    src: "http://themes.shopify.com/theme.zip"
                    role: "main"
                summary: "Create a theme that has a custom name and is published"
              example2:
                value:
                  theme:
                    body: "foobar"
                summary: "Creating a theme without a name fails and returns an error"
      summary: "Creates a theme by providing the public URL of a ZIP file that contains the theme.\n          A new theme is always unpublished by default. To publish a theme when you create it, include\n          \"role\": \"main\" in the POST request. The theme will be published only after all\n          of its files have been extracted and stored by Shopify, which might take a couple of minutes."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#create-unstable"
      parameters: []
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_themes"
  /admin/api/unstable/themes/{theme_id}.json:
    get:
      summary: "Retrieves a single theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#show-unstable"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_themes_param_theme_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  theme:
                    id: 752253240
                    name: "Experimental"
                summary: "Update a theme's name"
              example2:
                value:
                  theme:
                    id: 752253240
                    role: "main"
                summary: "Publish an unpublished theme"
      summary: "Updates an existing theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#update-unstable"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_themes_param_theme_id"
    delete:
      summary: "Deletes a theme."
      description: "https://shopify.dev/docs/admin-api/rest/reference/online-store/theme#destroy-unstable"
      parameters:
        - in: "path"
          name: "theme_id"
          required: true
          schema:
            type: "string"
          description: "theme_id"
      tags:
        - "online-store"
        - "theme"
        - "online-store/theme"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_themes_param_theme_id"
  /admin/api/2020-01/checkouts/count.json:
    get:
      summary: "Retrieves a count of checkouts from the past 90 days"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/abandoned-checkouts#count-2020-01"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Count checkouts created after the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count checkouts created before the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count checkouts last updated after the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count checkouts last updated before the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Count checkouts with a given status.\n                  (default: open)\n                    \n                        open: Count only open abandoned checkouts.\n                        closed: Count only closed abandoned checkouts."
          schema: {}
          required: false
      tags:
        - "orders"
        - "abandoned-checkouts"
        - "orders/abandoned-checkouts"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_checkouts_count"
  /admin/api/2020-01/checkouts.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  checkout:
                    line_items:
                      - variant_id: 39072856
                        quantity: 5
                summary: "Create a checkout with a product variant and quantity"
              example2:
                value:
                  checkout:
                    line_items:
                      - variant_id: 123456789
                        quantity: 1
                summary: "Creating a checkout with errors, such as using the ID of a variant that doesn't exist or that isn't published to your sales channel, fails with a 422 response and returns errors"
              example3:
                value:
                  checkout:
                    line_items:
                      - variant_id: 39072856
                        quantity: 1
                      - variant_id: 1
                        quantity: 1
                      - variant_id: 1
                        quantity: 1
                      - variant_id: 49148385
                        quantity: 1
                      - variant_id: 1
                        quantity: 1
                summary: "Creating a checkout with line item errors fails and returns the errors mapped by index"
              example4:
                value:
                  checkout:
                    email: "me@example.com"
                summary: "Create a checkout without any line items"
      summary: "Creates a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#create-2020-01"
      parameters: []
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_checkouts"
  /admin/api/2020-04/checkouts/count.json:
    get:
      summary: "Retrieves a count of checkouts from the past 90 days"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/abandoned-checkouts#count-2020-04"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Count checkouts created after the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count checkouts created before the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count checkouts last updated after the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count checkouts last updated before the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Count checkouts with a given status.\n                  (default: open)\n                    \n                        open: Count only open abandoned checkouts.\n                        closed: Count only closed abandoned checkouts."
          schema: {}
          required: false
      tags:
        - "orders"
        - "abandoned-checkouts"
        - "orders/abandoned-checkouts"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_checkouts_count"
  /admin/api/2020-04/checkouts.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  checkout:
                    line_items:
                      - variant_id: 39072856
                        quantity: 5
                summary: "Create a checkout with a product variant and quantity"
              example2:
                value:
                  checkout:
                    line_items:
                      - variant_id: 123456789
                        quantity: 1
                summary: "Creating a checkout with errors, such as using the ID of a variant that doesn't exist or that isn't published to your sales channel, fails with a 422 response and returns errors"
              example3:
                value:
                  checkout:
                    line_items:
                      - variant_id: 39072856
                        quantity: 1
                      - variant_id: 1
                        quantity: 1
                      - variant_id: 1
                        quantity: 1
                      - variant_id: 49148385
                        quantity: 1
                      - variant_id: 1
                        quantity: 1
                summary: "Creating a checkout with line item errors fails and returns the errors mapped by index"
              example4:
                value:
                  checkout:
                    email: "me@example.com"
                summary: "Create a checkout without any line items"
      summary: "Creates a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#create-2020-04"
      parameters: []
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_checkouts"
  /admin/api/2020-07/checkouts/count.json:
    get:
      summary: "Retrieves a count of checkouts from the past 90 days"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/abandoned-checkouts#count-2020-07"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Count checkouts created after the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count checkouts created before the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count checkouts last updated after the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count checkouts last updated before the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Count checkouts with a given status.\n                  (default: open)\n                    \n                        open: Count only open abandoned checkouts.\n                        closed: Count only closed abandoned checkouts."
          schema: {}
          required: false
      tags:
        - "orders"
        - "abandoned-checkouts"
        - "orders/abandoned-checkouts"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_checkouts_count"
  /admin/api/2020-07/checkouts.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  checkout:
                    line_items:
                      - variant_id: 39072856
                        quantity: 5
                summary: "Create a checkout with a product variant and quantity"
              example2:
                value:
                  checkout:
                    line_items:
                      - variant_id: 123456789
                        quantity: 1
                summary: "Creating a checkout with errors, such as using the ID of a variant that doesn't exist or that isn't published to your sales channel, fails with a 422 response and returns errors"
              example3:
                value:
                  checkout:
                    line_items:
                      - variant_id: 39072856
                        quantity: 1
                      - variant_id: 1
                        quantity: 1
                      - variant_id: 1
                        quantity: 1
                      - variant_id: 49148385
                        quantity: 1
                      - variant_id: 1
                        quantity: 1
                summary: "Creating a checkout with line item errors fails and returns the errors mapped by index"
              example4:
                value:
                  checkout:
                    email: "me@example.com"
                summary: "Create a checkout without any line items"
      summary: "Creates a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#create-2020-07"
      parameters: []
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_checkouts"
  /admin/api/2020-10/checkouts/count.json:
    get:
      summary: "Retrieves a count of checkouts from the past 90 days"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/abandoned-checkouts#count-2020-10"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Count checkouts created after the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count checkouts created before the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count checkouts last updated after the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count checkouts last updated before the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Count checkouts with a given status.\n                  (default: open)\n                    \n                        open: Count only open abandoned checkouts.\n                        closed: Count only closed abandoned checkouts."
          schema: {}
          required: false
      tags:
        - "orders"
        - "abandoned-checkouts"
        - "orders/abandoned-checkouts"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_checkouts_count"
  /admin/api/2020-10/checkouts.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  checkout:
                    line_items:
                      - variant_id: 39072856
                        quantity: 5
                summary: "Create a checkout with a product variant and quantity"
              example2:
                value:
                  checkout:
                    line_items:
                      - variant_id: 123456789
                        quantity: 1
                summary: "Creating a checkout with errors, such as using the ID of a variant that doesn't exist or that isn't published to your sales channel, fails with a 422 response and returns errors"
              example3:
                value:
                  checkout:
                    line_items:
                      - variant_id: 39072856
                        quantity: 1
                      - variant_id: 1
                        quantity: 1
                      - variant_id: 1
                        quantity: 1
                      - variant_id: 49148385
                        quantity: 1
                      - variant_id: 1
                        quantity: 1
                summary: "Creating a checkout with line item errors fails and returns the errors mapped by index"
              example4:
                value:
                  checkout:
                    email: "me@example.com"
                summary: "Create a checkout without any line items"
      summary: "Creates a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#create-2020-10"
      parameters: []
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_checkouts"
  /admin/api/2021-01/checkouts/count.json:
    get:
      summary: "Retrieves a count of checkouts from the past 90 days"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/abandoned-checkouts#count-2021-01"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Count checkouts created after the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count checkouts created before the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count checkouts last updated after the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count checkouts last updated before the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Count checkouts with a given status.\n                  (default: open)\n                    \n                        open: Count only open abandoned checkouts.\n                        closed: Count only closed abandoned checkouts."
          schema: {}
          required: false
      tags:
        - "orders"
        - "abandoned-checkouts"
        - "orders/abandoned-checkouts"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_checkouts_count"
  /admin/api/2021-01/checkouts.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  checkout:
                    line_items:
                      - variant_id: 39072856
                        quantity: 5
                summary: "Create a checkout with a product variant and quantity"
              example2:
                value:
                  checkout:
                    line_items:
                      - variant_id: 123456789
                        quantity: 1
                summary: "Creating a checkout with errors, such as using the ID of a variant that doesn't exist or that isn't published to your sales channel, fails with a 422 response and returns errors"
              example3:
                value:
                  checkout:
                    line_items:
                      - variant_id: 39072856
                        quantity: 1
                      - variant_id: 1
                        quantity: 1
                      - variant_id: 1
                        quantity: 1
                      - variant_id: 49148385
                        quantity: 1
                      - variant_id: 1
                        quantity: 1
                summary: "Creating a checkout with line item errors fails and returns the errors mapped by index"
              example4:
                value:
                  checkout:
                    email: "me@example.com"
                summary: "Create a checkout without any line items"
      summary: "Creates a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#create-2021-01"
      parameters: []
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_checkouts"
  /admin/api/unstable/checkouts/count.json:
    get:
      summary: "Retrieves a count of checkouts from the past 90 days"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/abandoned-checkouts#count-unstable"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Count checkouts created after the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count checkouts created before the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count checkouts last updated after the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count checkouts last updated before the specified date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Count checkouts with a given status.\n                  (default: open)\n                    \n                        open: Count only open abandoned checkouts.\n                        closed: Count only closed abandoned checkouts."
          schema: {}
          required: false
      tags:
        - "orders"
        - "abandoned-checkouts"
        - "orders/abandoned-checkouts"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_checkouts_count"
  /admin/api/unstable/checkouts.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  checkout:
                    line_items:
                      - variant_id: 39072856
                        quantity: 5
                summary: "Create a checkout with a product variant and quantity"
              example2:
                value:
                  checkout:
                    line_items:
                      - variant_id: 123456789
                        quantity: 1
                summary: "Creating a checkout with errors, such as using the ID of a variant that doesn't exist or that isn't published to your sales channel, fails with a 422 response and returns errors"
              example3:
                value:
                  checkout:
                    line_items:
                      - variant_id: 39072856
                        quantity: 1
                      - variant_id: 1
                        quantity: 1
                      - variant_id: 1
                        quantity: 1
                      - variant_id: 49148385
                        quantity: 1
                      - variant_id: 1
                        quantity: 1
                summary: "Creating a checkout with line item errors fails and returns the errors mapped by index"
              example4:
                value:
                  checkout:
                    email: "me@example.com"
                summary: "Create a checkout without any line items"
      summary: "Creates a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#create-unstable"
      parameters: []
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_checkouts"
  /admin/api/2020-01/orders.json:
    get:
      summary: "Retrieves a list of orders. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#index-2020-01"
      parameters:
        - in: "query"
          name: "ids"
          description: "Retrieve only orders specified by a comma-separated list of order IDs."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show on a page.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Show orders after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show orders created at or after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show orders created at or before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show orders last updated at or after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show orders last updated at or before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at_min"
          description: "Show orders imported at or after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at_max"
          description: "Show orders imported at or before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "attribution_app_id"
          description: "Show orders attributed to a certain app, specified by the app ID. Set as current to show orders for the app currently consuming the API."
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Filter orders by their status.\n                  (default: open)\n                    \n                        open: Show only open orders.\n                        closed: Show only closed orders.\n                        cancelled: Show only canceled orders.\n                        any: Show orders of any status, including archived orders."
          schema: {}
          required: false
        - in: "query"
          name: "financial_status"
          description: "Filter orders by their financial status.\n                  (default: any)\n                    \n                        authorized: Show only authorized orders\n                        pending: Show only pending orders\n                        paid: Show only paid orders\n                        partially_paid: Show only partially paid orders\n                        refunded: Show only refunded orders\n                        voided: Show only voided orders\n                        partially_refunded: Show only partially refunded orders\n                        any: Show orders of any financial status.\n                        unpaid: Show authorized and partially paid orders."
          schema: {}
          required: false
        - in: "query"
          name: "fulfillment_status"
          description: "Filter orders by their fulfillment status.\n                  (default: any)\n                    \n                        shipped: Show orders that have been shipped. Returns orders with fulfillment_status of fulfilled.\n                        partial: Show partially shipped orders.\n                        unshipped: Show orders that have not yet been shipped. Returns orders with fulfillment_status of null.\n                        any: Show orders of any fulfillment status.\n                        unfulfilled: Returns orders with fulfillment_status of null or partial."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Retrieve only certain fields, specified by a comma-separated list of fields names."
          schema: {}
          required: false
      tags:
        - "orders"
        - "order"
        - "orders/order"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_orders"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  order:
                    line_items:
                      - variant_id: 447654529
                        quantity: 1
                summary: "Create a simple order with only a product variant ID"
              example2:
                value:
                  order:
                    email: "foo@example.com"
                    fulfillment_status: "fulfilled"
                    send_receipt: true
                    send_fulfillment_receipt: true
                    line_items:
                      - variant_id: 457924702
                        quantity: 1
                summary: "Create a simple order, sending an order confirmation and a shipping confirmation to the customer"
              example3:
                value:
                  order:
                    email: "foo@example.com"
                    fulfillment_status: "fulfilled"
                    line_items:
                      - variant_id: 447654529
                        quantity: 1
                summary: "Create a simple order without sending an order receipt or a fulfillment receipt"
              example4:
                value:
                  order:
                    email: "foo@example.com"
                    fulfillment_status: "fulfilled"
                    fulfillments:
                      - location_id: 48752903
                    line_items:
                      - variant_id: 447654529
                        quantity: 1
                summary: "Create a simple order and fulfill it"
              example5:
                value:
                  order:
                    line_items:
                      - title: "Big Brown Bear Boots"
                        price: 74.99
                        grams: "1300"
                        quantity: 3
                        tax_lines:
                          - price: 13.5
                            rate: 0.06
                            title: "State tax"
                    transactions:
                      - kind: "sale"
                        status: "success"
                        amount: 238.47
                    total_tax: 13.5
                    currency: "EUR"
                summary: "Create a comprehensive order"
              example6:
                value:
                  order:
                    line_items:
                      - title: "Red Leather Coat"
                        price: 129.99
                        grams: "1700"
                        quantity: 1
                      - title: "Blue Suede Shoes"
                        price: 85.95
                        grams: "750"
                        quantity: 1
                        taxable: false
                      - title: "Raspberry Beret"
                        price: 19.99
                        grams: "320"
                        quantity: 2
                    tax_lines:
                      - price: 10.2
                        rate: 0.06
                        title: "State tax"
                      - price: 4.25
                        rate: 0.025
                        title: "County tax"
                    total_tax: 14.45
                summary: "Create an order with tax lines split across taxable line items"
              example7:
                value:
                  order:
                    line_items:
                      - title: "Clicky Keyboard"
                        price: 99.99
                        grams: "600"
                        quantity: 1
                        tax_lines:
                          - price: 1
                            rate: 0.01
                            title: "Keyboard tax"
                    tax_lines:
                      - price: 6
                        rate: 0.06
                        title: "State tax"
                summary: "Creating an order with tax lines both on line items and on the order fails and returns an error"
              example8:
                value:
                  order:
                    line_items:
                      - variant_id: 447654529
                        quantity: 1
                    customer:
                      id: 207119551
                    financial_status: "pending"
                summary: "Create a pending order with an existing customer"
              example9:
                value:
                  order:
                    line_items:
                      - variant_id: 447654529
                        quantity: 1
                    customer:
                      first_name: "Paul"
                      last_name: "Norman"
                      email: "paul.norman@example.com"
                    billing_address:
                      first_name: "John"
                      last_name: "Smith"
                      address1: "123 Fake Street"
                      phone: "555-555-5555"
                      city: "Fakecity"
                      province: "Ontario"
                      country: "Canada"
                      zip: "K2P 1L4"
                    shipping_address:
                      first_name: "Jane"
                      last_name: "Smith"
                      address1: "123 Fake Street"
                      phone: "777-777-7777"
                      city: "Fakecity"
                      province: "Ontario"
                      country: "Canada"
                      zip: "K2P 1L4"
                    email: "jane@example.com"
                    transactions:
                      - kind: "authorization"
                        status: "success"
                        amount: 50
                    financial_status: "partially_paid"
                summary: "Create a partially paid order with a new customer and addresses"
              example10:
                value:
                  order:
                    line_items:
                      - variant_id: 447654529
                        quantity: 1
                    email: "jane@example.com"
                    phone: "18885551234"
                    billing_address:
                      first_name: "John"
                      last_name: "Smith"
                      address1: "123 Fake Street"
                      phone: "555-555-5555"
                      city: "Fakecity"
                      province: "Ontario"
                      country: "Canada"
                      zip: "K2P 1L4"
                    shipping_address:
                      first_name: "Jane"
                      last_name: "Smith"
                      address1: "123 Fake Street"
                      phone: "777-777-7777"
                      city: "Fakecity"
                      province: "Ontario"
                      country: "Canada"
                      zip: "K2P 1L4"
                    transactions:
                      - kind: "sale"
                        status: "success"
                        amount: 50
                    financial_status: "paid"
                    discount_codes:
                      - code: "FAKE30"
                        amount: "9.00"
                        type: "percentage"
                summary: "Create an order and apply a discount"
      summary: "Creates an order. By default, product inventory is not claimed.\n          When you create an order, you can include the following option parameters in the body of the request:\n          \n            inventory_behaviour: The behaviour to use when updating inventory. (default: bypass)\n              \n                bypass: Do not claim inventory.\n                decrement_ignoring_policy: Ignore the product's inventory policy and claim inventory.\n                decrement_obeying_policy: Follow the product's inventory policy and claim inventory, if possible.\n              \n            \n            send_receipt: Whether to send an order confirmation to the customer.\n            \n            \n              Note\n              If you're working on a private app and order confirmations are still being sent to the customer when send_receipt is set to false, then you need to disable the Storefront API from the private app's page in the Shopify admin.\n            \n            \n            send_fulfillment_receipt: Whether to send a shipping confirmation to the customer.\n          \n          \n            Note\n            If you are including shipping_address or billing_address, make sure to pass both\n              first_name and last_name. Otherwise both these addresses will be ignored.\n            If you're using this endpoint with a trial or Partner development store, then you can create no more than 5 new orders per minute."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#create-2020-01"
      parameters: []
      tags:
        - "orders"
        - "order"
        - "orders/order"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_orders"
  /admin/api/2020-01/orders/{order_id}.json:
    get:
      summary: "Retrieves a specific order"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#show-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "fields"
          description: "Retrieve only certain fields, specified by a comma-separated list of fields names."
          schema: {}
          required: false
      tags:
        - "orders"
        - "order"
        - "orders/order"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_orders_param_order_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  order:
                    id: 450789469
                    tags: "External, Inbound, Outbound"
                summary: "Update an order's tags"
              example2:
                value:
                  order:
                    id: 450789469
                    note: "Customer contacted us about a custom engraving on this iPod"
                summary: "Add a note to order"
              example3:
                value:
                  order:
                    id: 450789469
                    note_attributes:
                      - name: "colour"
                        value: "red"
                summary: "Add note attributes to an order"
              example4:
                value:
                  order:
                    id: 450789469
                    email: "a-different@email.com"
                summary: "Change an order's email address"
              example5:
                value:
                  order:
                    id: 450789469
                    phone: "+15145556677"
                summary: "Change an order's phone number"
              example6:
                value:
                  order:
                    id: 450789469
                    buyer_accepts_marketing: true
                summary: "Change whether the buyer accepts marketing"
              example7:
                value:
                  order:
                    id: 450789469
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add a metafield to an order"
              example8:
                value:
                  order:
                    id: 450789469
                    shipping_address:
                      address1: "123 Ship Street"
                      city: "Shipsville"
                summary: "Update the shipping address of an order"
              example9:
                value:
                  order:
                    id: 450789469
                    customer: null
                summary: "Remove the customer from an order"
      summary: "Updates an order"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#update-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "orders"
        - "order"
        - "orders/order"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_orders_param_order_id"
    delete:
      summary: "Deletes an order. Orders that interact with an online gateway can't be deleted."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#destroy-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "orders"
        - "order"
        - "orders/order"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_orders_param_order_id"
  /admin/api/2020-01/orders/count.json:
    get:
      summary: "Retrieves an order count"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#count-2020-01"
      parameters:
        - in: "query"
          name: "created_at_min"
          description: "Count orders created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count orders created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count orders last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count orders last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Count orders of a given status.\n                  (default: open)\n                    \n                        open: Count open orders.\n                        closed: Count closed orders.\n                        any: Count orders of any status."
          schema: {}
          required: false
        - in: "query"
          name: "financial_status"
          description: "Count orders of a given financial status.\n                  (default: any)\n                    \n                        authorized: Count authorized orders.\n                        pending: Count pending orders.\n                        paid: Count paid orders.\n                        refunded: Count refunded orders.\n                        voided: Count voided orders.\n                        any: Count orders of any financial status."
          schema: {}
          required: false
        - in: "query"
          name: "fulfillment_status"
          description: "Filter orders by their fulfillment status.\n                  (default: any)\n                    \n                        shipped: Show orders that have been shipped. Returns orders with fulfillment_status of fulfilled.\n                        partial: Show partially shipped orders.\n                        unshipped: Show orders that have not yet been shipped. Returns orders with fulfillment_status of null.\n                        any: Show orders of any fulfillment status.\n                        unfulfilled: Returns orders with fulfillment_status of null or partial."
          schema: {}
          required: false
      tags:
        - "orders"
        - "order"
        - "orders/order"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_orders_count"
  /admin/api/2020-01/orders/{order_id}/close.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Close an order"
      summary: "Closes an order"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#close-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "orders"
        - "order"
        - "orders/order"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_orders_param_order_id_close"
  /admin/api/2020-01/orders/{order_id}/open.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Re-open a closed order"
      summary: "Re-opens a closed order"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#open-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "orders"
        - "order"
        - "orders/order"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_orders_param_order_id_open"
  /admin/api/2020-01/orders/{order_id}/cancel.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Cancel an order"
              example2:
                value:
                  amount: "10.00"
                  currency: "USD"
                summary: "Cancel and refund an order using the amount property"
              example3:
                value:
                  amount: "109.00"
                  currency: "USD"
                summary: "When an order has multiple refundable transactions, refunding an amount less than its net payment without a refund property fails with an error"
              example4:
                value:
                  refund:
                    note: "Customer made a mistake"
                    shipping:
                      full_refund: true
                    refund_line_items:
                      - line_item_id: 466157049
                        quantity: 1
                        restock_type: "cancel"
                        location_id: 48752903
                    transactions:
                      - parent_id: 1072844756
                        amount: "10.00"
                        kind: "refund"
                        gateway: "bogus"
                      - parent_id: 1072844757
                        amount: "100.00"
                        kind: "refund"
                        gateway: "gift_card"
                summary: "Cancel and refund an order using the refund property"
              example5:
                value: {}
                summary: "Canceling an order that has fulfillments fails with an error"
      summary: "Caution\n  For multi-currency orders, the currency property is required whenever the amount property is provided. For more information, see Migrating to support multiple currencies.\n\nCancels an order. Orders that have a fulfillment object can't be canceled."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#cancel-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "amount"
          description: "The amount to refund. If set, Shopify attempts to void or refund the payment, depending on its status. Shopify refunds through a manual gateway in cases where the original transaction was not made in Shopify. Refunds through a manual gateway are recorded as a refund on Shopify, but the customer is not refunded."
          schema: {}
          required: false
        - in: "query"
          name: "currency"
          description: "The currency of the refund that's issued when the order is canceled. Required for multi-currency orders whenever the amount property is provided."
          schema: {}
          required: false
        - in: "query"
          name: "restock\n                  deprecated"
          description: "Whether to restock refunded items back to your store's inventory.\n                  (default: false)"
          schema: {}
          required: false
        - in: "query"
          name: "reason"
          description: "The reason for the order cancellation. Valid values: customer, inventory, fraud, declined, and other.)\n                  (default: other)"
          schema: {}
          required: false
        - in: "query"
          name: "email"
          description: "Whether to send an email to the customer notifying them of the cancellation.\n                  (default: false)"
          schema: {}
          required: false
        - in: "query"
          name: "refund"
          description: "The refund transactions to perform. Required for some more complex refund situations. For more information, see the Refund API."
          schema: {}
          required: false
      tags:
        - "orders"
        - "order"
        - "orders/order"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_orders_param_order_id_cancel"
  /admin/api/2020-04/orders.json:
    get:
      summary: "Retrieves a list of orders. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#index-2020-04"
      parameters:
        - in: "query"
          name: "ids"
          description: "Retrieve only orders specified by a comma-separated list of order IDs."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show on a page.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Show orders after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show orders created at or after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show orders created at or before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show orders last updated at or after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show orders last updated at or before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at_min"
          description: "Show orders imported at or after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at_max"
          description: "Show orders imported at or before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "attribution_app_id"
          description: "Show orders attributed to a certain app, specified by the app ID. Set as current to show orders for the app currently consuming the API."
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Filter orders by their status.\n                  (default: open)\n                    \n                        open: Show only open orders.\n                        closed: Show only closed orders.\n                        cancelled: Show only canceled orders.\n                        any: Show orders of any status, including archived orders."
          schema: {}
          required: false
        - in: "query"
          name: "financial_status"
          description: "Filter orders by their financial status.\n                  (default: any)\n                    \n                        authorized: Show only authorized orders\n                        pending: Show only pending orders\n                        paid: Show only paid orders\n                        partially_paid: Show only partially paid orders\n                        refunded: Show only refunded orders\n                        voided: Show only voided orders\n                        partially_refunded: Show only partially refunded orders\n                        any: Show orders of any financial status.\n                        unpaid: Show authorized and partially paid orders."
          schema: {}
          required: false
        - in: "query"
          name: "fulfillment_status"
          description: "Filter orders by their fulfillment status.\n                  (default: any)\n                    \n                        shipped: Show orders that have been shipped. Returns orders with fulfillment_status of fulfilled.\n                        partial: Show partially shipped orders.\n                        unshipped: Show orders that have not yet been shipped. Returns orders with fulfillment_status of null.\n                        any: Show orders of any fulfillment status.\n                        unfulfilled: Returns orders with fulfillment_status of null or partial."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Retrieve only certain fields, specified by a comma-separated list of fields names."
          schema: {}
          required: false
      tags:
        - "orders"
        - "order"
        - "orders/order"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_orders"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  order:
                    line_items:
                      - variant_id: 447654529
                        quantity: 1
                summary: "Create a simple order with only a product variant ID"
              example2:
                value:
                  order:
                    email: "foo@example.com"
                    fulfillment_status: "fulfilled"
                    send_receipt: true
                    send_fulfillment_receipt: true
                    line_items:
                      - variant_id: 457924702
                        quantity: 1
                summary: "Create a simple order, sending an order confirmation and a shipping confirmation to the customer"
              example3:
                value:
                  order:
                    email: "foo@example.com"
                    fulfillment_status: "fulfilled"
                    line_items:
                      - variant_id: 447654529
                        quantity: 1
                summary: "Create a simple order without sending an order receipt or a fulfillment receipt"
              example4:
                value:
                  order:
                    email: "foo@example.com"
                    fulfillment_status: "fulfilled"
                    fulfillments:
                      - location_id: 48752903
                    line_items:
                      - variant_id: 447654529
                        quantity: 1
                summary: "Create a simple order and fulfill it"
              example5:
                value:
                  order:
                    line_items:
                      - title: "Big Brown Bear Boots"
                        price: 74.99
                        grams: "1300"
                        quantity: 3
                        tax_lines:
                          - price: 13.5
                            rate: 0.06
                            title: "State tax"
                    transactions:
                      - kind: "sale"
                        status: "success"
                        amount: 238.47
                    total_tax: 13.5
                    currency: "EUR"
                summary: "Create a comprehensive order"
              example6:
                value:
                  order:
                    line_items:
                      - title: "Red Leather Coat"
                        price: 129.99
                        grams: "1700"
                        quantity: 1
                      - title: "Blue Suede Shoes"
                        price: 85.95
                        grams: "750"
                        quantity: 1
                        taxable: false
                      - title: "Raspberry Beret"
                        price: 19.99
                        grams: "320"
                        quantity: 2
                    tax_lines:
                      - price: 10.2
                        rate: 0.06
                        title: "State tax"
                      - price: 4.25
                        rate: 0.025
                        title: "County tax"
                    total_tax: 14.45
                summary: "Create an order with tax lines split across taxable line items"
              example7:
                value:
                  order:
                    line_items:
                      - title: "Clicky Keyboard"
                        price: 99.99
                        grams: "600"
                        quantity: 1
                        tax_lines:
                          - price: 1
                            rate: 0.01
                            title: "Keyboard tax"
                    tax_lines:
                      - price: 6
                        rate: 0.06
                        title: "State tax"
                summary: "Creating an order with tax lines both on line items and on the order fails and returns an error"
              example8:
                value:
                  order:
                    line_items:
                      - variant_id: 447654529
                        quantity: 1
                    customer:
                      id: 207119551
                    financial_status: "pending"
                summary: "Create a pending order with an existing customer"
              example9:
                value:
                  order:
                    line_items:
                      - variant_id: 447654529
                        quantity: 1
                    customer:
                      first_name: "Paul"
                      last_name: "Norman"
                      email: "paul.norman@example.com"
                    billing_address:
                      first_name: "John"
                      last_name: "Smith"
                      address1: "123 Fake Street"
                      phone: "555-555-5555"
                      city: "Fakecity"
                      province: "Ontario"
                      country: "Canada"
                      zip: "K2P 1L4"
                    shipping_address:
                      first_name: "Jane"
                      last_name: "Smith"
                      address1: "123 Fake Street"
                      phone: "777-777-7777"
                      city: "Fakecity"
                      province: "Ontario"
                      country: "Canada"
                      zip: "K2P 1L4"
                    email: "jane@example.com"
                    transactions:
                      - kind: "authorization"
                        status: "success"
                        amount: 50
                    financial_status: "partially_paid"
                summary: "Create a partially paid order with a new customer and addresses"
              example10:
                value:
                  order:
                    line_items:
                      - variant_id: 447654529
                        quantity: 1
                    email: "jane@example.com"
                    phone: "18885551234"
                    billing_address:
                      first_name: "John"
                      last_name: "Smith"
                      address1: "123 Fake Street"
                      phone: "555-555-5555"
                      city: "Fakecity"
                      province: "Ontario"
                      country: "Canada"
                      zip: "K2P 1L4"
                    shipping_address:
                      first_name: "Jane"
                      last_name: "Smith"
                      address1: "123 Fake Street"
                      phone: "777-777-7777"
                      city: "Fakecity"
                      province: "Ontario"
                      country: "Canada"
                      zip: "K2P 1L4"
                    transactions:
                      - kind: "sale"
                        status: "success"
                        amount: 50
                    financial_status: "paid"
                    discount_codes:
                      - code: "FAKE30"
                        amount: "9.00"
                        type: "percentage"
                summary: "Create an order and apply a discount"
      summary: "Creates an order. By default, product inventory is not claimed.\n          When you create an order, you can include the following option parameters in the body of the request:\n          \n            inventory_behaviour: The behaviour to use when updating inventory. (default: bypass)\n              \n                bypass: Do not claim inventory.\n                decrement_ignoring_policy: Ignore the product's inventory policy and claim inventory.\n                decrement_obeying_policy: Follow the product's inventory policy and claim inventory, if possible.\n              \n            \n            send_receipt: Whether to send an order confirmation to the customer.\n            \n            \n              Note\n              If you're working on a private app and order confirmations are still being sent to the customer when send_receipt is set to false, then you need to disable the Storefront API from the private app's page in the Shopify admin.\n            \n            \n            send_fulfillment_receipt: Whether to send a shipping confirmation to the customer.\n          \n          \n            Note\n            If you are including shipping_address or billing_address, make sure to pass both\n              first_name and last_name. Otherwise both these addresses will be ignored.\n            If you're using this endpoint with a trial or Partner development store, then you can create no more than 5 new orders per minute."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#create-2020-04"
      parameters: []
      tags:
        - "orders"
        - "order"
        - "orders/order"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_orders"
  /admin/api/2020-04/orders/{order_id}.json:
    get:
      summary: "Retrieves a specific order"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#show-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "fields"
          description: "Retrieve only certain fields, specified by a comma-separated list of fields names."
          schema: {}
          required: false
      tags:
        - "orders"
        - "order"
        - "orders/order"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_orders_param_order_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  order:
                    id: 450789469
                    tags: "External, Inbound, Outbound"
                summary: "Update an order's tags"
              example2:
                value:
                  order:
                    id: 450789469
                    note: "Customer contacted us about a custom engraving on this iPod"
                summary: "Add a note to order"
              example3:
                value:
                  order:
                    id: 450789469
                    note_attributes:
                      - name: "colour"
                        value: "red"
                summary: "Add note attributes to an order"
              example4:
                value:
                  order:
                    id: 450789469
                    email: "a-different@email.com"
                summary: "Change an order's email address"
              example5:
                value:
                  order:
                    id: 450789469
                    phone: "+15145556677"
                summary: "Change an order's phone number"
              example6:
                value:
                  order:
                    id: 450789469
                    buyer_accepts_marketing: true
                summary: "Change whether the buyer accepts marketing"
              example7:
                value:
                  order:
                    id: 450789469
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add a metafield to an order"
              example8:
                value:
                  order:
                    id: 450789469
                    shipping_address:
                      address1: "123 Ship Street"
                      city: "Shipsville"
                summary: "Update the shipping address of an order"
              example9:
                value:
                  order:
                    id: 450789469
                    customer: null
                summary: "Remove the customer from an order"
      summary: "Updates an order"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#update-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "orders"
        - "order"
        - "orders/order"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_orders_param_order_id"
    delete:
      summary: "Deletes an order. Orders that interact with an online gateway can't be deleted."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#destroy-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "orders"
        - "order"
        - "orders/order"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_orders_param_order_id"
  /admin/api/2020-04/orders/count.json:
    get:
      summary: "Retrieves an order count"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#count-2020-04"
      parameters:
        - in: "query"
          name: "created_at_min"
          description: "Count orders created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count orders created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count orders last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count orders last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Count orders of a given status.\n                  (default: open)\n                    \n                        open: Count open orders.\n                        closed: Count closed orders.\n                        any: Count orders of any status."
          schema: {}
          required: false
        - in: "query"
          name: "financial_status"
          description: "Count orders of a given financial status.\n                  (default: any)\n                    \n                        authorized: Count authorized orders.\n                        pending: Count pending orders.\n                        paid: Count paid orders.\n                        refunded: Count refunded orders.\n                        voided: Count voided orders.\n                        any: Count orders of any financial status."
          schema: {}
          required: false
        - in: "query"
          name: "fulfillment_status"
          description: "Filter orders by their fulfillment status.\n                  (default: any)\n                    \n                        shipped: Show orders that have been shipped. Returns orders with fulfillment_status of fulfilled.\n                        partial: Show partially shipped orders.\n                        unshipped: Show orders that have not yet been shipped. Returns orders with fulfillment_status of null.\n                        any: Show orders of any fulfillment status.\n                        unfulfilled: Returns orders with fulfillment_status of null or partial."
          schema: {}
          required: false
      tags:
        - "orders"
        - "order"
        - "orders/order"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_orders_count"
  /admin/api/2020-04/orders/{order_id}/close.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Close an order"
      summary: "Closes an order"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#close-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "orders"
        - "order"
        - "orders/order"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_orders_param_order_id_close"
  /admin/api/2020-04/orders/{order_id}/open.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Re-open a closed order"
      summary: "Re-opens a closed order"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#open-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "orders"
        - "order"
        - "orders/order"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_orders_param_order_id_open"
  /admin/api/2020-04/orders/{order_id}/cancel.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Cancel an order"
              example2:
                value:
                  amount: "10.00"
                  currency: "USD"
                summary: "Cancel and refund an order using the amount property"
              example3:
                value:
                  amount: "109.00"
                  currency: "USD"
                summary: "When an order has multiple refundable transactions, refunding an amount less than its net payment without a refund property fails with an error"
              example4:
                value:
                  refund:
                    note: "Customer made a mistake"
                    shipping:
                      full_refund: true
                    refund_line_items:
                      - line_item_id: 466157049
                        quantity: 1
                        restock_type: "cancel"
                        location_id: 48752903
                    transactions:
                      - parent_id: 1072844756
                        amount: "10.00"
                        kind: "refund"
                        gateway: "bogus"
                      - parent_id: 1072844757
                        amount: "100.00"
                        kind: "refund"
                        gateway: "gift_card"
                summary: "Cancel and refund an order using the refund property"
              example5:
                value: {}
                summary: "Canceling an order that has fulfillments fails with an error"
      summary: "Caution\n  For multi-currency orders, the currency property is required whenever the amount property is provided. For more information, see Migrating to support multiple currencies.\n\nCancels an order. Orders that have a fulfillment object can't be canceled."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#cancel-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "amount"
          description: "The amount to refund. If set, Shopify attempts to void or refund the payment, depending on its status. Shopify refunds through a manual gateway in cases where the original transaction was not made in Shopify. Refunds through a manual gateway are recorded as a refund on Shopify, but the customer is not refunded."
          schema: {}
          required: false
        - in: "query"
          name: "currency"
          description: "The currency of the refund that's issued when the order is canceled. Required for multi-currency orders whenever the amount property is provided."
          schema: {}
          required: false
        - in: "query"
          name: "restock\n                  deprecated"
          description: "Whether to restock refunded items back to your store's inventory.\n                  (default: false)"
          schema: {}
          required: false
        - in: "query"
          name: "reason"
          description: "The reason for the order cancellation. Valid values: customer, inventory, fraud, declined, and other.)\n                  (default: other)"
          schema: {}
          required: false
        - in: "query"
          name: "email"
          description: "Whether to send an email to the customer notifying them of the cancellation.\n                  (default: false)"
          schema: {}
          required: false
        - in: "query"
          name: "refund"
          description: "The refund transactions to perform. Required for some more complex refund situations. For more information, see the Refund API."
          schema: {}
          required: false
      tags:
        - "orders"
        - "order"
        - "orders/order"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_orders_param_order_id_cancel"
  /admin/api/2020-07/orders.json:
    get:
      summary: "Retrieves a list of orders. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order#index-2020-07"
      parameters:
        - in: "query"
          name: "ids"
          description: "Retrieve only orders specified by a comma-separated list of order IDs."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show on a page.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Show orders after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show orders created at or after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show orders created at or before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show orders last updated at or after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show orders last updated at or before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at_min"
          description: "Show orders imported at or after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at_max"
          description: "Show orders imported at or before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "attribution_app_id"
          description: "Show orders attributed to a certain app, specified by the app ID. Set as current to show orders for the app currently consuming the API."
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Filter orders by their status.\n                  (default: open)\n                    \n                        open: Show only open orders.\n                        closed: Show only closed orders.\n                        cancelled: Show only canceled orders.\n                        any: Show orders of any status, including archived orders."
          schema: {}
          required: false
        - in: "query"
          name: "financial_status"
          description: "Filter orders by their financial status.\n                  (default: any)\n                    \n                        authorized: Show only authorized orders\n                        pending: Show only pending orders\n                        paid: Show only paid orders\n                        partially_paid: Show only partially paid orders\n                        refunded: Show only refunded orders\n                        voided: Show only voided orders\n                        partially_refunded: Show only partially refunded orders\n                        any: Show orders of any financial status.\n                        unpaid: Show authorized and partially paid orders."
          schema: {}
          required: false
        - in: "query"
          name: "fulfillment_status"
          description: "Filter orders by their fulfillment status.\n                  (default: any)\n                    \n                        shipped: Show orders that have been shipped. Returns orders with fulfillment_status of fulfilled.\n                        partial: Show partially shipped orders.\n                        unshipped: Show orders that have not yet been shipped. Returns orders with fulfillment_status of null.\n                        any: Show orders of any fulfillment status.\n                        unfulfilled: Returns orders with fulfillment_status of null or partial."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Retrieve only certain fields, specified by a comma-separated list of fields names."
          schema: {}
          required: false
      tags:
        - "orders"
        - "order"
        - "orders/order"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_orders"
  /admin/api/2020-01/orders/{order_id}/risks.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  risk:
                    message: "This order came from an anonymous proxy"
                    recommendation: "cancel"
                    score: 1
                    source: "External"
                    cause_cancel: true
                    display: true
                summary: "Create an order risk showing a fraud risk for proxy detection"
      summary: "Creates an order risk for an order"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#create-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_orders_param_order_id_risks"
    get:
      summary: "Retrieves a list of all order risks for an order. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#index-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_orders_param_order_id_risks"
  /admin/api/2020-01/orders/{order_id}/risks/{risk_id}.json:
    get:
      summary: "Retrieves a single order risk by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#show-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "risk_id"
          required: true
          schema:
            type: "string"
          description: "risk_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_orders_param_order_id_risks_param_risk_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  risk:
                    id: 284138680
                    message: "After further review, this is a legitimate order"
                    recommendation: "accept"
                    source: "External"
                    cause_cancel: false
                    score: 0
                summary: "Update an existing order risk for an order"
      summary: "Updates an order risk\n          \n          \n            Note\n            You cannot modify an order risk that was created by another application."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#update-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "risk_id"
          required: true
          schema:
            type: "string"
          description: "risk_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_orders_param_order_id_risks_param_risk_id"
    delete:
      summary: "Deletes an order risk for an order\n          \n          \n            Note\n            You cannot delete an order risk that was created by another application."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#destroy-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "risk_id"
          required: true
          schema:
            type: "string"
          description: "risk_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_orders_param_order_id_risks_param_risk_id"
  /admin/api/2020-04/orders/{order_id}/risks.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  risk:
                    message: "This order came from an anonymous proxy"
                    recommendation: "cancel"
                    score: 1
                    source: "External"
                    cause_cancel: true
                    display: true
                summary: "Create an order risk showing a fraud risk for proxy detection"
      summary: "Creates an order risk for an order"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#create-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_orders_param_order_id_risks"
    get:
      summary: "Retrieves a list of all order risks for an order. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#index-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_orders_param_order_id_risks"
  /admin/api/2020-04/orders/{order_id}/risks/{risk_id}.json:
    get:
      summary: "Retrieves a single order risk by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#show-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "risk_id"
          required: true
          schema:
            type: "string"
          description: "risk_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_orders_param_order_id_risks_param_risk_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  risk:
                    id: 284138680
                    message: "After further review, this is a legitimate order"
                    recommendation: "accept"
                    source: "External"
                    cause_cancel: false
                    score: 0
                summary: "Update an existing order risk for an order"
      summary: "Updates an order risk\n          \n          \n            Note\n            You cannot modify an order risk that was created by another application."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#update-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "risk_id"
          required: true
          schema:
            type: "string"
          description: "risk_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_orders_param_order_id_risks_param_risk_id"
    delete:
      summary: "Deletes an order risk for an order\n          \n          \n            Note\n            You cannot delete an order risk that was created by another application."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#destroy-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "risk_id"
          required: true
          schema:
            type: "string"
          description: "risk_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_orders_param_order_id_risks_param_risk_id"
  /admin/api/2020-07/orders/{order_id}/risks.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  risk:
                    message: "This order came from an anonymous proxy"
                    recommendation: "cancel"
                    score: 1
                    source: "External"
                    cause_cancel: true
                    display: true
                summary: "Create an order risk showing a fraud risk for proxy detection"
      summary: "Creates an order risk for an order"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#create-2020-07"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_orders_param_order_id_risks"
    get:
      summary: "Retrieves a list of all order risks for an order. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#index-2020-07"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_orders_param_order_id_risks"
  /admin/api/2020-07/orders/{order_id}/risks/{risk_id}.json:
    get:
      summary: "Retrieves a single order risk by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#show-2020-07"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "risk_id"
          required: true
          schema:
            type: "string"
          description: "risk_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_orders_param_order_id_risks_param_risk_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  risk:
                    id: 284138680
                    message: "After further review, this is a legitimate order"
                    recommendation: "accept"
                    source: "External"
                    cause_cancel: false
                    score: 0
                summary: "Update an existing order risk for an order"
      summary: "Updates an order risk\n          \n          \n            Note\n            You cannot modify an order risk that was created by another application."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#update-2020-07"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "risk_id"
          required: true
          schema:
            type: "string"
          description: "risk_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_orders_param_order_id_risks_param_risk_id"
    delete:
      summary: "Deletes an order risk for an order\n          \n          \n            Note\n            You cannot delete an order risk that was created by another application."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#destroy-2020-07"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "risk_id"
          required: true
          schema:
            type: "string"
          description: "risk_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_orders_param_order_id_risks_param_risk_id"
  /admin/api/2020-10/orders/{order_id}/risks.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  risk:
                    message: "This order came from an anonymous proxy"
                    recommendation: "cancel"
                    score: 1
                    source: "External"
                    cause_cancel: true
                    display: true
                summary: "Create an order risk showing a fraud risk for proxy detection"
      summary: "Creates an order risk for an order"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#create-2020-10"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_orders_param_order_id_risks"
    get:
      summary: "Retrieves a list of all order risks for an order. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#index-2020-10"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_orders_param_order_id_risks"
  /admin/api/2020-10/orders/{order_id}/risks/{risk_id}.json:
    get:
      summary: "Retrieves a single order risk by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#show-2020-10"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "risk_id"
          required: true
          schema:
            type: "string"
          description: "risk_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_orders_param_order_id_risks_param_risk_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  risk:
                    id: 284138680
                    message: "After further review, this is a legitimate order"
                    recommendation: "accept"
                    source: "External"
                    cause_cancel: false
                    score: 0
                summary: "Update an existing order risk for an order"
      summary: "Updates an order risk\n          \n          \n            Note\n            You cannot modify an order risk that was created by another application."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#update-2020-10"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "risk_id"
          required: true
          schema:
            type: "string"
          description: "risk_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_orders_param_order_id_risks_param_risk_id"
    delete:
      summary: "Deletes an order risk for an order\n          \n          \n            Note\n            You cannot delete an order risk that was created by another application."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#destroy-2020-10"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "risk_id"
          required: true
          schema:
            type: "string"
          description: "risk_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_orders_param_order_id_risks_param_risk_id"
  /admin/api/2021-01/orders/{order_id}/risks.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  risk:
                    message: "This order came from an anonymous proxy"
                    recommendation: "cancel"
                    score: 1
                    source: "External"
                    cause_cancel: true
                    display: true
                summary: "Create an order risk showing a fraud risk for proxy detection"
      summary: "Creates an order risk for an order"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#create-2021-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_orders_param_order_id_risks"
    get:
      summary: "Retrieves a list of all order risks for an order. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#index-2021-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_orders_param_order_id_risks"
  /admin/api/2021-01/orders/{order_id}/risks/{risk_id}.json:
    get:
      summary: "Retrieves a single order risk by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#show-2021-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "risk_id"
          required: true
          schema:
            type: "string"
          description: "risk_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_orders_param_order_id_risks_param_risk_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  risk:
                    id: 284138680
                    message: "After further review, this is a legitimate order"
                    recommendation: "accept"
                    source: "External"
                    cause_cancel: false
                    score: 0
                summary: "Update an existing order risk for an order"
      summary: "Updates an order risk\n          \n          \n            Note\n            You cannot modify an order risk that was created by another application."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#update-2021-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "risk_id"
          required: true
          schema:
            type: "string"
          description: "risk_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_orders_param_order_id_risks_param_risk_id"
    delete:
      summary: "Deletes an order risk for an order\n          \n          \n            Note\n            You cannot delete an order risk that was created by another application."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#destroy-2021-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "risk_id"
          required: true
          schema:
            type: "string"
          description: "risk_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_orders_param_order_id_risks_param_risk_id"
  /admin/api/unstable/orders/{order_id}/risks.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  risk:
                    message: "This order came from an anonymous proxy"
                    recommendation: "cancel"
                    score: 1
                    source: "External"
                    cause_cancel: true
                    display: true
                summary: "Create an order risk showing a fraud risk for proxy detection"
      summary: "Creates an order risk for an order"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#create-unstable"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_orders_param_order_id_risks"
    get:
      summary: "Retrieves a list of all order risks for an order. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#index-unstable"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_orders_param_order_id_risks"
  /admin/api/unstable/orders/{order_id}/risks/{risk_id}.json:
    get:
      summary: "Retrieves a single order risk by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#show-unstable"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "risk_id"
          required: true
          schema:
            type: "string"
          description: "risk_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_orders_param_order_id_risks_param_risk_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  risk:
                    id: 284138680
                    message: "After further review, this is a legitimate order"
                    recommendation: "accept"
                    source: "External"
                    cause_cancel: false
                    score: 0
                summary: "Update an existing order risk for an order"
      summary: "Updates an order risk\n          \n          \n            Note\n            You cannot modify an order risk that was created by another application."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#update-unstable"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "risk_id"
          required: true
          schema:
            type: "string"
          description: "risk_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_orders_param_order_id_risks_param_risk_id"
    delete:
      summary: "Deletes an order risk for an order\n          \n          \n            Note\n            You cannot delete an order risk that was created by another application."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/order-risk#destroy-unstable"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "risk_id"
          required: true
          schema:
            type: "string"
          description: "risk_id"
      tags:
        - "orders"
        - "order-risk"
        - "orders/order-risk"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_orders_param_order_id_risks_param_risk_id"
  /admin/api/2020-01/orders/{order_id}/refunds.json:
    get:
      summary: "Retrieves a list of refunds for an order. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#index-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
        - in: "query"
          name: "in_shop_currency"
          description: "Show amounts in the shop currency for the underlying transaction.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_orders_param_order_id_refunds"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  refund:
                    currency: "USD"
                    notify: true
                    note: "wrong size"
                    shipping:
                      full_refund: true
                    refund_line_items:
                      - line_item_id: 518995019
                        quantity: 1
                        restock_type: "return"
                        location_id: 487838322
                    transactions:
                      - parent_id: 801038806
                        amount: 41.94
                        kind: "refund"
                        gateway: "bogus"
                summary: "Create a refund for an order"
              example2:
                value:
                  refund:
                    currency: "USD"
                    shipping:
                      amount: 5
                    transactions:
                      - parent_id: 801038806
                        amount: 5
                        kind: "refund"
                        gateway: "bogus"
                summary: "Refund a specific amount of shipping"
      summary: "Caution\n            For multi-currency orders, the currency property is required whenever the amount property is provided. For more information, see Migrating to support multiple currencies.\n          \n          Creates a refund. Use the calculate endpoint to produce the transactions to submit.\n          \n          \n            Note\n            When you use this endpoint with a Partner development store or a trial store, you can create only five refunds per minute."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#create-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "restock\n                  deprecated"
          description: "Whether to add the line items back to the store inventory. Use restock_type for refund line items instead."
          schema: {}
          required: false
        - in: "query"
          name: "notify"
          description: "Whether to send a refund notification to the customer."
          schema: {}
          required: false
        - in: "query"
          name: "note"
          description: "An optional note attached to a refund."
          schema: {}
          required: false
        - in: "query"
          name: "discrepancy_reason"
          description: "An optional comment that explains a discrepancy between calculated and actual refund amounts. Used to populate the reason property of the resulting order adjustment object attached to the refund. Valid values: restock, damage, customer, and other."
          schema: {}
          required: false
        - in: "query"
          name: "shipping"
          description: "Specify how much shipping to refund. It has the following properties:\n                    \n                        full_refund: Whether to refund all remaining shipping.\n                        amount: Set a specific amount to refund for shipping. Takes precedence over full_refund."
          schema: {}
          required: false
        - in: "query"
          name: "refund_line_items"
          description: "A list of line item IDs, quantities to refund, and restock instructions. Each entry has the following properties:\n                    \n                        line_item_id: The ID of a line item to refund.\n                        quantity: The quantity to refund.\n                        restock_type:           How this refund line item affects inventory levels. Valid values:\n          \n            no_restock: Refunding these items won't affect inventory.\n            cancel: The items have not yet been fulfilled.\n            The canceled quantity will be added back to the available count.\n            The number of fulfillable units for this line item will decrease.\n            return: The items were already delivered but will be returned to the merchant.\n            The returned quantity will be added back to the available count. The number of fulfillable units for this\n            line item will remain unchanged.\n          \n\n                        location_id:           The ID of the location where the items should be\n          restocked. This is required when the value of restock_type is return or cancel.\n          If the item is not already stocked at the location, then\n          the item is connected to the location. An error is returned when the item is connected to\n          a \n          fulfillment service location and a different location is provided."
          schema: {}
          required: false
        - in: "query"
          name: "transactions"
          description: "A list of transactions\n          to process as refunds."
          schema: {}
          required: false
        - in: "query"
          name: "currency"
          description: "The three-letter code (ISO 4217 format) for the currency used for the refund."
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_orders_param_order_id_refunds"
  /admin/api/2020-01/orders/{order_id}/refunds/{refund_id}.json:
    get:
      summary: "Retrieves a specific refund."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#show-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "refund_id"
          required: true
          schema:
            type: "string"
          description: "refund_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
        - in: "query"
          name: "in_shop_currency"
          description: "Show amounts in the shop currency for the underlying transaction.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_orders_param_order_id_refunds_param_refund_id"
  /admin/api/2020-01/orders/{order_id}/refunds/calculate.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  refund:
                    currency: "USD"
                    shipping:
                      amount: 2
                summary: "Calculate a refund for a partial amount of shipping"
              example2:
                value:
                  refund:
                    shipping:
                      full_refund: true
                    refund_line_items:
                      - line_item_id: 518995019
                        quantity: 1
                        restock_type: "no_restock"
                summary: "Calculate the refund without specifying currency"
              example3:
                value:
                  refund:
                    currency: "USD"
                    shipping:
                      full_refund: true
                    refund_line_items:
                      - line_item_id: 518995019
                        quantity: 1
                        restock_type: "no_restock"
                summary: "Calculate the refund for a line item and shipping"
      summary: "Caution\n          For multi-currency orders, the currency property is required whenever the amount property is provided. For more information, see Migrating to support multiple currencies.\n        \n          Calculates refund transactions based on line items and shipping. When you want to create a refund,\n          you should first use the calculate endpoint to generate accurate refund transactions. Specify the line items\n          that are being refunded, their quantity and restock instructions, and whether you intend to refund\n          shipping costs. If the restock instructions can't be met—for example, because you try to return more items than have been\n          fulfilled—then the endpoint returns modified restock instructions. You can then use the response in the body of the request to create the actual refund.\n          The response includes a transactions object with \"kind\": \"suggested_refund\",\n          which must to be changed to \"kind\" : \"refund\" for the refund to be accepted."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#calculate-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "shipping"
          description: "Specify how much shipping to refund. It has the following properties:\n                    \n                        full_refund: Whether to refund all remaining shipping.\n                        amount: Set a specific amount to refund for shipping. Takes precedence over full_refund."
          schema: {}
          required: false
        - in: "query"
          name: "refund_line_items"
          description: "A list of line item IDs, quantities to refund, and restock instructions. Each entry has the following properties:\n                    \n                        line_item_id: The ID of a line item to refund.\n                        quantity: The quantity to refund.\n                        restock_type:           How this refund line item affects inventory levels. Valid values:\n          \n            no_restock: Refunding these items won't affect inventory.\n            cancel: The items have not yet been fulfilled. The canceled quantity will be added\n            back to the available count. The number of fulfillable units for this line item will decrease.\n            return: The items were already delivered but will be returned to the merchant.\n            The returned quantity will be added back to the available count.\n            The number of fulfillable units for this line item will remain unchanged.\n          \n\n                        location_id:           The ID of the location\n          where the items should be restocked. If location_id is not provided and the value of\n          restock_type is return or cancel, then the endpoint returns a suitable\n          location ID.\n\n                        already_stocked:           Whether the item is already stocked at\n          the location. If this is false, then creating the refund will connect the item to the location and start\n          stocking it there."
          schema: {}
          required: false
        - in: "query"
          name: "currency"
          description: "The three-letter code (ISO 4217 format) for the\n          currency used for the refund. Note: Required whenever the shipping amount property is provided."
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_orders_param_order_id_refunds_calculate"
  /admin/api/2020-04/orders/{order_id}/refunds.json:
    get:
      summary: "Retrieves a list of refunds for an order. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#index-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
        - in: "query"
          name: "in_shop_currency"
          description: "Show amounts in the shop currency for the underlying transaction.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_orders_param_order_id_refunds"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  refund:
                    currency: "USD"
                    notify: true
                    note: "wrong size"
                    shipping:
                      full_refund: true
                    refund_line_items:
                      - line_item_id: 518995019
                        quantity: 1
                        restock_type: "return"
                        location_id: 487838322
                    transactions:
                      - parent_id: 801038806
                        amount: 41.94
                        kind: "refund"
                        gateway: "bogus"
                summary: "Create a refund for an order"
              example2:
                value:
                  refund:
                    currency: "USD"
                    shipping:
                      amount: 5
                    transactions:
                      - parent_id: 801038806
                        amount: 5
                        kind: "refund"
                        gateway: "bogus"
                summary: "Refund a specific amount of shipping"
      summary: "Caution\n            For multi-currency orders, the currency property is required whenever the amount property is provided. For more information, see Migrating to support multiple currencies.\n          \n          Creates a refund. Use the calculate endpoint to produce the transactions to submit.\n          \n          \n            Note\n            When you use this endpoint with a Partner development store or a trial store, you can create only five refunds per minute."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#create-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "restock\n                  deprecated"
          description: "Whether to add the line items back to the store inventory. Use restock_type for refund line items instead."
          schema: {}
          required: false
        - in: "query"
          name: "notify"
          description: "Whether to send a refund notification to the customer."
          schema: {}
          required: false
        - in: "query"
          name: "note"
          description: "An optional note attached to a refund."
          schema: {}
          required: false
        - in: "query"
          name: "discrepancy_reason"
          description: "An optional comment that explains a discrepancy between calculated and actual refund amounts. Used to populate the reason property of the resulting order adjustment object attached to the refund. Valid values: restock, damage, customer, and other."
          schema: {}
          required: false
        - in: "query"
          name: "shipping"
          description: "Specify how much shipping to refund. It has the following properties:\n                    \n                        full_refund: Whether to refund all remaining shipping.\n                        amount: Set a specific amount to refund for shipping. Takes precedence over full_refund."
          schema: {}
          required: false
        - in: "query"
          name: "refund_line_items"
          description: "A list of line item IDs, quantities to refund, and restock instructions. Each entry has the following properties:\n                    \n                        line_item_id: The ID of a line item to refund.\n                        quantity: The quantity to refund.\n                        restock_type:           How this refund line item affects inventory levels. Valid values:\n          \n            no_restock: Refunding these items won't affect inventory.\n            cancel: The items have not yet been fulfilled.\n            The canceled quantity will be added back to the available count.\n            The number of fulfillable units for this line item will decrease.\n            return: The items were already delivered but will be returned to the merchant.\n            The returned quantity will be added back to the available count. The number of fulfillable units for this\n            line item will remain unchanged.\n          \n\n                        location_id:           The ID of the location where the items should be\n          restocked. This is required when the value of restock_type is return or cancel.\n          If the item is not already stocked at the location, then\n          the item is connected to the location. An error is returned when the item is connected to\n          a \n          fulfillment service location and a different location is provided."
          schema: {}
          required: false
        - in: "query"
          name: "transactions"
          description: "A list of transactions\n          to process as refunds."
          schema: {}
          required: false
        - in: "query"
          name: "currency"
          description: "The three-letter code (ISO 4217 format) for the currency used for the refund."
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_orders_param_order_id_refunds"
  /admin/api/2020-04/orders/{order_id}/refunds/{refund_id}.json:
    get:
      summary: "Retrieves a specific refund."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#show-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "refund_id"
          required: true
          schema:
            type: "string"
          description: "refund_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
        - in: "query"
          name: "in_shop_currency"
          description: "Show amounts in the shop currency for the underlying transaction.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_orders_param_order_id_refunds_param_refund_id"
  /admin/api/2020-04/orders/{order_id}/refunds/calculate.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  refund:
                    currency: "USD"
                    shipping:
                      amount: 2
                summary: "Calculate a refund for a partial amount of shipping"
              example2:
                value:
                  refund:
                    shipping:
                      full_refund: true
                    refund_line_items:
                      - line_item_id: 518995019
                        quantity: 1
                        restock_type: "no_restock"
                summary: "Calculate the refund without specifying currency"
              example3:
                value:
                  refund:
                    currency: "USD"
                    shipping:
                      full_refund: true
                    refund_line_items:
                      - line_item_id: 518995019
                        quantity: 1
                        restock_type: "no_restock"
                summary: "Calculate the refund for a line item and shipping"
      summary: "Caution\n          For multi-currency orders, the currency property is required whenever the amount property is provided. For more information, see Migrating to support multiple currencies.\n        \n          Calculates refund transactions based on line items and shipping. When you want to create a refund,\n          you should first use the calculate endpoint to generate accurate refund transactions. Specify the line items\n          that are being refunded, their quantity and restock instructions, and whether you intend to refund\n          shipping costs. If the restock instructions can't be met—for example, because you try to return more items than have been\n          fulfilled—then the endpoint returns modified restock instructions. You can then use the response in the body of the request to create the actual refund.\n          The response includes a transactions object with \"kind\": \"suggested_refund\",\n          which must to be changed to \"kind\" : \"refund\" for the refund to be accepted."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#calculate-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "shipping"
          description: "Specify how much shipping to refund. It has the following properties:\n                    \n                        full_refund: Whether to refund all remaining shipping.\n                        amount: Set a specific amount to refund for shipping. Takes precedence over full_refund."
          schema: {}
          required: false
        - in: "query"
          name: "refund_line_items"
          description: "A list of line item IDs, quantities to refund, and restock instructions. Each entry has the following properties:\n                    \n                        line_item_id: The ID of a line item to refund.\n                        quantity: The quantity to refund.\n                        restock_type:           How this refund line item affects inventory levels. Valid values:\n          \n            no_restock: Refunding these items won't affect inventory.\n            cancel: The items have not yet been fulfilled. The canceled quantity will be added\n            back to the available count. The number of fulfillable units for this line item will decrease.\n            return: The items were already delivered but will be returned to the merchant.\n            The returned quantity will be added back to the available count.\n            The number of fulfillable units for this line item will remain unchanged.\n          \n\n                        location_id:           The ID of the location\n          where the items should be restocked. If location_id is not provided and the value of\n          restock_type is return or cancel, then the endpoint returns a suitable\n          location ID.\n\n                        already_stocked:           Whether the item is already stocked at\n          the location. If this is false, then creating the refund will connect the item to the location and start\n          stocking it there."
          schema: {}
          required: false
        - in: "query"
          name: "currency"
          description: "The three-letter code (ISO 4217 format) for the\n          currency used for the refund. Note: Required whenever the shipping amount property is provided."
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_orders_param_order_id_refunds_calculate"
  /admin/api/2020-07/orders/{order_id}/refunds.json:
    get:
      summary: "Retrieves a list of refunds for an order. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#index-2020-07"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
        - in: "query"
          name: "in_shop_currency"
          description: "Show amounts in the shop currency for the underlying transaction.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_orders_param_order_id_refunds"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  refund:
                    currency: "USD"
                    notify: true
                    note: "wrong size"
                    shipping:
                      full_refund: true
                    refund_line_items:
                      - line_item_id: 518995019
                        quantity: 1
                        restock_type: "return"
                        location_id: 487838322
                    transactions:
                      - parent_id: 801038806
                        amount: 41.94
                        kind: "refund"
                        gateway: "bogus"
                summary: "Create a refund for an order"
              example2:
                value:
                  refund:
                    currency: "USD"
                    shipping:
                      amount: 5
                    transactions:
                      - parent_id: 801038806
                        amount: 5
                        kind: "refund"
                        gateway: "bogus"
                summary: "Refund a specific amount of shipping"
      summary: "Caution\n            For multi-currency orders, the currency property is required whenever the amount property is provided. For more information, see Migrating to support multiple currencies.\n          \n          Creates a refund. Use the calculate endpoint to produce the transactions to submit.\n          \n          \n            Note\n            When you use this endpoint with a Partner development store or a trial store, you can create only five refunds per minute."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#create-2020-07"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "restock\n                  deprecated"
          description: "Whether to add the line items back to the store inventory. Use restock_type for refund line items instead."
          schema: {}
          required: false
        - in: "query"
          name: "notify"
          description: "Whether to send a refund notification to the customer."
          schema: {}
          required: false
        - in: "query"
          name: "note"
          description: "An optional note attached to a refund."
          schema: {}
          required: false
        - in: "query"
          name: "discrepancy_reason"
          description: "An optional comment that explains a discrepancy between calculated and actual refund amounts. Used to populate the reason property of the resulting order adjustment object attached to the refund. Valid values: restock, damage, customer, and other."
          schema: {}
          required: false
        - in: "query"
          name: "shipping"
          description: "Specify how much shipping to refund. It has the following properties:\n                    \n                        full_refund: Whether to refund all remaining shipping.\n                        amount: Set a specific amount to refund for shipping. Takes precedence over full_refund."
          schema: {}
          required: false
        - in: "query"
          name: "refund_line_items"
          description: "A list of line item IDs, quantities to refund, and restock instructions. Each entry has the following properties:\n                    \n                        line_item_id: The ID of a line item to refund.\n                        quantity: The quantity to refund.\n                        restock_type:           How this refund line item affects inventory levels. Valid values:\n          \n            no_restock: Refunding these items won't affect inventory.\n            cancel: The items have not yet been fulfilled.\n            The canceled quantity will be added back to the available count.\n            The number of fulfillable units for this line item will decrease.\n            return: The items were already delivered but will be returned to the merchant.\n            The returned quantity will be added back to the available count. The number of fulfillable units for this\n            line item will remain unchanged.\n          \n\n                        location_id:           The ID of the location where the items should be\n          restocked. This is required when the value of restock_type is return or cancel.\n          If the item is not already stocked at the location, then\n          the item is connected to the location. An error is returned when the item is connected to\n          a \n          fulfillment service location and a different location is provided."
          schema: {}
          required: false
        - in: "query"
          name: "transactions"
          description: "A list of transactions\n          to process as refunds."
          schema: {}
          required: false
        - in: "query"
          name: "currency"
          description: "The three-letter code (ISO 4217 format) for the currency used for the refund."
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_orders_param_order_id_refunds"
  /admin/api/2020-07/orders/{order_id}/refunds/{refund_id}.json:
    get:
      summary: "Retrieves a specific refund."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#show-2020-07"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "refund_id"
          required: true
          schema:
            type: "string"
          description: "refund_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
        - in: "query"
          name: "in_shop_currency"
          description: "Show amounts in the shop currency for the underlying transaction.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_orders_param_order_id_refunds_param_refund_id"
  /admin/api/2020-07/orders/{order_id}/refunds/calculate.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  refund:
                    currency: "USD"
                    shipping:
                      amount: 2
                summary: "Calculate a refund for a partial amount of shipping"
              example2:
                value:
                  refund:
                    shipping:
                      full_refund: true
                    refund_line_items:
                      - line_item_id: 518995019
                        quantity: 1
                        restock_type: "no_restock"
                summary: "Calculate the refund without specifying currency"
              example3:
                value:
                  refund:
                    currency: "USD"
                    shipping:
                      full_refund: true
                    refund_line_items:
                      - line_item_id: 518995019
                        quantity: 1
                        restock_type: "no_restock"
                summary: "Calculate the refund for a line item and shipping"
      summary: "Caution\n          For multi-currency orders, the currency property is required whenever the amount property is provided. For more information, see Migrating to support multiple currencies.\n        \n          Calculates refund transactions based on line items and shipping. When you want to create a refund,\n          you should first use the calculate endpoint to generate accurate refund transactions. Specify the line items\n          that are being refunded, their quantity and restock instructions, and whether you intend to refund\n          shipping costs. If the restock instructions can't be met—for example, because you try to return more items than have been\n          fulfilled—then the endpoint returns modified restock instructions. You can then use the response in the body of the request to create the actual refund.\n          The response includes a transactions object with \"kind\": \"suggested_refund\",\n          which must to be changed to \"kind\" : \"refund\" for the refund to be accepted."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#calculate-2020-07"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "shipping"
          description: "Specify how much shipping to refund. It has the following properties:\n                    \n                        full_refund: Whether to refund all remaining shipping.\n                        amount: Set a specific amount to refund for shipping. Takes precedence over full_refund."
          schema: {}
          required: false
        - in: "query"
          name: "refund_line_items"
          description: "A list of line item IDs, quantities to refund, and restock instructions. Each entry has the following properties:\n                    \n                        line_item_id: The ID of a line item to refund.\n                        quantity: The quantity to refund.\n                        restock_type:           How this refund line item affects inventory levels. Valid values:\n          \n            no_restock: Refunding these items won't affect inventory.\n            cancel: The items have not yet been fulfilled. The canceled quantity will be added\n            back to the available count. The number of fulfillable units for this line item will decrease.\n            return: The items were already delivered but will be returned to the merchant.\n            The returned quantity will be added back to the available count.\n            The number of fulfillable units for this line item will remain unchanged.\n          \n\n                        location_id:           The ID of the location\n          where the items should be restocked. If location_id is not provided and the value of\n          restock_type is return or cancel, then the endpoint returns a suitable\n          location ID.\n\n                        already_stocked:           Whether the item is already stocked at\n          the location. If this is false, then creating the refund will connect the item to the location and start\n          stocking it there."
          schema: {}
          required: false
        - in: "query"
          name: "currency"
          description: "The three-letter code (ISO 4217 format) for the\n          currency used for the refund. Note: Required whenever the shipping amount property is provided."
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_orders_param_order_id_refunds_calculate"
  /admin/api/2020-10/orders/{order_id}/refunds.json:
    get:
      summary: "Retrieves a list of refunds for an order. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#index-2020-10"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
        - in: "query"
          name: "in_shop_currency"
          description: "Show amounts in the shop currency for the underlying transaction.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_orders_param_order_id_refunds"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  refund:
                    currency: "USD"
                    notify: true
                    note: "wrong size"
                    shipping:
                      full_refund: true
                    refund_line_items:
                      - line_item_id: 518995019
                        quantity: 1
                        restock_type: "return"
                        location_id: 487838322
                    transactions:
                      - parent_id: 801038806
                        amount: 41.94
                        kind: "refund"
                        gateway: "bogus"
                summary: "Create a refund for an order"
              example2:
                value:
                  refund:
                    currency: "USD"
                    shipping:
                      amount: 5
                    transactions:
                      - parent_id: 801038806
                        amount: 5
                        kind: "refund"
                        gateway: "bogus"
                summary: "Refund a specific amount of shipping"
      summary: "Caution\n            For multi-currency orders, the currency property is required whenever the amount property is provided. For more information, see Migrating to support multiple currencies.\n          \n          Creates a refund. Use the calculate endpoint to produce the transactions to submit.\n          \n          \n            Note\n            When you use this endpoint with a Partner development store or a trial store, you can create only five refunds per minute."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#create-2020-10"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "restock\n                  deprecated"
          description: "Whether to add the line items back to the store inventory. Use restock_type for refund line items instead."
          schema: {}
          required: false
        - in: "query"
          name: "notify"
          description: "Whether to send a refund notification to the customer."
          schema: {}
          required: false
        - in: "query"
          name: "note"
          description: "An optional note attached to a refund."
          schema: {}
          required: false
        - in: "query"
          name: "discrepancy_reason"
          description: "An optional comment that explains a discrepancy between calculated and actual refund amounts. Used to populate the reason property of the resulting order adjustment object attached to the refund. Valid values: restock, damage, customer, and other."
          schema: {}
          required: false
        - in: "query"
          name: "shipping"
          description: "Specify how much shipping to refund. It has the following properties:\n                    \n                        full_refund: Whether to refund all remaining shipping.\n                        amount: Set a specific amount to refund for shipping. Takes precedence over full_refund."
          schema: {}
          required: false
        - in: "query"
          name: "refund_line_items"
          description: "A list of line item IDs, quantities to refund, and restock instructions. Each entry has the following properties:\n                    \n                        line_item_id: The ID of a line item to refund.\n                        quantity: The quantity to refund.\n                        restock_type:           How this refund line item affects inventory levels. Valid values:\n          \n            no_restock: Refunding these items won't affect inventory.\n            cancel: The items have not yet been fulfilled.\n            The canceled quantity will be added back to the available count.\n            The number of fulfillable units for this line item will decrease.\n            return: The items were already delivered but will be returned to the merchant.\n            The returned quantity will be added back to the available count. The number of fulfillable units for this\n            line item will remain unchanged.\n          \n\n                        location_id:           The ID of the location where the items should be\n          restocked. This is required when the value of restock_type is return or cancel.\n          If the item is not already stocked at the location, then\n          the item is connected to the location. An error is returned when the item is connected to\n          a \n          fulfillment service location and a different location is provided."
          schema: {}
          required: false
        - in: "query"
          name: "transactions"
          description: "A list of transactions\n          to process as refunds."
          schema: {}
          required: false
        - in: "query"
          name: "currency"
          description: "The three-letter code (ISO 4217 format) for the currency used for the refund."
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_orders_param_order_id_refunds"
  /admin/api/2020-10/orders/{order_id}/refunds/{refund_id}.json:
    get:
      summary: "Retrieves a specific refund."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#show-2020-10"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "refund_id"
          required: true
          schema:
            type: "string"
          description: "refund_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
        - in: "query"
          name: "in_shop_currency"
          description: "Show amounts in the shop currency for the underlying transaction.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_orders_param_order_id_refunds_param_refund_id"
  /admin/api/2020-10/orders/{order_id}/refunds/calculate.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  refund:
                    currency: "USD"
                    shipping:
                      amount: 2
                summary: "Calculate a refund for a partial amount of shipping"
              example2:
                value:
                  refund:
                    shipping:
                      full_refund: true
                    refund_line_items:
                      - line_item_id: 518995019
                        quantity: 1
                        restock_type: "no_restock"
                summary: "Calculate the refund without specifying currency"
              example3:
                value:
                  refund:
                    currency: "USD"
                    shipping:
                      full_refund: true
                    refund_line_items:
                      - line_item_id: 518995019
                        quantity: 1
                        restock_type: "no_restock"
                summary: "Calculate the refund for a line item and shipping"
      summary: "Caution\n          For multi-currency orders, the currency property is required whenever the amount property is provided. For more information, see Migrating to support multiple currencies.\n        \n          Calculates refund transactions based on line items and shipping. When you want to create a refund,\n          you should first use the calculate endpoint to generate accurate refund transactions. Specify the line items\n          that are being refunded, their quantity and restock instructions, and whether you intend to refund\n          shipping costs. If the restock instructions can't be met—for example, because you try to return more items than have been\n          fulfilled—then the endpoint returns modified restock instructions. You can then use the response in the body of the request to create the actual refund.\n          The response includes a transactions object with \"kind\": \"suggested_refund\",\n          which must to be changed to \"kind\" : \"refund\" for the refund to be accepted."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#calculate-2020-10"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "shipping"
          description: "Specify how much shipping to refund. It has the following properties:\n                    \n                        full_refund: Whether to refund all remaining shipping.\n                        amount: Set a specific amount to refund for shipping. Takes precedence over full_refund."
          schema: {}
          required: false
        - in: "query"
          name: "refund_line_items"
          description: "A list of line item IDs, quantities to refund, and restock instructions. Each entry has the following properties:\n                    \n                        line_item_id: The ID of a line item to refund.\n                        quantity: The quantity to refund.\n                        restock_type:           How this refund line item affects inventory levels. Valid values:\n          \n            no_restock: Refunding these items won't affect inventory.\n            cancel: The items have not yet been fulfilled. The canceled quantity will be added\n            back to the available count. The number of fulfillable units for this line item will decrease.\n            return: The items were already delivered but will be returned to the merchant.\n            The returned quantity will be added back to the available count.\n            The number of fulfillable units for this line item will remain unchanged.\n          \n\n                        location_id:           The ID of the location\n          where the items should be restocked. If location_id is not provided and the value of\n          restock_type is return or cancel, then the endpoint returns a suitable\n          location ID.\n\n                        already_stocked:           Whether the item is already stocked at\n          the location. If this is false, then creating the refund will connect the item to the location and start\n          stocking it there."
          schema: {}
          required: false
        - in: "query"
          name: "currency"
          description: "The three-letter code (ISO 4217 format) for the\n          currency used for the refund. Note: Required whenever the shipping amount property is provided."
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_orders_param_order_id_refunds_calculate"
  /admin/api/2021-01/orders/{order_id}/refunds.json:
    get:
      summary: "Retrieves a list of refunds for an order. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#index-2021-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
        - in: "query"
          name: "in_shop_currency"
          description: "Show amounts in the shop currency for the underlying transaction.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_orders_param_order_id_refunds"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  refund:
                    currency: "USD"
                    notify: true
                    note: "wrong size"
                    shipping:
                      full_refund: true
                    refund_line_items:
                      - line_item_id: 518995019
                        quantity: 1
                        restock_type: "return"
                        location_id: 487838322
                    transactions:
                      - parent_id: 801038806
                        amount: 41.94
                        kind: "refund"
                        gateway: "bogus"
                summary: "Create a refund for an order"
              example2:
                value:
                  refund:
                    currency: "USD"
                    shipping:
                      amount: 5
                    transactions:
                      - parent_id: 801038806
                        amount: 5
                        kind: "refund"
                        gateway: "bogus"
                summary: "Refund a specific amount of shipping"
      summary: "Caution\n            For multi-currency orders, the currency property is required whenever the amount property is provided. For more information, see Migrating to support multiple currencies.\n          \n          Creates a refund. Use the calculate endpoint to produce the transactions to submit.\n          \n          \n            Note\n            When you use this endpoint with a Partner development store or a trial store, you can create only five refunds per minute."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#create-2021-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "restock\n                  deprecated"
          description: "Whether to add the line items back to the store inventory. Use restock_type for refund line items instead."
          schema: {}
          required: false
        - in: "query"
          name: "notify"
          description: "Whether to send a refund notification to the customer."
          schema: {}
          required: false
        - in: "query"
          name: "note"
          description: "An optional note attached to a refund."
          schema: {}
          required: false
        - in: "query"
          name: "discrepancy_reason"
          description: "An optional comment that explains a discrepancy between calculated and actual refund amounts. Used to populate the reason property of the resulting order adjustment object attached to the refund. Valid values: restock, damage, customer, and other."
          schema: {}
          required: false
        - in: "query"
          name: "shipping"
          description: "Specify how much shipping to refund. It has the following properties:\n                    \n                        full_refund: Whether to refund all remaining shipping.\n                        amount: Set a specific amount to refund for shipping. Takes precedence over full_refund."
          schema: {}
          required: false
        - in: "query"
          name: "refund_line_items"
          description: "A list of line item IDs, quantities to refund, and restock instructions. Each entry has the following properties:\n                    \n                        line_item_id: The ID of a line item to refund.\n                        quantity: The quantity to refund.\n                        restock_type:           How this refund line item affects inventory levels. Valid values:\n          \n            no_restock: Refunding these items won't affect inventory.\n            cancel: The items have not yet been fulfilled.\n            The canceled quantity will be added back to the available count.\n            The number of fulfillable units for this line item will decrease.\n            return: The items were already delivered but will be returned to the merchant.\n            The returned quantity will be added back to the available count. The number of fulfillable units for this\n            line item will remain unchanged.\n          \n\n                        location_id:           The ID of the location where the items should be\n          restocked. This is required when the value of restock_type is return or cancel.\n          If the item is not already stocked at the location, then\n          the item is connected to the location. An error is returned when the item is connected to\n          a \n          fulfillment service location and a different location is provided."
          schema: {}
          required: false
        - in: "query"
          name: "transactions"
          description: "A list of transactions\n          to process as refunds."
          schema: {}
          required: false
        - in: "query"
          name: "currency"
          description: "The three-letter code (ISO 4217 format) for the currency used for the refund."
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_orders_param_order_id_refunds"
  /admin/api/2021-01/orders/{order_id}/refunds/{refund_id}.json:
    get:
      summary: "Retrieves a specific refund."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#show-2021-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "refund_id"
          required: true
          schema:
            type: "string"
          description: "refund_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
        - in: "query"
          name: "in_shop_currency"
          description: "Show amounts in the shop currency for the underlying transaction.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_orders_param_order_id_refunds_param_refund_id"
  /admin/api/2021-01/orders/{order_id}/refunds/calculate.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  refund:
                    currency: "USD"
                    shipping:
                      amount: 2
                summary: "Calculate a refund for a partial amount of shipping"
              example2:
                value:
                  refund:
                    shipping:
                      full_refund: true
                    refund_line_items:
                      - line_item_id: 518995019
                        quantity: 1
                        restock_type: "no_restock"
                summary: "Calculate the refund without specifying currency"
              example3:
                value:
                  refund:
                    currency: "USD"
                    shipping:
                      full_refund: true
                    refund_line_items:
                      - line_item_id: 518995019
                        quantity: 1
                        restock_type: "no_restock"
                summary: "Calculate the refund for a line item and shipping"
      summary: "Caution\n          For multi-currency orders, the currency property is required whenever the amount property is provided. For more information, see Migrating to support multiple currencies.\n        \n          Calculates refund transactions based on line items and shipping. When you want to create a refund,\n          you should first use the calculate endpoint to generate accurate refund transactions. Specify the line items\n          that are being refunded, their quantity and restock instructions, and whether you intend to refund\n          shipping costs. If the restock instructions can't be met—for example, because you try to return more items than have been\n          fulfilled—then the endpoint returns modified restock instructions. You can then use the response in the body of the request to create the actual refund.\n          The response includes a transactions object with \"kind\": \"suggested_refund\",\n          which must to be changed to \"kind\" : \"refund\" for the refund to be accepted."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#calculate-2021-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "shipping"
          description: "Specify how much shipping to refund. It has the following properties:\n                    \n                        full_refund: Whether to refund all remaining shipping.\n                        amount: Set a specific amount to refund for shipping. Takes precedence over full_refund."
          schema: {}
          required: false
        - in: "query"
          name: "refund_line_items"
          description: "A list of line item IDs, quantities to refund, and restock instructions. Each entry has the following properties:\n                    \n                        line_item_id: The ID of a line item to refund.\n                        quantity: The quantity to refund.\n                        restock_type:           How this refund line item affects inventory levels. Valid values:\n          \n            no_restock: Refunding these items won't affect inventory.\n            cancel: The items have not yet been fulfilled. The canceled quantity will be added\n            back to the available count. The number of fulfillable units for this line item will decrease.\n            return: The items were already delivered but will be returned to the merchant.\n            The returned quantity will be added back to the available count.\n            The number of fulfillable units for this line item will remain unchanged.\n          \n\n                        location_id:           The ID of the location\n          where the items should be restocked. If location_id is not provided and the value of\n          restock_type is return or cancel, then the endpoint returns a suitable\n          location ID.\n\n                        already_stocked:           Whether the item is already stocked at\n          the location. If this is false, then creating the refund will connect the item to the location and start\n          stocking it there."
          schema: {}
          required: false
        - in: "query"
          name: "currency"
          description: "The three-letter code (ISO 4217 format) for the\n          currency used for the refund. Note: Required whenever the shipping amount property is provided."
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_orders_param_order_id_refunds_calculate"
  /admin/api/unstable/orders/{order_id}/refunds.json:
    get:
      summary: "Retrieves a list of refunds for an order. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#index-unstable"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
        - in: "query"
          name: "in_shop_currency"
          description: "Show amounts in the shop currency for the underlying transaction.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_orders_param_order_id_refunds"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  refund:
                    currency: "USD"
                    notify: true
                    note: "wrong size"
                    shipping:
                      full_refund: true
                    refund_line_items:
                      - line_item_id: 518995019
                        quantity: 1
                        restock_type: "return"
                        location_id: 487838322
                    transactions:
                      - parent_id: 801038806
                        amount: 41.94
                        kind: "refund"
                        gateway: "bogus"
                summary: "Create a refund for an order"
              example2:
                value:
                  refund:
                    currency: "USD"
                    shipping:
                      amount: 5
                    transactions:
                      - parent_id: 801038806
                        amount: 5
                        kind: "refund"
                        gateway: "bogus"
                summary: "Refund a specific amount of shipping"
      summary: "Caution\n            For multi-currency orders, the currency property is required whenever the amount property is provided. For more information, see Migrating to support multiple currencies.\n          \n          Creates a refund. Use the calculate endpoint to produce the transactions to submit.\n          \n          \n            Note\n            When you use this endpoint with a Partner development store or a trial store, you can create only five refunds per minute."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#create-unstable"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "restock\n                  deprecated"
          description: "Whether to add the line items back to the store inventory. Use restock_type for refund line items instead."
          schema: {}
          required: false
        - in: "query"
          name: "notify"
          description: "Whether to send a refund notification to the customer."
          schema: {}
          required: false
        - in: "query"
          name: "note"
          description: "An optional note attached to a refund."
          schema: {}
          required: false
        - in: "query"
          name: "discrepancy_reason"
          description: "An optional comment that explains a discrepancy between calculated and actual refund amounts. Used to populate the reason property of the resulting order adjustment object attached to the refund. Valid values: restock, damage, customer, and other."
          schema: {}
          required: false
        - in: "query"
          name: "shipping"
          description: "Specify how much shipping to refund. It has the following properties:\n                    \n                        full_refund: Whether to refund all remaining shipping.\n                        amount: Set a specific amount to refund for shipping. Takes precedence over full_refund."
          schema: {}
          required: false
        - in: "query"
          name: "refund_line_items"
          description: "A list of line item IDs, quantities to refund, and restock instructions. Each entry has the following properties:\n                    \n                        line_item_id: The ID of a line item to refund.\n                        quantity: The quantity to refund.\n                        restock_type:           How this refund line item affects inventory levels. Valid values:\n          \n            no_restock: Refunding these items won't affect inventory.\n            cancel: The items have not yet been fulfilled.\n            The canceled quantity will be added back to the available count.\n            The number of fulfillable units for this line item will decrease.\n            return: The items were already delivered but will be returned to the merchant.\n            The returned quantity will be added back to the available count. The number of fulfillable units for this\n            line item will remain unchanged.\n          \n\n                        location_id:           The ID of the location where the items should be\n          restocked. This is required when the value of restock_type is return or cancel.\n          If the item is not already stocked at the location, then\n          the item is connected to the location. An error is returned when the item is connected to\n          a \n          fulfillment service location and a different location is provided."
          schema: {}
          required: false
        - in: "query"
          name: "transactions"
          description: "A list of transactions\n          to process as refunds."
          schema: {}
          required: false
        - in: "query"
          name: "currency"
          description: "The three-letter code (ISO 4217 format) for the currency used for the refund."
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_orders_param_order_id_refunds"
  /admin/api/unstable/orders/{order_id}/refunds/{refund_id}.json:
    get:
      summary: "Retrieves a specific refund."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#show-unstable"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "refund_id"
          required: true
          schema:
            type: "string"
          description: "refund_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
        - in: "query"
          name: "in_shop_currency"
          description: "Show amounts in the shop currency for the underlying transaction.\n                  (default: false)"
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_orders_param_order_id_refunds_param_refund_id"
  /admin/api/unstable/orders/{order_id}/refunds/calculate.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  refund:
                    currency: "USD"
                    shipping:
                      amount: 2
                summary: "Calculate a refund for a partial amount of shipping"
              example2:
                value:
                  refund:
                    shipping:
                      full_refund: true
                    refund_line_items:
                      - line_item_id: 518995019
                        quantity: 1
                        restock_type: "no_restock"
                summary: "Calculate the refund without specifying currency"
              example3:
                value:
                  refund:
                    currency: "USD"
                    shipping:
                      full_refund: true
                    refund_line_items:
                      - line_item_id: 518995019
                        quantity: 1
                        restock_type: "no_restock"
                summary: "Calculate the refund for a line item and shipping"
      summary: "Caution\n          For multi-currency orders, the currency property is required whenever the amount property is provided. For more information, see Migrating to support multiple currencies.\n        \n          Calculates refund transactions based on line items and shipping. When you want to create a refund,\n          you should first use the calculate endpoint to generate accurate refund transactions. Specify the line items\n          that are being refunded, their quantity and restock instructions, and whether you intend to refund\n          shipping costs. If the restock instructions can't be met—for example, because you try to return more items than have been\n          fulfilled—then the endpoint returns modified restock instructions. You can then use the response in the body of the request to create the actual refund.\n          The response includes a transactions object with \"kind\": \"suggested_refund\",\n          which must to be changed to \"kind\" : \"refund\" for the refund to be accepted."
      description: "https://shopify.dev/docs/admin-api/rest/reference/orders/refund#calculate-unstable"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "shipping"
          description: "Specify how much shipping to refund. It has the following properties:\n                    \n                        full_refund: Whether to refund all remaining shipping.\n                        amount: Set a specific amount to refund for shipping. Takes precedence over full_refund."
          schema: {}
          required: false
        - in: "query"
          name: "refund_line_items"
          description: "A list of line item IDs, quantities to refund, and restock instructions. Each entry has the following properties:\n                    \n                        line_item_id: The ID of a line item to refund.\n                        quantity: The quantity to refund.\n                        restock_type:           How this refund line item affects inventory levels. Valid values:\n          \n            no_restock: Refunding these items won't affect inventory.\n            cancel: The items have not yet been fulfilled. The canceled quantity will be added\n            back to the available count. The number of fulfillable units for this line item will decrease.\n            return: The items were already delivered but will be returned to the merchant.\n            The returned quantity will be added back to the available count.\n            The number of fulfillable units for this line item will remain unchanged.\n          \n\n                        location_id:           The ID of the location\n          where the items should be restocked. If location_id is not provided and the value of\n          restock_type is return or cancel, then the endpoint returns a suitable\n          location ID.\n\n                        already_stocked:           Whether the item is already stocked at\n          the location. If this is false, then creating the refund will connect the item to the location and start\n          stocking it there."
          schema: {}
          required: false
        - in: "query"
          name: "currency"
          description: "The three-letter code (ISO 4217 format) for the\n          currency used for the refund. Note: Required whenever the shipping amount property is provided."
          schema: {}
          required: false
      tags:
        - "orders"
        - "refund"
        - "orders/refund"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_orders_param_order_id_refunds_calculate"
  /admin/api/2020-01/gift_cards.json:
    get:
      summary: "Retrieves a list of gift cards. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#index-2020-01"
      parameters:
        - in: "query"
          name: "status"
          description: "Retrieve gift cards with a given status. Valid values:\n                    \n                        enabled: Restrict results to only enabled gift cards\n                        disabled: Restrict results to only disabled gift cards"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_gift_cards"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  gift_card:
                    note: "This is a note"
                    initial_value: 100
                    code: "ABCD EFGH IJKL MNOP"
                    template_suffix: "gift_cards.birthday.liquid"
                summary: "Create a gift card with a custom code"
              example2:
                value:
                  gift_card:
                    initial_value: 25
                summary: "Create a gift card with an automatically generated code"
      summary: "Creates a gift card"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#create-2020-01"
      parameters: []
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_gift_cards"
  /admin/api/2020-01/gift_cards/{gift_card_id}.json:
    get:
      summary: "Retrieves a single gift card by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#show-2020-01"
      parameters:
        - in: "path"
          name: "gift_card_id"
          required: true
          schema:
            type: "string"
          description: "gift_card_id"
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_gift_cards_param_gift_card_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  gift_card:
                    id: 48394658
                    note: "Updating with a new note"
                summary: "Update the note of a gift card"
              example2:
                value:
                  gift_card:
                    id: 48394658
                    expires_on: "2020-01-01"
                summary: "Update the expiry date of a gift card"
      summary: "Updates an existing gift card.\n          The gift card's balance can't be changed via the API. You can change only the expiry date, note, and template suffix."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#update-2020-01"
      parameters:
        - in: "path"
          name: "gift_card_id"
          required: true
          schema:
            type: "string"
          description: "gift_card_id"
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_gift_cards_param_gift_card_id"
  /admin/api/2020-01/gift_cards/count.json:
    get:
      summary: "Retrieves a count of gift cards"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#count-2020-01"
      parameters:
        - in: "query"
          name: "status"
          description: "Count gift cards with a given status. Valid values:\n                    \n                        enabled: Count only enabled gift cards\n                        disabled: Count only disabled gift cards"
          schema: {}
          required: false
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_gift_cards_count"
  /admin/api/2020-01/gift_cards/{gift_card_id}/disable.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  gift_card:
                    id: 48394658
                summary: "Disable a gift card"
      summary: "Disables a gift card. Disabling a gift card can't be undone."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#disable-2020-01"
      parameters:
        - in: "path"
          name: "gift_card_id"
          required: true
          schema:
            type: "string"
          description: "gift_card_id"
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_gift_cards_param_gift_card_id_disable"
  /admin/api/2020-01/gift_cards/search.json:
    get:
      summary: "Searches for gift cards that match a supplied query. The following fields are indexed by search:\n          \n            created_at\n            updated_at\n            disabled_at\n            balance\n            initial_value\n            amount_spent\n            email\n            last_characters\n          \n          Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#search-2020-01"
      parameters:
        - in: "query"
          name: "order"
          description: "The field and direction to order results by.\n                  (default: disabled_at DESC)"
          schema: {}
          required: false
        - in: "query"
          name: "query"
          description: "The text to search for."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_gift_cards_search"
  /admin/api/2020-04/gift_cards.json:
    get:
      summary: "Retrieves a list of gift cards. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#index-2020-04"
      parameters:
        - in: "query"
          name: "status"
          description: "Retrieve gift cards with a given status. Valid values:\n                    \n                        enabled: Restrict results to only enabled gift cards\n                        disabled: Restrict results to only disabled gift cards"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_gift_cards"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  gift_card:
                    note: "This is a note"
                    initial_value: 100
                    code: "ABCD EFGH IJKL MNOP"
                    template_suffix: "gift_cards.birthday.liquid"
                summary: "Create a gift card with a custom code"
              example2:
                value:
                  gift_card:
                    initial_value: 25
                summary: "Create a gift card with an automatically generated code"
      summary: "Creates a gift card"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#create-2020-04"
      parameters: []
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_gift_cards"
  /admin/api/2020-04/gift_cards/{gift_card_id}.json:
    get:
      summary: "Retrieves a single gift card by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#show-2020-04"
      parameters:
        - in: "path"
          name: "gift_card_id"
          required: true
          schema:
            type: "string"
          description: "gift_card_id"
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_gift_cards_param_gift_card_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  gift_card:
                    id: 48394658
                    note: "Updating with a new note"
                summary: "Update the note of a gift card"
              example2:
                value:
                  gift_card:
                    id: 48394658
                    expires_on: "2020-01-01"
                summary: "Update the expiry date of a gift card"
      summary: "Updates an existing gift card.\n          The gift card's balance can't be changed via the API. You can change only the expiry date, note, and template suffix."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#update-2020-04"
      parameters:
        - in: "path"
          name: "gift_card_id"
          required: true
          schema:
            type: "string"
          description: "gift_card_id"
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_gift_cards_param_gift_card_id"
  /admin/api/2020-04/gift_cards/count.json:
    get:
      summary: "Retrieves a count of gift cards"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#count-2020-04"
      parameters:
        - in: "query"
          name: "status"
          description: "Count gift cards with a given status. Valid values:\n                    \n                        enabled: Count only enabled gift cards\n                        disabled: Count only disabled gift cards"
          schema: {}
          required: false
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_gift_cards_count"
  /admin/api/2020-04/gift_cards/{gift_card_id}/disable.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  gift_card:
                    id: 48394658
                summary: "Disable a gift card"
      summary: "Disables a gift card. Disabling a gift card can't be undone."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#disable-2020-04"
      parameters:
        - in: "path"
          name: "gift_card_id"
          required: true
          schema:
            type: "string"
          description: "gift_card_id"
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_gift_cards_param_gift_card_id_disable"
  /admin/api/2020-04/gift_cards/search.json:
    get:
      summary: "Searches for gift cards that match a supplied query. The following fields are indexed by search:\n          \n            created_at\n            updated_at\n            disabled_at\n            balance\n            initial_value\n            amount_spent\n            email\n            last_characters\n          \n          Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#search-2020-04"
      parameters:
        - in: "query"
          name: "order"
          description: "The field and direction to order results by.\n                  (default: disabled_at DESC)"
          schema: {}
          required: false
        - in: "query"
          name: "query"
          description: "The text to search for."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_gift_cards_search"
  /admin/api/2020-07/gift_cards.json:
    get:
      summary: "Retrieves a list of gift cards. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#index-2020-07"
      parameters:
        - in: "query"
          name: "status"
          description: "Retrieve gift cards with a given status. Valid values:\n                    \n                        enabled: Restrict results to only enabled gift cards\n                        disabled: Restrict results to only disabled gift cards"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_gift_cards"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  gift_card:
                    note: "This is a note"
                    initial_value: 100
                    code: "ABCD EFGH IJKL MNOP"
                    template_suffix: "gift_cards.birthday.liquid"
                summary: "Create a gift card with a custom code"
              example2:
                value:
                  gift_card:
                    initial_value: 25
                summary: "Create a gift card with an automatically generated code"
      summary: "Creates a gift card"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#create-2020-07"
      parameters: []
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_gift_cards"
  /admin/api/2020-07/gift_cards/{gift_card_id}.json:
    get:
      summary: "Retrieves a single gift card by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#show-2020-07"
      parameters:
        - in: "path"
          name: "gift_card_id"
          required: true
          schema:
            type: "string"
          description: "gift_card_id"
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_gift_cards_param_gift_card_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  gift_card:
                    id: 48394658
                    note: "Updating with a new note"
                summary: "Update the note of a gift card"
              example2:
                value:
                  gift_card:
                    id: 48394658
                    expires_on: "2020-01-01"
                summary: "Update the expiry date of a gift card"
      summary: "Updates an existing gift card.\n          The gift card's balance can't be changed via the API. You can change only the expiry date, note, and template suffix."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#update-2020-07"
      parameters:
        - in: "path"
          name: "gift_card_id"
          required: true
          schema:
            type: "string"
          description: "gift_card_id"
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_gift_cards_param_gift_card_id"
  /admin/api/2020-07/gift_cards/count.json:
    get:
      summary: "Retrieves a count of gift cards"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#count-2020-07"
      parameters:
        - in: "query"
          name: "status"
          description: "Count gift cards with a given status. Valid values:\n                    \n                        enabled: Count only enabled gift cards\n                        disabled: Count only disabled gift cards"
          schema: {}
          required: false
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_gift_cards_count"
  /admin/api/2020-07/gift_cards/{gift_card_id}/disable.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  gift_card:
                    id: 48394658
                summary: "Disable a gift card"
      summary: "Disables a gift card. Disabling a gift card can't be undone."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#disable-2020-07"
      parameters:
        - in: "path"
          name: "gift_card_id"
          required: true
          schema:
            type: "string"
          description: "gift_card_id"
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_gift_cards_param_gift_card_id_disable"
  /admin/api/2020-07/gift_cards/search.json:
    get:
      summary: "Searches for gift cards that match a supplied query. The following fields are indexed by search:\n          \n            created_at\n            updated_at\n            disabled_at\n            balance\n            initial_value\n            amount_spent\n            email\n            last_characters\n          \n          Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#search-2020-07"
      parameters:
        - in: "query"
          name: "order"
          description: "The field and direction to order results by.\n                  (default: disabled_at DESC)"
          schema: {}
          required: false
        - in: "query"
          name: "query"
          description: "The text to search for."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_gift_cards_search"
  /admin/api/2020-10/gift_cards.json:
    get:
      summary: "Retrieves a list of gift cards. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#index-2020-10"
      parameters:
        - in: "query"
          name: "status"
          description: "Retrieve gift cards with a given status. Valid values:\n                    \n                        enabled: Restrict results to only enabled gift cards\n                        disabled: Restrict results to only disabled gift cards"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_gift_cards"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  gift_card:
                    note: "This is a note"
                    initial_value: 100
                    code: "ABCD EFGH IJKL MNOP"
                    template_suffix: "gift_cards.birthday.liquid"
                summary: "Create a gift card with a custom code"
              example2:
                value:
                  gift_card:
                    initial_value: 25
                summary: "Create a gift card with an automatically generated code"
      summary: "Creates a gift card"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#create-2020-10"
      parameters: []
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_gift_cards"
  /admin/api/2020-10/gift_cards/{gift_card_id}.json:
    get:
      summary: "Retrieves a single gift card by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#show-2020-10"
      parameters:
        - in: "path"
          name: "gift_card_id"
          required: true
          schema:
            type: "string"
          description: "gift_card_id"
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_gift_cards_param_gift_card_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  gift_card:
                    id: 48394658
                    note: "Updating with a new note"
                summary: "Update the note of a gift card"
              example2:
                value:
                  gift_card:
                    id: 48394658
                    expires_on: "2020-01-01"
                summary: "Update the expiry date of a gift card"
      summary: "Updates an existing gift card.\n          The gift card's balance can't be changed via the API. You can change only the expiry date, note, and template suffix."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#update-2020-10"
      parameters:
        - in: "path"
          name: "gift_card_id"
          required: true
          schema:
            type: "string"
          description: "gift_card_id"
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_gift_cards_param_gift_card_id"
  /admin/api/2020-10/gift_cards/count.json:
    get:
      summary: "Retrieves a count of gift cards"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#count-2020-10"
      parameters:
        - in: "query"
          name: "status"
          description: "Count gift cards with a given status. Valid values:\n                    \n                        enabled: Count only enabled gift cards\n                        disabled: Count only disabled gift cards"
          schema: {}
          required: false
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_gift_cards_count"
  /admin/api/2020-10/gift_cards/{gift_card_id}/disable.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  gift_card:
                    id: 48394658
                summary: "Disable a gift card"
      summary: "Disables a gift card. Disabling a gift card can't be undone."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#disable-2020-10"
      parameters:
        - in: "path"
          name: "gift_card_id"
          required: true
          schema:
            type: "string"
          description: "gift_card_id"
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_gift_cards_param_gift_card_id_disable"
  /admin/api/2020-10/gift_cards/search.json:
    get:
      summary: "Searches for gift cards that match a supplied query. The following fields are indexed by search:\n          \n            created_at\n            updated_at\n            disabled_at\n            balance\n            initial_value\n            amount_spent\n            email\n            last_characters\n          \n          Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#search-2020-10"
      parameters:
        - in: "query"
          name: "order"
          description: "The field and direction to order results by.\n                  (default: disabled_at DESC)"
          schema: {}
          required: false
        - in: "query"
          name: "query"
          description: "The text to search for."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_gift_cards_search"
  /admin/api/2021-01/gift_cards.json:
    get:
      summary: "Retrieves a list of gift cards. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#index-2021-01"
      parameters:
        - in: "query"
          name: "status"
          description: "Retrieve gift cards with a given status. Valid values:\n                    \n                        enabled: Restrict results to only enabled gift cards\n                        disabled: Restrict results to only disabled gift cards"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_gift_cards"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  gift_card:
                    note: "This is a note"
                    initial_value: 100
                    code: "ABCD EFGH IJKL MNOP"
                    template_suffix: "gift_cards.birthday.liquid"
                summary: "Create a gift card with a custom code"
              example2:
                value:
                  gift_card:
                    initial_value: 25
                summary: "Create a gift card with an automatically generated code"
      summary: "Creates a gift card"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#create-2021-01"
      parameters: []
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_gift_cards"
  /admin/api/2021-01/gift_cards/{gift_card_id}.json:
    get:
      summary: "Retrieves a single gift card by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#show-2021-01"
      parameters:
        - in: "path"
          name: "gift_card_id"
          required: true
          schema:
            type: "string"
          description: "gift_card_id"
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_gift_cards_param_gift_card_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  gift_card:
                    id: 48394658
                    note: "Updating with a new note"
                summary: "Update the note of a gift card"
              example2:
                value:
                  gift_card:
                    id: 48394658
                    expires_on: "2020-01-01"
                summary: "Update the expiry date of a gift card"
      summary: "Updates an existing gift card.\n          The gift card's balance can't be changed via the API. You can change only the expiry date, note, and template suffix."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#update-2021-01"
      parameters:
        - in: "path"
          name: "gift_card_id"
          required: true
          schema:
            type: "string"
          description: "gift_card_id"
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_gift_cards_param_gift_card_id"
  /admin/api/2021-01/gift_cards/count.json:
    get:
      summary: "Retrieves a count of gift cards"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#count-2021-01"
      parameters:
        - in: "query"
          name: "status"
          description: "Count gift cards with a given status. Valid values:\n                    \n                        enabled: Count only enabled gift cards\n                        disabled: Count only disabled gift cards"
          schema: {}
          required: false
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_gift_cards_count"
  /admin/api/2021-01/gift_cards/{gift_card_id}/disable.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  gift_card:
                    id: 48394658
                summary: "Disable a gift card"
      summary: "Disables a gift card. Disabling a gift card can't be undone."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#disable-2021-01"
      parameters:
        - in: "path"
          name: "gift_card_id"
          required: true
          schema:
            type: "string"
          description: "gift_card_id"
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_gift_cards_param_gift_card_id_disable"
  /admin/api/2021-01/gift_cards/search.json:
    get:
      summary: "Searches for gift cards that match a supplied query. The following fields are indexed by search:\n          \n            created_at\n            updated_at\n            disabled_at\n            balance\n            initial_value\n            amount_spent\n            email\n            last_characters\n          \n          Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#search-2021-01"
      parameters:
        - in: "query"
          name: "order"
          description: "The field and direction to order results by.\n                  (default: disabled_at DESC)"
          schema: {}
          required: false
        - in: "query"
          name: "query"
          description: "The text to search for."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_gift_cards_search"
  /admin/api/unstable/gift_cards.json:
    get:
      summary: "Retrieves a list of gift cards. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#index-unstable"
      parameters:
        - in: "query"
          name: "status"
          description: "Retrieve gift cards with a given status. Valid values:\n                    \n                        enabled: Restrict results to only enabled gift cards\n                        disabled: Restrict results to only disabled gift cards"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_gift_cards"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  gift_card:
                    note: "This is a note"
                    initial_value: 100
                    code: "ABCD EFGH IJKL MNOP"
                    template_suffix: "gift_cards.birthday.liquid"
                summary: "Create a gift card with a custom code"
              example2:
                value:
                  gift_card:
                    initial_value: 25
                summary: "Create a gift card with an automatically generated code"
      summary: "Creates a gift card"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#create-unstable"
      parameters: []
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_gift_cards"
  /admin/api/unstable/gift_cards/{gift_card_id}.json:
    get:
      summary: "Retrieves a single gift card by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#show-unstable"
      parameters:
        - in: "path"
          name: "gift_card_id"
          required: true
          schema:
            type: "string"
          description: "gift_card_id"
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_gift_cards_param_gift_card_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  gift_card:
                    id: 48394658
                    note: "Updating with a new note"
                summary: "Update the note of a gift card"
              example2:
                value:
                  gift_card:
                    id: 48394658
                    expires_on: "2020-01-01"
                summary: "Update the expiry date of a gift card"
      summary: "Updates an existing gift card.\n          The gift card's balance can't be changed via the API. You can change only the expiry date, note, and template suffix."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#update-unstable"
      parameters:
        - in: "path"
          name: "gift_card_id"
          required: true
          schema:
            type: "string"
          description: "gift_card_id"
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_gift_cards_param_gift_card_id"
  /admin/api/unstable/gift_cards/count.json:
    get:
      summary: "Retrieves a count of gift cards"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#count-unstable"
      parameters:
        - in: "query"
          name: "status"
          description: "Count gift cards with a given status. Valid values:\n                    \n                        enabled: Count only enabled gift cards\n                        disabled: Count only disabled gift cards"
          schema: {}
          required: false
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_gift_cards_count"
  /admin/api/unstable/gift_cards/{gift_card_id}/disable.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  gift_card:
                    id: 48394658
                summary: "Disable a gift card"
      summary: "Disables a gift card. Disabling a gift card can't be undone."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#disable-unstable"
      parameters:
        - in: "path"
          name: "gift_card_id"
          required: true
          schema:
            type: "string"
          description: "gift_card_id"
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_gift_cards_param_gift_card_id_disable"
  /admin/api/unstable/gift_cards/search.json:
    get:
      summary: "Searches for gift cards that match a supplied query. The following fields are indexed by search:\n          \n            created_at\n            updated_at\n            disabled_at\n            balance\n            initial_value\n            amount_spent\n            email\n            last_characters\n          \n          Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/giftcard#search-unstable"
      parameters:
        - in: "query"
          name: "order"
          description: "The field and direction to order results by.\n                  (default: disabled_at DESC)"
          schema: {}
          required: false
        - in: "query"
          name: "query"
          description: "The text to search for."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "plus"
        - "giftcard"
        - "plus/giftcard"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_gift_cards_search"
  /admin/api/2020-01/users.json:
    get:
      summary: "Retrieves a list of all users. Note: As of version 2021-01, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/user#index-2020-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show on a page.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "page_info"
          description: "A unique ID used to access a certain page of results."
          schema: {}
          required: false
      tags:
        - "plus"
        - "user"
        - "plus/user"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_users"
  /admin/api/2020-01/users/{user_id}.json:
    get:
      summary: "Retrieves a single user"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/user#show-2020-01"
      parameters:
        - in: "path"
          name: "user_id"
          required: true
          schema:
            type: "string"
          description: "user_id"
      tags:
        - "plus"
        - "user"
        - "plus/user"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_users_param_user_id"
  /admin/api/2020-01/users/current.json:
    get:
      summary: "Retrieves information about the user account associated with the access token used to make this API request. This request works only when the access token was created for a specific user of the shop."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/user#current-2020-01"
      parameters: []
      tags:
        - "plus"
        - "user"
        - "plus/user"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_users_current"
  /admin/api/2020-04/users.json:
    get:
      summary: "Retrieves a list of all users. Note: As of version 2021-01, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/user#index-2020-04"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show on a page.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "page_info"
          description: "A unique ID used to access a certain page of results."
          schema: {}
          required: false
      tags:
        - "plus"
        - "user"
        - "plus/user"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_users"
  /admin/api/2020-04/users/{user_id}.json:
    get:
      summary: "Retrieves a single user"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/user#show-2020-04"
      parameters:
        - in: "path"
          name: "user_id"
          required: true
          schema:
            type: "string"
          description: "user_id"
      tags:
        - "plus"
        - "user"
        - "plus/user"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_users_param_user_id"
  /admin/api/2020-04/users/current.json:
    get:
      summary: "Retrieves information about the user account associated with the access token used to make this API request. This request works only when the access token was created for a specific user of the shop."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/user#current-2020-04"
      parameters: []
      tags:
        - "plus"
        - "user"
        - "plus/user"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_users_current"
  /admin/api/2020-07/users.json:
    get:
      summary: "Retrieves a list of all users. Note: As of version 2021-01, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/user#index-2020-07"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show on a page.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "page_info"
          description: "A unique ID used to access a certain page of results."
          schema: {}
          required: false
      tags:
        - "plus"
        - "user"
        - "plus/user"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_users"
  /admin/api/2020-07/users/{user_id}.json:
    get:
      summary: "Retrieves a single user"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/user#show-2020-07"
      parameters:
        - in: "path"
          name: "user_id"
          required: true
          schema:
            type: "string"
          description: "user_id"
      tags:
        - "plus"
        - "user"
        - "plus/user"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_users_param_user_id"
  /admin/api/2020-07/users/current.json:
    get:
      summary: "Retrieves information about the user account associated with the access token used to make this API request. This request works only when the access token was created for a specific user of the shop."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/user#current-2020-07"
      parameters: []
      tags:
        - "plus"
        - "user"
        - "plus/user"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_users_current"
  /admin/api/2020-10/users.json:
    get:
      summary: "Retrieves a list of all users. Note: As of version 2021-01, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/user#index-2020-10"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show on a page.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "page_info"
          description: "A unique ID used to access a certain page of results."
          schema: {}
          required: false
      tags:
        - "plus"
        - "user"
        - "plus/user"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_users"
  /admin/api/2020-10/users/{user_id}.json:
    get:
      summary: "Retrieves a single user"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/user#show-2020-10"
      parameters:
        - in: "path"
          name: "user_id"
          required: true
          schema:
            type: "string"
          description: "user_id"
      tags:
        - "plus"
        - "user"
        - "plus/user"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_users_param_user_id"
  /admin/api/2020-10/users/current.json:
    get:
      summary: "Retrieves information about the user account associated with the access token used to make this API request. This request works only when the access token was created for a specific user of the shop."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/user#current-2020-10"
      parameters: []
      tags:
        - "plus"
        - "user"
        - "plus/user"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_users_current"
  /admin/api/2021-01/users.json:
    get:
      summary: "Retrieves a list of all users. Note: As of version 2021-01, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/user#index-2021-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show on a page.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "page_info"
          description: "A unique ID used to access a certain page of results."
          schema: {}
          required: false
      tags:
        - "plus"
        - "user"
        - "plus/user"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_users"
  /admin/api/2021-01/users/{user_id}.json:
    get:
      summary: "Retrieves a single user"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/user#show-2021-01"
      parameters:
        - in: "path"
          name: "user_id"
          required: true
          schema:
            type: "string"
          description: "user_id"
      tags:
        - "plus"
        - "user"
        - "plus/user"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_users_param_user_id"
  /admin/api/2021-01/users/current.json:
    get:
      summary: "Retrieves information about the user account associated with the access token used to make this API request. This request works only when the access token was created for a specific user of the shop."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/user#current-2021-01"
      parameters: []
      tags:
        - "plus"
        - "user"
        - "plus/user"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_users_current"
  /admin/api/unstable/users.json:
    get:
      summary: "Retrieves a list of all users. Note: As of version 2021-01, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/user#index-unstable"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show on a page.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "page_info"
          description: "A unique ID used to access a certain page of results."
          schema: {}
          required: false
      tags:
        - "plus"
        - "user"
        - "plus/user"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_users"
  /admin/api/unstable/users/{user_id}.json:
    get:
      summary: "Retrieves a single user"
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/user#show-unstable"
      parameters:
        - in: "path"
          name: "user_id"
          required: true
          schema:
            type: "string"
          description: "user_id"
      tags:
        - "plus"
        - "user"
        - "plus/user"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_users_param_user_id"
  /admin/api/unstable/users/current.json:
    get:
      summary: "Retrieves information about the user account associated with the access token used to make this API request. This request works only when the access token was created for a specific user of the shop."
      description: "https://shopify.dev/docs/admin-api/rest/reference/plus/user#current-unstable"
      parameters: []
      tags:
        - "plus"
        - "user"
        - "plus/user"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_users_current"
  /admin/api/2020-01/collects.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  collect:
                    product_id: 921728736
                    collection_id: 841564295
                summary: "Create a new link between an existing product and an existing collection"
              example2:
                value:
                  collect:
                    body: "foobar"
                summary: "Creating a collect without a product or collection ID fails and returns an error"
      summary: "Adds a product to a custom collection."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#create-2020-01"
      parameters: []
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_collects"
    get:
      summary: "Retrieves a list of collects. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#index-2020-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_collects"
  /admin/api/2020-01/collects/{collect_id}.json:
    delete:
      summary: "Removes a product from a collection."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#destroy-2020-01"
      parameters:
        - in: "path"
          name: "collect_id"
          required: true
          schema:
            type: "string"
          description: "collect_id"
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_collects_param_collect_id"
    get:
      summary: "Retrieves a specific collect by its ID."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#show-2020-01"
      parameters:
        - in: "path"
          name: "collect_id"
          required: true
          schema:
            type: "string"
          description: "collect_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_collects_param_collect_id"
  /admin/api/2020-01/collects/count.json:
    get:
      summary: "Retrieves a count of collects."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#count-2020-01"
      parameters:
        - in: "query"
          name: "collection_id"
          schema:
            type: "integer"
          description: "collection_id"
          required: false
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_collects_count"
  /admin/api/2020-04/collects.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  collect:
                    product_id: 921728736
                    collection_id: 841564295
                summary: "Create a new link between an existing product and an existing collection"
              example2:
                value:
                  collect:
                    body: "foobar"
                summary: "Creating a collect without a product or collection ID fails and returns an error"
      summary: "Adds a product to a custom collection."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#create-2020-04"
      parameters: []
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_collects"
    get:
      summary: "Retrieves a list of collects. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#index-2020-04"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_collects"
  /admin/api/2020-04/collects/{collect_id}.json:
    delete:
      summary: "Removes a product from a collection."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#destroy-2020-04"
      parameters:
        - in: "path"
          name: "collect_id"
          required: true
          schema:
            type: "string"
          description: "collect_id"
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_collects_param_collect_id"
    get:
      summary: "Retrieves a specific collect by its ID."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#show-2020-04"
      parameters:
        - in: "path"
          name: "collect_id"
          required: true
          schema:
            type: "string"
          description: "collect_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_collects_param_collect_id"
  /admin/api/2020-04/collects/count.json:
    get:
      summary: "Retrieves a count of collects."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#count-2020-04"
      parameters:
        - in: "query"
          name: "collection_id"
          schema:
            type: "integer"
          description: "collection_id"
          required: false
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_collects_count"
  /admin/api/2020-07/collects.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  collect:
                    product_id: 921728736
                    collection_id: 841564295
                summary: "Create a new link between an existing product and an existing collection"
              example2:
                value:
                  collect:
                    body: "foobar"
                summary: "Creating a collect without a product or collection ID fails and returns an error"
      summary: "Adds a product to a custom collection."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#create-2020-07"
      parameters: []
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_collects"
    get:
      summary: "Retrieves a list of collects. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#index-2020-07"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_collects"
  /admin/api/2020-07/collects/{collect_id}.json:
    delete:
      summary: "Removes a product from a collection."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#destroy-2020-07"
      parameters:
        - in: "path"
          name: "collect_id"
          required: true
          schema:
            type: "string"
          description: "collect_id"
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_collects_param_collect_id"
    get:
      summary: "Retrieves a specific collect by its ID."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#show-2020-07"
      parameters:
        - in: "path"
          name: "collect_id"
          required: true
          schema:
            type: "string"
          description: "collect_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_collects_param_collect_id"
  /admin/api/2020-07/collects/count.json:
    get:
      summary: "Retrieves a count of collects."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#count-2020-07"
      parameters:
        - in: "query"
          name: "collection_id"
          schema:
            type: "integer"
          description: "collection_id"
          required: false
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_collects_count"
  /admin/api/2020-10/collects.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  collect:
                    product_id: 921728736
                    collection_id: 841564295
                summary: "Create a new link between an existing product and an existing collection"
              example2:
                value:
                  collect:
                    body: "foobar"
                summary: "Creating a collect without a product or collection ID fails and returns an error"
      summary: "Adds a product to a custom collection."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#create-2020-10"
      parameters: []
      tags:
        - "products"
        - "collect"
        - "products/collect"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_collects"
    get:
      summary: "Retrieves a list of collects. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#index-2020-10"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "collect"
        - "products/collect"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_collects"
  /admin/api/2020-10/collects/{collect_id}.json:
    delete:
      summary: "Removes a product from a collection."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#destroy-2020-10"
      parameters:
        - in: "path"
          name: "collect_id"
          required: true
          schema:
            type: "string"
          description: "collect_id"
      tags:
        - "products"
        - "collect"
        - "products/collect"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_collects_param_collect_id"
    get:
      summary: "Retrieves a specific collect by its ID."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#show-2020-10"
      parameters:
        - in: "path"
          name: "collect_id"
          required: true
          schema:
            type: "string"
          description: "collect_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "collect"
        - "products/collect"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_collects_param_collect_id"
  /admin/api/2020-10/collects/count.json:
    get:
      summary: "Retrieves a count of collects."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#count-2020-10"
      parameters:
        - in: "query"
          name: "collection_id"
          schema:
            type: "integer"
          description: "collection_id"
          required: false
      tags:
        - "products"
        - "collect"
        - "products/collect"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_collects_count"
  /admin/api/2021-01/collects.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  collect:
                    product_id: 921728736
                    collection_id: 841564295
                summary: "Create a new link between an existing product and an existing collection"
              example2:
                value:
                  collect:
                    body: "foobar"
                summary: "Creating a collect without a product or collection ID fails and returns an error"
      summary: "Adds a product to a custom collection."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#create-2021-01"
      parameters: []
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_collects"
    get:
      summary: "Retrieves a list of collects. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#index-2021-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_collects"
  /admin/api/2021-01/collects/{collect_id}.json:
    delete:
      summary: "Removes a product from a collection."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#destroy-2021-01"
      parameters:
        - in: "path"
          name: "collect_id"
          required: true
          schema:
            type: "string"
          description: "collect_id"
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_collects_param_collect_id"
    get:
      summary: "Retrieves a specific collect by its ID."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#show-2021-01"
      parameters:
        - in: "path"
          name: "collect_id"
          required: true
          schema:
            type: "string"
          description: "collect_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_collects_param_collect_id"
  /admin/api/2021-01/collects/count.json:
    get:
      summary: "Retrieves a count of collects."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#count-2021-01"
      parameters:
        - in: "query"
          name: "collection_id"
          schema:
            type: "integer"
          description: "collection_id"
          required: false
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_collects_count"
  /admin/api/unstable/collects.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  collect:
                    product_id: 921728736
                    collection_id: 841564295
                summary: "Create a new link between an existing product and an existing collection"
              example2:
                value:
                  collect:
                    body: "foobar"
                summary: "Creating a collect without a product or collection ID fails and returns an error"
      summary: "Adds a product to a custom collection."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#create-unstable"
      parameters: []
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_collects"
    get:
      summary: "Retrieves a list of collects. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#index-unstable"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_collects"
  /admin/api/unstable/collects/{collect_id}.json:
    delete:
      summary: "Removes a product from a collection."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#destroy-unstable"
      parameters:
        - in: "path"
          name: "collect_id"
          required: true
          schema:
            type: "string"
          description: "collect_id"
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_collects_param_collect_id"
    get:
      summary: "Retrieves a specific collect by its ID."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#show-unstable"
      parameters:
        - in: "path"
          name: "collect_id"
          required: true
          schema:
            type: "string"
          description: "collect_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_collects_param_collect_id"
  /admin/api/unstable/collects/count.json:
    get:
      summary: "Retrieves a count of collects."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collect#count-unstable"
      parameters:
        - in: "query"
          name: "collection_id"
          schema:
            type: "integer"
          description: "collection_id"
          required: false
      tags:
        - "products"
        - "collect"
        - "products/collect"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_collects_count"
  /admin/api/2020-01/collections/{collection_id}.json:
    get:
      summary: "Retrieves a single collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collection#show-2020-01"
      parameters:
        - in: "path"
          name: "collection_id"
          required: true
          schema:
            type: "string"
          description: "collection_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "collection"
        - "products/collection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_collections_param_collection_id"
  /admin/api/2020-01/collections/{collection_id}/products.json:
    get:
      summary: "Retrieve a list of products belonging to a collection. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints.. The products returned are sorted by the collection's sort order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collection#products-2020-01"
      parameters:
        - in: "path"
          name: "collection_id"
          required: true
          schema:
            type: "string"
          description: "collection_id"
        - in: "query"
          name: "limit"
          description: "The number of products to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
      tags:
        - "products"
        - "collection"
        - "products/collection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_collections_param_collection_id_products"
  /admin/api/2020-04/collections/{collection_id}.json:
    get:
      summary: "Retrieves a single collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collection#show-2020-04"
      parameters:
        - in: "path"
          name: "collection_id"
          required: true
          schema:
            type: "string"
          description: "collection_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "collection"
        - "products/collection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_collections_param_collection_id"
  /admin/api/2020-04/collections/{collection_id}/products.json:
    get:
      summary: "Retrieve a list of products belonging to a collection. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints.. The products returned are sorted by the collection's sort order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collection#products-2020-04"
      parameters:
        - in: "path"
          name: "collection_id"
          required: true
          schema:
            type: "string"
          description: "collection_id"
        - in: "query"
          name: "limit"
          description: "The number of products to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
      tags:
        - "products"
        - "collection"
        - "products/collection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_collections_param_collection_id_products"
  /admin/api/2020-07/collections/{collection_id}.json:
    get:
      summary: "Retrieves a single collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collection#show-2020-07"
      parameters:
        - in: "path"
          name: "collection_id"
          required: true
          schema:
            type: "string"
          description: "collection_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "collection"
        - "products/collection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_collections_param_collection_id"
  /admin/api/2020-07/collections/{collection_id}/products.json:
    get:
      summary: "Retrieve a list of products belonging to a collection. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints.. The products returned are sorted by the collection's sort order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collection#products-2020-07"
      parameters:
        - in: "path"
          name: "collection_id"
          required: true
          schema:
            type: "string"
          description: "collection_id"
        - in: "query"
          name: "limit"
          description: "The number of products to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
      tags:
        - "products"
        - "collection"
        - "products/collection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_collections_param_collection_id_products"
  /admin/api/2020-10/collections/{collection_id}.json:
    get:
      summary: "Retrieves a single collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collection#show-2020-10"
      parameters:
        - in: "path"
          name: "collection_id"
          required: true
          schema:
            type: "string"
          description: "collection_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "collection"
        - "products/collection"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_collections_param_collection_id"
  /admin/api/2020-10/collections/{collection_id}/products.json:
    get:
      summary: "Retrieve a list of products belonging to a collection. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints.. The products returned are sorted by the collection's sort order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collection#products-2020-10"
      parameters:
        - in: "path"
          name: "collection_id"
          required: true
          schema:
            type: "string"
          description: "collection_id"
        - in: "query"
          name: "limit"
          description: "The number of products to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
      tags:
        - "products"
        - "collection"
        - "products/collection"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_collections_param_collection_id_products"
  /admin/api/2021-01/collections/{collection_id}.json:
    get:
      summary: "Retrieves a single collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collection#show-2021-01"
      parameters:
        - in: "path"
          name: "collection_id"
          required: true
          schema:
            type: "string"
          description: "collection_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "collection"
        - "products/collection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_collections_param_collection_id"
  /admin/api/2021-01/collections/{collection_id}/products.json:
    get:
      summary: "Retrieve a list of products belonging to a collection. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints.. The products returned are sorted by the collection's sort order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collection#products-2021-01"
      parameters:
        - in: "path"
          name: "collection_id"
          required: true
          schema:
            type: "string"
          description: "collection_id"
        - in: "query"
          name: "limit"
          description: "The number of products to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
      tags:
        - "products"
        - "collection"
        - "products/collection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_collections_param_collection_id_products"
  /admin/api/unstable/collections/{collection_id}.json:
    get:
      summary: "Retrieves a single collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collection#show-unstable"
      parameters:
        - in: "path"
          name: "collection_id"
          required: true
          schema:
            type: "string"
          description: "collection_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "collection"
        - "products/collection"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_collections_param_collection_id"
  /admin/api/unstable/collections/{collection_id}/products.json:
    get:
      summary: "Retrieve a list of products belonging to a collection. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints.. The products returned are sorted by the collection's sort order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/collection#products-unstable"
      parameters:
        - in: "path"
          name: "collection_id"
          required: true
          schema:
            type: "string"
          description: "collection_id"
        - in: "query"
          name: "limit"
          description: "The number of products to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
      tags:
        - "products"
        - "collection"
        - "products/collection"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_collections_param_collection_id_products"
  /admin/api/2020-01/custom_collections.json:
    get:
      summary: "Retrieves a list of custom collections. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#index-2020-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "ids"
          description: "Show only collections specified by a comma-separated list of IDs."
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "title"
          description: "Show custom collections with a given title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Show custom collections that include a given product."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Filter by custom collection handle."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show custom collections last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show custom collections last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show custom collections published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show custom collections published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Show custom collectsion with a given published status.\n                  (default: any)\n                    \n                        published: Show only published custom collections.\n                        unpublished: Show only unpublished custom collections.\n                        any: Show custom collections of any published status."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_custom_collections"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  custom_collection:
                    title: "Macbooks"
                summary: "Create a custom collection"
              example2:
                value:
                  custom_collection:
                    title: "Macbooks"
                    published: false
                summary: "Create an unpublished custom collection"
              example3:
                value:
                  custom_collection:
                    title: "Macbooks"
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                      alt: "Rails Logo"
                summary: "Create a custom collection with a base64-encoded image"
              example4:
                value:
                  custom_collection:
                    title: "Macbooks"
                    image:
                      src: "http://example.com/rails_logo.gif"
                      alt: "Rails Logo"
                summary: "Create a custom collection with an image, which will be uploaded to Shopify"
              example5:
                value:
                  custom_collection:
                    body: "foobar"
                summary: "Creating a custom collection without a title fails and returns an error"
              example6:
                value:
                  custom_collection:
                    title: "IPods"
                    collects:
                      - product_id: 921728736
                summary: "Create a collection that contains a product by including a collect"
              example7:
                value:
                  custom_collection:
                    title: "Macbooks"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create a custom collection with a metafield"
      summary: "Creates a custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#create-2020-01"
      parameters: []
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_custom_collections"
  /admin/api/2020-01/custom_collections/count.json:
    get:
      summary: "Retrieves a count of custom collections"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#count-2020-01"
      parameters:
        - in: "query"
          name: "title"
          description: "Count custom collections with given title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Count custom collections that include a given product."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count custom collections last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count custom collections last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Count custom collections published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Count custom collections published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Count custom collections with a given published status.\n                  (default: any)\n                    \n                        published: Count only published custom collections.\n                        unpublished: Count only unpublished custom collections.\n                        any: Count custom collections of any published status."
          schema: {}
          required: false
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_custom_collections_count"
  /admin/api/2020-01/custom_collections/{custom_collection_id}.json:
    get:
      summary: "Retrieves a single custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#show-2020-01"
      parameters:
        - in: "path"
          name: "custom_collection_id"
          required: true
          schema:
            type: "string"
          description: "custom_collection_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_custom_collections_param_custom_collection_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  custom_collection:
                    id: 841564295
                    body_html: "<p>5000 songs in your pocket</p>"
                summary: "Update the description of a custom collection"
              example2:
                value:
                  custom_collection:
                    id: 841564295
                    collects:
                      - product_id: 921728736
                        position: 1
                      - id: 455204334
                        position: 2
                summary: "Add a collect to an existing collection by providing a product ID, and update an existing collect by its own ID to change its sort position"
              example3:
                value:
                  custom_collection:
                    id: 841564295
                    published: true
                summary: "Publish a hidden collection"
              example4:
                value:
                  custom_collection:
                    id: 841564295
                    published: false
                summary: "Hide a published collection"
              example5:
                value:
                  custom_collection:
                    id: 841564295
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add a metafield to an existing collection"
              example6:
                value:
                  custom_collection:
                    id: 841564295
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                      alt: "Rails logo"
                summary: "Update a collection with a new collection image"
              example7:
                value:
                  custom_collection:
                    id: 841564295
                    image:
                      alt: "Rails logo"
                summary: "Update a collection with new alt text for its image"
              example8:
                value:
                  custom_collection:
                    id: 841564295
                    image: ""
                    handle: "ipods"
                    title: "IPods"
                    updated_at: "2020-11-04T19:40:42-05:00"
                    body_html: "<p>The best selling ipod ever</p>"
                    published_at: "2008-02-01T19:00:00-05:00"
                    sort_order: "manual"
                    template_suffix: null
                    published_scope: "web"
                    admin_graphql_api_id: "gid://shopify/Collection/841564295"
                summary: "Update a collection to remove its image"
      summary: "Updates an existing custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#update-2020-01"
      parameters:
        - in: "path"
          name: "custom_collection_id"
          required: true
          schema:
            type: "string"
          description: "custom_collection_id"
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_custom_collections_param_custom_collection_id"
    delete:
      summary: "Deletes a custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#destroy-2020-01"
      parameters:
        - in: "path"
          name: "custom_collection_id"
          required: true
          schema:
            type: "string"
          description: "custom_collection_id"
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_custom_collections_param_custom_collection_id"
  /admin/api/2020-04/custom_collections.json:
    get:
      summary: "Retrieves a list of custom collections. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#index-2020-04"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "ids"
          description: "Show only collections specified by a comma-separated list of IDs."
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "title"
          description: "Show custom collections with a given title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Show custom collections that include a given product."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Filter by custom collection handle."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show custom collections last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show custom collections last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show custom collections published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show custom collections published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Show custom collectsion with a given published status.\n                  (default: any)\n                    \n                        published: Show only published custom collections.\n                        unpublished: Show only unpublished custom collections.\n                        any: Show custom collections of any published status."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_custom_collections"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  custom_collection:
                    title: "Macbooks"
                summary: "Create a custom collection"
              example2:
                value:
                  custom_collection:
                    title: "Macbooks"
                    published: false
                summary: "Create an unpublished custom collection"
              example3:
                value:
                  custom_collection:
                    title: "Macbooks"
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                      alt: "Rails Logo"
                summary: "Create a custom collection with a base64-encoded image"
              example4:
                value:
                  custom_collection:
                    title: "Macbooks"
                    image:
                      src: "http://example.com/rails_logo.gif"
                      alt: "Rails Logo"
                summary: "Create a custom collection with an image, which will be uploaded to Shopify"
              example5:
                value:
                  custom_collection:
                    body: "foobar"
                summary: "Creating a custom collection without a title fails and returns an error"
              example6:
                value:
                  custom_collection:
                    title: "IPods"
                    collects:
                      - product_id: 921728736
                summary: "Create a collection that contains a product by including a collect"
              example7:
                value:
                  custom_collection:
                    title: "Macbooks"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create a custom collection with a metafield"
      summary: "Creates a custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#create-2020-04"
      parameters: []
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_custom_collections"
  /admin/api/2020-04/custom_collections/count.json:
    get:
      summary: "Retrieves a count of custom collections"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#count-2020-04"
      parameters:
        - in: "query"
          name: "title"
          description: "Count custom collections with given title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Count custom collections that include a given product."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count custom collections last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count custom collections last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Count custom collections published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Count custom collections published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Count custom collections with a given published status.\n                  (default: any)\n                    \n                        published: Count only published custom collections.\n                        unpublished: Count only unpublished custom collections.\n                        any: Count custom collections of any published status."
          schema: {}
          required: false
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_custom_collections_count"
  /admin/api/2020-04/custom_collections/{custom_collection_id}.json:
    get:
      summary: "Retrieves a single custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#show-2020-04"
      parameters:
        - in: "path"
          name: "custom_collection_id"
          required: true
          schema:
            type: "string"
          description: "custom_collection_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_custom_collections_param_custom_collection_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  custom_collection:
                    id: 841564295
                    body_html: "<p>5000 songs in your pocket</p>"
                summary: "Update the description of a custom collection"
              example2:
                value:
                  custom_collection:
                    id: 841564295
                    collects:
                      - product_id: 921728736
                        position: 1
                      - id: 455204334
                        position: 2
                summary: "Add a collect to an existing collection by providing a product ID, and update an existing collect by its own ID to change its sort position"
              example3:
                value:
                  custom_collection:
                    id: 841564295
                    published: true
                summary: "Publish a hidden collection"
              example4:
                value:
                  custom_collection:
                    id: 841564295
                    published: false
                summary: "Hide a published collection"
              example5:
                value:
                  custom_collection:
                    id: 841564295
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add a metafield to an existing collection"
              example6:
                value:
                  custom_collection:
                    id: 841564295
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                      alt: "Rails logo"
                summary: "Update a collection with a new collection image"
              example7:
                value:
                  custom_collection:
                    id: 841564295
                    image:
                      alt: "Rails logo"
                summary: "Update a collection with new alt text for its image"
              example8:
                value:
                  custom_collection:
                    id: 841564295
                    image: ""
                    handle: "ipods"
                    title: "IPods"
                    updated_at: "2020-11-04T19:40:42-05:00"
                    body_html: "<p>The best selling ipod ever</p>"
                    published_at: "2008-02-01T19:00:00-05:00"
                    sort_order: "manual"
                    template_suffix: null
                    published_scope: "web"
                    admin_graphql_api_id: "gid://shopify/Collection/841564295"
                summary: "Update a collection to remove its image"
      summary: "Updates an existing custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#update-2020-04"
      parameters:
        - in: "path"
          name: "custom_collection_id"
          required: true
          schema:
            type: "string"
          description: "custom_collection_id"
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_custom_collections_param_custom_collection_id"
    delete:
      summary: "Deletes a custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#destroy-2020-04"
      parameters:
        - in: "path"
          name: "custom_collection_id"
          required: true
          schema:
            type: "string"
          description: "custom_collection_id"
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_custom_collections_param_custom_collection_id"
  /admin/api/2020-07/custom_collections.json:
    get:
      summary: "Retrieves a list of custom collections. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#index-2020-07"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "ids"
          description: "Show only collections specified by a comma-separated list of IDs."
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "title"
          description: "Show custom collections with a given title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Show custom collections that include a given product."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Filter by custom collection handle."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show custom collections last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show custom collections last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show custom collections published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show custom collections published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Show custom collectsion with a given published status.\n                  (default: any)\n                    \n                        published: Show only published custom collections.\n                        unpublished: Show only unpublished custom collections.\n                        any: Show custom collections of any published status."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_custom_collections"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  custom_collection:
                    title: "Macbooks"
                summary: "Create a custom collection"
              example2:
                value:
                  custom_collection:
                    title: "Macbooks"
                    published: false
                summary: "Create an unpublished custom collection"
              example3:
                value:
                  custom_collection:
                    title: "Macbooks"
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                      alt: "Rails Logo"
                summary: "Create a custom collection with a base64-encoded image"
              example4:
                value:
                  custom_collection:
                    title: "Macbooks"
                    image:
                      src: "http://example.com/rails_logo.gif"
                      alt: "Rails Logo"
                summary: "Create a custom collection with an image, which will be uploaded to Shopify"
              example5:
                value:
                  custom_collection:
                    body: "foobar"
                summary: "Creating a custom collection without a title fails and returns an error"
              example6:
                value:
                  custom_collection:
                    title: "IPods"
                    collects:
                      - product_id: 921728736
                summary: "Create a collection that contains a product by including a collect"
              example7:
                value:
                  custom_collection:
                    title: "Macbooks"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create a custom collection with a metafield"
      summary: "Creates a custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#create-2020-07"
      parameters: []
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_custom_collections"
  /admin/api/2020-07/custom_collections/count.json:
    get:
      summary: "Retrieves a count of custom collections"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#count-2020-07"
      parameters:
        - in: "query"
          name: "title"
          description: "Count custom collections with given title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Count custom collections that include a given product."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count custom collections last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count custom collections last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Count custom collections published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Count custom collections published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Count custom collections with a given published status.\n                  (default: any)\n                    \n                        published: Count only published custom collections.\n                        unpublished: Count only unpublished custom collections.\n                        any: Count custom collections of any published status."
          schema: {}
          required: false
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_custom_collections_count"
  /admin/api/2020-07/custom_collections/{custom_collection_id}.json:
    get:
      summary: "Retrieves a single custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#show-2020-07"
      parameters:
        - in: "path"
          name: "custom_collection_id"
          required: true
          schema:
            type: "string"
          description: "custom_collection_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_custom_collections_param_custom_collection_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  custom_collection:
                    id: 841564295
                    body_html: "<p>5000 songs in your pocket</p>"
                summary: "Update the description of a custom collection"
              example2:
                value:
                  custom_collection:
                    id: 841564295
                    collects:
                      - product_id: 921728736
                        position: 1
                      - id: 455204334
                        position: 2
                summary: "Add a collect to an existing collection by providing a product ID, and update an existing collect by its own ID to change its sort position"
              example3:
                value:
                  custom_collection:
                    id: 841564295
                    published: true
                summary: "Publish a hidden collection"
              example4:
                value:
                  custom_collection:
                    id: 841564295
                    published: false
                summary: "Hide a published collection"
              example5:
                value:
                  custom_collection:
                    id: 841564295
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add a metafield to an existing collection"
              example6:
                value:
                  custom_collection:
                    id: 841564295
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                      alt: "Rails logo"
                summary: "Update a collection with a new collection image"
              example7:
                value:
                  custom_collection:
                    id: 841564295
                    image:
                      alt: "Rails logo"
                summary: "Update a collection with new alt text for its image"
              example8:
                value:
                  custom_collection:
                    id: 841564295
                    image: ""
                    handle: "ipods"
                    title: "IPods"
                    updated_at: "2020-11-04T19:40:42-05:00"
                    body_html: "<p>The best selling ipod ever</p>"
                    published_at: "2008-02-01T19:00:00-05:00"
                    sort_order: "manual"
                    template_suffix: null
                    published_scope: "web"
                    admin_graphql_api_id: "gid://shopify/Collection/841564295"
                summary: "Update a collection to remove its image"
      summary: "Updates an existing custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#update-2020-07"
      parameters:
        - in: "path"
          name: "custom_collection_id"
          required: true
          schema:
            type: "string"
          description: "custom_collection_id"
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_custom_collections_param_custom_collection_id"
    delete:
      summary: "Deletes a custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#destroy-2020-07"
      parameters:
        - in: "path"
          name: "custom_collection_id"
          required: true
          schema:
            type: "string"
          description: "custom_collection_id"
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_custom_collections_param_custom_collection_id"
  /admin/api/2020-10/custom_collections.json:
    get:
      summary: "Retrieves a list of custom collections. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#index-2020-10"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "ids"
          description: "Show only collections specified by a comma-separated list of IDs."
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "title"
          description: "Show custom collections with a given title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Show custom collections that include a given product."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Filter by custom collection handle."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show custom collections last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show custom collections last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show custom collections published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show custom collections published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Show custom collectsion with a given published status.\n                  (default: any)\n                    \n                        published: Show only published custom collections.\n                        unpublished: Show only unpublished custom collections.\n                        any: Show custom collections of any published status."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_custom_collections"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  custom_collection:
                    title: "Macbooks"
                summary: "Create a custom collection"
              example2:
                value:
                  custom_collection:
                    title: "Macbooks"
                    published: false
                summary: "Create an unpublished custom collection"
              example3:
                value:
                  custom_collection:
                    title: "Macbooks"
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                      alt: "Rails Logo"
                summary: "Create a custom collection with a base64-encoded image"
              example4:
                value:
                  custom_collection:
                    title: "Macbooks"
                    image:
                      src: "http://example.com/rails_logo.gif"
                      alt: "Rails Logo"
                summary: "Create a custom collection with an image, which will be uploaded to Shopify"
              example5:
                value:
                  custom_collection:
                    body: "foobar"
                summary: "Creating a custom collection without a title fails and returns an error"
              example6:
                value:
                  custom_collection:
                    title: "IPods"
                    collects:
                      - product_id: 921728736
                summary: "Create a collection that contains a product by including a collect"
              example7:
                value:
                  custom_collection:
                    title: "Macbooks"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create a custom collection with a metafield"
      summary: "Creates a custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#create-2020-10"
      parameters: []
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_custom_collections"
  /admin/api/2020-10/custom_collections/count.json:
    get:
      summary: "Retrieves a count of custom collections"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#count-2020-10"
      parameters:
        - in: "query"
          name: "title"
          description: "Count custom collections with given title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Count custom collections that include a given product."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count custom collections last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count custom collections last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Count custom collections published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Count custom collections published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Count custom collections with a given published status.\n                  (default: any)\n                    \n                        published: Count only published custom collections.\n                        unpublished: Count only unpublished custom collections.\n                        any: Count custom collections of any published status."
          schema: {}
          required: false
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_custom_collections_count"
  /admin/api/2020-10/custom_collections/{custom_collection_id}.json:
    get:
      summary: "Retrieves a single custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#show-2020-10"
      parameters:
        - in: "path"
          name: "custom_collection_id"
          required: true
          schema:
            type: "string"
          description: "custom_collection_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_custom_collections_param_custom_collection_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  custom_collection:
                    id: 841564295
                    body_html: "<p>5000 songs in your pocket</p>"
                summary: "Update the description of a custom collection"
              example2:
                value:
                  custom_collection:
                    id: 841564295
                    collects:
                      - product_id: 921728736
                        position: 1
                      - id: 455204334
                        position: 2
                summary: "Add a collect to an existing collection by providing a product ID, and update an existing collect by its own ID to change its sort position"
              example3:
                value:
                  custom_collection:
                    id: 841564295
                    published: true
                summary: "Publish a hidden collection"
              example4:
                value:
                  custom_collection:
                    id: 841564295
                    published: false
                summary: "Hide a published collection"
              example5:
                value:
                  custom_collection:
                    id: 841564295
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add a metafield to an existing collection"
              example6:
                value:
                  custom_collection:
                    id: 841564295
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                      alt: "Rails logo"
                summary: "Update a collection with a new collection image"
              example7:
                value:
                  custom_collection:
                    id: 841564295
                    image:
                      alt: "Rails logo"
                summary: "Update a collection with new alt text for its image"
              example8:
                value:
                  custom_collection:
                    id: 841564295
                    image: ""
                    handle: "ipods"
                    title: "IPods"
                    updated_at: "2020-11-04T19:40:42-05:00"
                    body_html: "<p>The best selling ipod ever</p>"
                    published_at: "2008-02-01T19:00:00-05:00"
                    sort_order: "manual"
                    template_suffix: null
                    published_scope: "web"
                    admin_graphql_api_id: "gid://shopify/Collection/841564295"
                summary: "Update a collection to remove its image"
      summary: "Updates an existing custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#update-2020-10"
      parameters:
        - in: "path"
          name: "custom_collection_id"
          required: true
          schema:
            type: "string"
          description: "custom_collection_id"
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_custom_collections_param_custom_collection_id"
    delete:
      summary: "Deletes a custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#destroy-2020-10"
      parameters:
        - in: "path"
          name: "custom_collection_id"
          required: true
          schema:
            type: "string"
          description: "custom_collection_id"
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_custom_collections_param_custom_collection_id"
  /admin/api/2021-01/custom_collections.json:
    get:
      summary: "Retrieves a list of custom collections. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#index-2021-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "ids"
          description: "Show only collections specified by a comma-separated list of IDs."
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "title"
          description: "Show custom collections with a given title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Show custom collections that include a given product."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Filter by custom collection handle."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show custom collections last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show custom collections last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show custom collections published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show custom collections published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Show custom collectsion with a given published status.\n                  (default: any)\n                    \n                        published: Show only published custom collections.\n                        unpublished: Show only unpublished custom collections.\n                        any: Show custom collections of any published status."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_custom_collections"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  custom_collection:
                    title: "Macbooks"
                summary: "Create a custom collection"
              example2:
                value:
                  custom_collection:
                    title: "Macbooks"
                    published: false
                summary: "Create an unpublished custom collection"
              example3:
                value:
                  custom_collection:
                    title: "Macbooks"
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                      alt: "Rails Logo"
                summary: "Create a custom collection with a base64-encoded image"
              example4:
                value:
                  custom_collection:
                    title: "Macbooks"
                    image:
                      src: "http://example.com/rails_logo.gif"
                      alt: "Rails Logo"
                summary: "Create a custom collection with an image, which will be uploaded to Shopify"
              example5:
                value:
                  custom_collection:
                    body: "foobar"
                summary: "Creating a custom collection without a title fails and returns an error"
              example6:
                value:
                  custom_collection:
                    title: "IPods"
                    collects:
                      - product_id: 921728736
                summary: "Create a collection that contains a product by including a collect"
              example7:
                value:
                  custom_collection:
                    title: "Macbooks"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create a custom collection with a metafield"
      summary: "Creates a custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#create-2021-01"
      parameters: []
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_custom_collections"
  /admin/api/2021-01/custom_collections/count.json:
    get:
      summary: "Retrieves a count of custom collections"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#count-2021-01"
      parameters:
        - in: "query"
          name: "title"
          description: "Count custom collections with given title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Count custom collections that include a given product."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count custom collections last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count custom collections last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Count custom collections published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Count custom collections published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Count custom collections with a given published status.\n                  (default: any)\n                    \n                        published: Count only published custom collections.\n                        unpublished: Count only unpublished custom collections.\n                        any: Count custom collections of any published status."
          schema: {}
          required: false
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_custom_collections_count"
  /admin/api/2021-01/custom_collections/{custom_collection_id}.json:
    get:
      summary: "Retrieves a single custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#show-2021-01"
      parameters:
        - in: "path"
          name: "custom_collection_id"
          required: true
          schema:
            type: "string"
          description: "custom_collection_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_custom_collections_param_custom_collection_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  custom_collection:
                    id: 841564295
                    body_html: "<p>5000 songs in your pocket</p>"
                summary: "Update the description of a custom collection"
              example2:
                value:
                  custom_collection:
                    id: 841564295
                    collects:
                      - product_id: 921728736
                        position: 1
                      - id: 455204334
                        position: 2
                summary: "Add a collect to an existing collection by providing a product ID, and update an existing collect by its own ID to change its sort position"
              example3:
                value:
                  custom_collection:
                    id: 841564295
                    published: true
                summary: "Publish a hidden collection"
              example4:
                value:
                  custom_collection:
                    id: 841564295
                    published: false
                summary: "Hide a published collection"
              example5:
                value:
                  custom_collection:
                    id: 841564295
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add a metafield to an existing collection"
              example6:
                value:
                  custom_collection:
                    id: 841564295
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                      alt: "Rails logo"
                summary: "Update a collection with a new collection image"
              example7:
                value:
                  custom_collection:
                    id: 841564295
                    image:
                      alt: "Rails logo"
                summary: "Update a collection with new alt text for its image"
              example8:
                value:
                  custom_collection:
                    id: 841564295
                    image: ""
                    handle: "ipods"
                    title: "IPods"
                    updated_at: "2020-11-04T19:40:42-05:00"
                    body_html: "<p>The best selling ipod ever</p>"
                    published_at: "2008-02-01T19:00:00-05:00"
                    sort_order: "manual"
                    template_suffix: null
                    published_scope: "web"
                    admin_graphql_api_id: "gid://shopify/Collection/841564295"
                summary: "Update a collection to remove its image"
      summary: "Updates an existing custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#update-2021-01"
      parameters:
        - in: "path"
          name: "custom_collection_id"
          required: true
          schema:
            type: "string"
          description: "custom_collection_id"
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_custom_collections_param_custom_collection_id"
    delete:
      summary: "Deletes a custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#destroy-2021-01"
      parameters:
        - in: "path"
          name: "custom_collection_id"
          required: true
          schema:
            type: "string"
          description: "custom_collection_id"
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_custom_collections_param_custom_collection_id"
  /admin/api/unstable/custom_collections.json:
    get:
      summary: "Retrieves a list of custom collections. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#index-unstable"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "ids"
          description: "Show only collections specified by a comma-separated list of IDs."
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "title"
          description: "Show custom collections with a given title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Show custom collections that include a given product."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Filter by custom collection handle."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show custom collections last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show custom collections last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show custom collections published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show custom collections published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Show custom collectsion with a given published status.\n                  (default: any)\n                    \n                        published: Show only published custom collections.\n                        unpublished: Show only unpublished custom collections.\n                        any: Show custom collections of any published status."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_custom_collections"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  custom_collection:
                    title: "Macbooks"
                summary: "Create a custom collection"
              example2:
                value:
                  custom_collection:
                    title: "Macbooks"
                    published: false
                summary: "Create an unpublished custom collection"
              example3:
                value:
                  custom_collection:
                    title: "Macbooks"
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                      alt: "Rails Logo"
                summary: "Create a custom collection with a base64-encoded image"
              example4:
                value:
                  custom_collection:
                    title: "Macbooks"
                    image:
                      src: "http://example.com/rails_logo.gif"
                      alt: "Rails Logo"
                summary: "Create a custom collection with an image, which will be uploaded to Shopify"
              example5:
                value:
                  custom_collection:
                    body: "foobar"
                summary: "Creating a custom collection without a title fails and returns an error"
              example6:
                value:
                  custom_collection:
                    title: "IPods"
                    collects:
                      - product_id: 921728736
                summary: "Create a collection that contains a product by including a collect"
              example7:
                value:
                  custom_collection:
                    title: "Macbooks"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create a custom collection with a metafield"
      summary: "Creates a custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#create-unstable"
      parameters: []
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_custom_collections"
  /admin/api/unstable/custom_collections/count.json:
    get:
      summary: "Retrieves a count of custom collections"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#count-unstable"
      parameters:
        - in: "query"
          name: "title"
          description: "Count custom collections with given title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Count custom collections that include a given product."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count custom collections last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count custom collections last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Count custom collections published after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Count custom collections published before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Count custom collections with a given published status.\n                  (default: any)\n                    \n                        published: Count only published custom collections.\n                        unpublished: Count only unpublished custom collections.\n                        any: Count custom collections of any published status."
          schema: {}
          required: false
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_custom_collections_count"
  /admin/api/unstable/custom_collections/{custom_collection_id}.json:
    get:
      summary: "Retrieves a single custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#show-unstable"
      parameters:
        - in: "path"
          name: "custom_collection_id"
          required: true
          schema:
            type: "string"
          description: "custom_collection_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_custom_collections_param_custom_collection_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  custom_collection:
                    id: 841564295
                    body_html: "<p>5000 songs in your pocket</p>"
                summary: "Update the description of a custom collection"
              example2:
                value:
                  custom_collection:
                    id: 841564295
                    collects:
                      - product_id: 921728736
                        position: 1
                      - id: 455204334
                        position: 2
                summary: "Add a collect to an existing collection by providing a product ID, and update an existing collect by its own ID to change its sort position"
              example3:
                value:
                  custom_collection:
                    id: 841564295
                    published: true
                summary: "Publish a hidden collection"
              example4:
                value:
                  custom_collection:
                    id: 841564295
                    published: false
                summary: "Hide a published collection"
              example5:
                value:
                  custom_collection:
                    id: 841564295
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add a metafield to an existing collection"
              example6:
                value:
                  custom_collection:
                    id: 841564295
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                      alt: "Rails logo"
                summary: "Update a collection with a new collection image"
              example7:
                value:
                  custom_collection:
                    id: 841564295
                    image:
                      alt: "Rails logo"
                summary: "Update a collection with new alt text for its image"
              example8:
                value:
                  custom_collection:
                    id: 841564295
                    image: ""
                    handle: "ipods"
                    title: "IPods"
                    updated_at: "2020-11-04T19:40:42-05:00"
                    body_html: "<p>The best selling ipod ever</p>"
                    published_at: "2008-02-01T19:00:00-05:00"
                    sort_order: "manual"
                    template_suffix: null
                    published_scope: "web"
                    admin_graphql_api_id: "gid://shopify/Collection/841564295"
                summary: "Update a collection to remove its image"
      summary: "Updates an existing custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#update-unstable"
      parameters:
        - in: "path"
          name: "custom_collection_id"
          required: true
          schema:
            type: "string"
          description: "custom_collection_id"
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_custom_collections_param_custom_collection_id"
    delete:
      summary: "Deletes a custom collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/customcollection#destroy-unstable"
      parameters:
        - in: "path"
          name: "custom_collection_id"
          required: true
          schema:
            type: "string"
          description: "custom_collection_id"
      tags:
        - "products"
        - "customcollection"
        - "products/customcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_custom_collections_param_custom_collection_id"
  /admin/api/2020-01/products.json:
    get:
      summary: "Retrieves a list of products. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#index-2020-01"
      parameters:
        - in: "query"
          name: "ids"
          description: "Return only products specified by a comma-separated list of product IDs."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "Return up to this many results per page.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "title"
          description: "Filter results by product title."
          schema: {}
          required: false
        - in: "query"
          name: "vendor"
          description: "Filter results by product vendor."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Filter results by product handle."
          schema: {}
          required: false
        - in: "query"
          name: "product_type"
          description: "Filter results by product type."
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Return products by their status.\n                  (default: active)\n                    \n                        active: Show only active products.\n                        archived: Show only archived products.\n                        draft: Show only draft products."
          schema: {}
          required: false
        - in: "query"
          name: "collection_id"
          description: "Filter results by product collection ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show products created after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show products created before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show products last updated after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show products last updated before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show products published after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show products published before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Return products by their published status\n                  (default: any)\n                    \n                        published: Show only published products.\n                        unpublished: Show only unpublished products.\n                        any: Show all products."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
        - in: "query"
          name: "presentment_currencies"
          description: "Return presentment prices in only certain currencies, specified by a comma-separated list of ISO 4217 currency codes."
          schema: {}
          required: false
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_products"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                summary: "Create a new product with the default product variant"
              example2:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    published: false
                summary: "Create a new unpublished product"
              example3:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    shop:
                      id: 690933842
                      name: "Apple Computers"
                      email: "steve@apple.com"
                      domain: "apple.myshopify.com"
                      province: "California"
                      country: "US"
                      address1: "1 Infinite Loop"
                      zip: "95014"
                      city: "Cupertino"
                      source: null
                      phone: "1231231234"
                      latitude: 45.45
                      longitude: -75.43
                      primary_locale: "en"
                      address2: "Suite 100"
                      created_at: "2007-12-31T19:00:00-05:00"
                      updated_at: "2020-11-04T16:46:58-05:00"
                      country_code: "US"
                      country_name: "United States"
                      currency: "USD"
                      customer_email: "steve@apple.com"
                      timezone: "(GMT-05:00) Eastern Time (US & Canada)"
                      iana_timezone: "America/New_York"
                      shop_owner: "Steve Jobs"
                      money_format: "$"
                      money_with_currency_format: "$ USD"
                      weight_unit: "lb"
                      province_code: "CA"
                      taxes_included: null
                      tax_shipping: null
                      county_taxes: true
                      plan_display_name: "Shopify Plus"
                      plan_name: "enterprise"
                      has_discounts: true
                      has_gift_cards: true
                      myshopify_domain: "apple.myshopify.com"
                      google_apps_domain: null
                      google_apps_login_enabled: null
                      money_in_emails_format: "$"
                      money_with_currency_in_emails_format: "$ USD"
                      eligible_for_payments: true
                      requires_extra_payments_agreement: false
                      password_enabled: null
                      has_storefront: true
                      eligible_for_card_reader_giveaway: false
                      finances: true
                      primary_location_id: 905684977
                      cookie_consent_level: "implicit"
                      visitor_tracking_consent_preference: "allow_all"
                      force_ssl: true
                      checkout_api_supported: true
                      multi_location_enabled: false
                      setup_required: false
                      pre_launch_enabled: false
                      enabled_presentment_currencies:
                        - "USD"
                    status: "draft"
                summary: "Create a new draft product"
              example4:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    variants:
                      - option1: "First"
                        price: "10.00"
                        sku: "123"
                      - option1: "Second"
                        price: "20.00"
                        sku: "123"
                summary: "Create a new product with multiple product variants"
              example5:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    variants:
                      - option1: "Blue"
                        option2: "155"
                      - option1: "Black"
                        option2: "159"
                    options:
                      - name: "Color"
                        values:
                          - "Blue"
                          - "Black"
                      - name: "Size"
                        values:
                          - "155"
                          - "159"
                summary: "Create a new product with multiple product variants and multiple options"
              example6:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    images:
                      - attachment: "R0lGODlhAQABAIAAAAAAAAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==\n"
                summary: "Create a new product with the default variant and base64 encoded image"
              example7:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    images:
                      - src: "http://example.com/rails_logo.gif"
                summary: "Create a new product with the default variant and a product image that will be downloaded by Shopify"
              example8:
                value:
                  product:
                    body_html: "A mystery!"
                summary: "Creating a product without a title will return an error"
              example9:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create a product with a metafield"
      summary: "Creates a new product.\n          If you want to set the product's SEO information, then you can use the following properties:\n          \n            metafields_global_title_tag: The name of the product used for SEO purposes. Generally added to the <meta name='title'> tag.\n            metafields_global_description_tag: A description of the product used for SEO purposes. Generally added to the <meta name='description'> tag."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#create-2020-01"
      parameters: []
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_products"
  /admin/api/2020-01/products/count.json:
    get:
      summary: "Retrieves a count of products."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#count-2020-01"
      parameters:
        - in: "query"
          name: "vendor"
          description: "Filter results by product vendor."
          schema: {}
          required: false
        - in: "query"
          name: "product_type"
          description: "Filter results by product type."
          schema: {}
          required: false
        - in: "query"
          name: "collection_id"
          description: "Filter results by collection ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show products created after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show products created before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show products last updated after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show products last updated before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show products published after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show products published before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Return products by their published status\n                  (default: any)\n                    \n                        published: Show only published products.\n                        unpublished: Show only unpublished products.\n                        any: Show all products."
          schema: {}
          required: false
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_products_count"
  /admin/api/2020-01/products/{product_id}.json:
    get:
      summary: "Retrieves a single product."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#show-2020-01"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_products_param_product_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  product:
                    id: 632910392
                    title: "New product title"
                summary: "Update a product's title"
              example2:
                value:
                  product:
                    id: 632910392
                    status: "draft"
                summary: "Update a product's status"
              example3:
                value:
                  product:
                    id: 632910392
                    tags: "Barnes & Noble, John's Fav"
                summary: "Update a product's tags"
              example4:
                value:
                  product:
                    id: 632910392
                    images: []
                summary: "Update a product by clearing product images"
              example5:
                value:
                  product:
                    id: 632910392
                    images:
                      - id: 850703190
                      - id: 562641783
                      - src: "http://example.com/rails_logo.gif"
                summary: "Update a product by adding a new product image"
              example6:
                value:
                  product:
                    id: 632910392
                    images:
                      - id: 850703190
                        position: 2
                      - id: 562641783
                        position: 1
                summary: "Update a product by reordering product image"
              example7:
                value:
                  product:
                    id: 632910392
                    variants:
                      - id: 457924702
                      - id: 39072856
                      - id: 49148385
                      - id: 808950810
                summary: "Update a product by reordering the product variants"
              example8:
                value:
                  product:
                    id: 632910392
                    title: "Updated Product Title"
                    variants:
                      - id: 808950810
                        price: "2000.00"
                        sku: "Updating the Product SKU"
                      - id: 49148385
                      - id: 39072856
                      - id: 457924702
                summary: "Update a product and one of its variants"
              example9:
                value:
                  product:
                    id: 632910392
                    metafields_global_title_tag: "Brand new title"
                    metafields_global_description_tag: "Brand new description"
                summary: "Update a product's SEO title and description"
              example10:
                value:
                  product:
                    id: 632910392
                    published: true
                summary: "Show a hidden product by changing the published attribute to true"
              example11:
                value:
                  product:
                    id: 632910392
                    published: false
                summary: "Hide a published product by changing the published attribute to false"
              example12:
                value:
                  product:
                    id: 632910392
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add a metafield to an existing product"
      summary: "Updates a product and its variants and images.\n          If you want to update the product's SEO information, then you can use the following properties:\n          \n            metafields_global_title_tag: The name of the product used for SEO purposes. Generally added to the <meta name='title'> tag.\n            metafields_global_description_tag: A description of the product used for SEO purposes. Generally added to the <meta name='description'> tag."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#update-2020-01"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_products_param_product_id"
    delete:
      summary: "Deletes a product."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#destroy-2020-01"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_products_param_product_id"
  /admin/api/2020-04/products.json:
    get:
      summary: "Retrieves a list of products. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#index-2020-04"
      parameters:
        - in: "query"
          name: "ids"
          description: "Return only products specified by a comma-separated list of product IDs."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "Return up to this many results per page.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "title"
          description: "Filter results by product title."
          schema: {}
          required: false
        - in: "query"
          name: "vendor"
          description: "Filter results by product vendor."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Filter results by product handle."
          schema: {}
          required: false
        - in: "query"
          name: "product_type"
          description: "Filter results by product type."
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Return products by their status.\n                  (default: active)\n                    \n                        active: Show only active products.\n                        archived: Show only archived products.\n                        draft: Show only draft products."
          schema: {}
          required: false
        - in: "query"
          name: "collection_id"
          description: "Filter results by product collection ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show products created after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show products created before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show products last updated after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show products last updated before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show products published after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show products published before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Return products by their published status\n                  (default: any)\n                    \n                        published: Show only published products.\n                        unpublished: Show only unpublished products.\n                        any: Show all products."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
        - in: "query"
          name: "presentment_currencies"
          description: "Return presentment prices in only certain currencies, specified by a comma-separated list of ISO 4217 currency codes."
          schema: {}
          required: false
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_products"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                summary: "Create a new product with the default product variant"
              example2:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    published: false
                summary: "Create a new unpublished product"
              example3:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    shop:
                      id: 690933842
                      name: "Apple Computers"
                      email: "steve@apple.com"
                      domain: "apple.myshopify.com"
                      province: "California"
                      country: "US"
                      address1: "1 Infinite Loop"
                      zip: "95014"
                      city: "Cupertino"
                      source: null
                      phone: "1231231234"
                      latitude: 45.45
                      longitude: -75.43
                      primary_locale: "en"
                      address2: "Suite 100"
                      created_at: "2007-12-31T19:00:00-05:00"
                      updated_at: "2020-11-04T16:46:58-05:00"
                      country_code: "US"
                      country_name: "United States"
                      currency: "USD"
                      customer_email: "steve@apple.com"
                      timezone: "(GMT-05:00) Eastern Time (US & Canada)"
                      iana_timezone: "America/New_York"
                      shop_owner: "Steve Jobs"
                      money_format: "$"
                      money_with_currency_format: "$ USD"
                      weight_unit: "lb"
                      province_code: "CA"
                      taxes_included: null
                      tax_shipping: null
                      county_taxes: true
                      plan_display_name: "Shopify Plus"
                      plan_name: "enterprise"
                      has_discounts: true
                      has_gift_cards: true
                      myshopify_domain: "apple.myshopify.com"
                      google_apps_domain: null
                      google_apps_login_enabled: null
                      money_in_emails_format: "$"
                      money_with_currency_in_emails_format: "$ USD"
                      eligible_for_payments: true
                      requires_extra_payments_agreement: false
                      password_enabled: null
                      has_storefront: true
                      eligible_for_card_reader_giveaway: false
                      finances: true
                      primary_location_id: 905684977
                      cookie_consent_level: "implicit"
                      visitor_tracking_consent_preference: "allow_all"
                      force_ssl: true
                      checkout_api_supported: true
                      multi_location_enabled: false
                      setup_required: false
                      pre_launch_enabled: false
                      enabled_presentment_currencies:
                        - "USD"
                    status: "draft"
                summary: "Create a new draft product"
              example4:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    variants:
                      - option1: "First"
                        price: "10.00"
                        sku: "123"
                      - option1: "Second"
                        price: "20.00"
                        sku: "123"
                summary: "Create a new product with multiple product variants"
              example5:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    variants:
                      - option1: "Blue"
                        option2: "155"
                      - option1: "Black"
                        option2: "159"
                    options:
                      - name: "Color"
                        values:
                          - "Blue"
                          - "Black"
                      - name: "Size"
                        values:
                          - "155"
                          - "159"
                summary: "Create a new product with multiple product variants and multiple options"
              example6:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    images:
                      - attachment: "R0lGODlhAQABAIAAAAAAAAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==\n"
                summary: "Create a new product with the default variant and base64 encoded image"
              example7:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    images:
                      - src: "http://example.com/rails_logo.gif"
                summary: "Create a new product with the default variant and a product image that will be downloaded by Shopify"
              example8:
                value:
                  product:
                    body_html: "A mystery!"
                summary: "Creating a product without a title will return an error"
              example9:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create a product with a metafield"
      summary: "Creates a new product.\n          If you want to set the product's SEO information, then you can use the following properties:\n          \n            metafields_global_title_tag: The name of the product used for SEO purposes. Generally added to the <meta name='title'> tag.\n            metafields_global_description_tag: A description of the product used for SEO purposes. Generally added to the <meta name='description'> tag."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#create-2020-04"
      parameters: []
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_products"
  /admin/api/2020-04/products/count.json:
    get:
      summary: "Retrieves a count of products."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#count-2020-04"
      parameters:
        - in: "query"
          name: "vendor"
          description: "Filter results by product vendor."
          schema: {}
          required: false
        - in: "query"
          name: "product_type"
          description: "Filter results by product type."
          schema: {}
          required: false
        - in: "query"
          name: "collection_id"
          description: "Filter results by collection ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show products created after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show products created before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show products last updated after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show products last updated before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show products published after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show products published before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Return products by their published status\n                  (default: any)\n                    \n                        published: Show only published products.\n                        unpublished: Show only unpublished products.\n                        any: Show all products."
          schema: {}
          required: false
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_products_count"
  /admin/api/2020-04/products/{product_id}.json:
    get:
      summary: "Retrieves a single product."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#show-2020-04"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_products_param_product_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  product:
                    id: 632910392
                    title: "New product title"
                summary: "Update a product's title"
              example2:
                value:
                  product:
                    id: 632910392
                    status: "draft"
                summary: "Update a product's status"
              example3:
                value:
                  product:
                    id: 632910392
                    tags: "Barnes & Noble, John's Fav"
                summary: "Update a product's tags"
              example4:
                value:
                  product:
                    id: 632910392
                    images: []
                summary: "Update a product by clearing product images"
              example5:
                value:
                  product:
                    id: 632910392
                    images:
                      - id: 850703190
                      - id: 562641783
                      - src: "http://example.com/rails_logo.gif"
                summary: "Update a product by adding a new product image"
              example6:
                value:
                  product:
                    id: 632910392
                    images:
                      - id: 850703190
                        position: 2
                      - id: 562641783
                        position: 1
                summary: "Update a product by reordering product image"
              example7:
                value:
                  product:
                    id: 632910392
                    variants:
                      - id: 457924702
                      - id: 39072856
                      - id: 49148385
                      - id: 808950810
                summary: "Update a product by reordering the product variants"
              example8:
                value:
                  product:
                    id: 632910392
                    title: "Updated Product Title"
                    variants:
                      - id: 808950810
                        price: "2000.00"
                        sku: "Updating the Product SKU"
                      - id: 49148385
                      - id: 39072856
                      - id: 457924702
                summary: "Update a product and one of its variants"
              example9:
                value:
                  product:
                    id: 632910392
                    metafields_global_title_tag: "Brand new title"
                    metafields_global_description_tag: "Brand new description"
                summary: "Update a product's SEO title and description"
              example10:
                value:
                  product:
                    id: 632910392
                    published: true
                summary: "Show a hidden product by changing the published attribute to true"
              example11:
                value:
                  product:
                    id: 632910392
                    published: false
                summary: "Hide a published product by changing the published attribute to false"
              example12:
                value:
                  product:
                    id: 632910392
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add a metafield to an existing product"
      summary: "Updates a product and its variants and images.\n          If you want to update the product's SEO information, then you can use the following properties:\n          \n            metafields_global_title_tag: The name of the product used for SEO purposes. Generally added to the <meta name='title'> tag.\n            metafields_global_description_tag: A description of the product used for SEO purposes. Generally added to the <meta name='description'> tag."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#update-2020-04"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_products_param_product_id"
    delete:
      summary: "Deletes a product."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#destroy-2020-04"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_products_param_product_id"
  /admin/api/2020-07/products.json:
    get:
      summary: "Retrieves a list of products. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#index-2020-07"
      parameters:
        - in: "query"
          name: "ids"
          description: "Return only products specified by a comma-separated list of product IDs."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "Return up to this many results per page.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "title"
          description: "Filter results by product title."
          schema: {}
          required: false
        - in: "query"
          name: "vendor"
          description: "Filter results by product vendor."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Filter results by product handle."
          schema: {}
          required: false
        - in: "query"
          name: "product_type"
          description: "Filter results by product type."
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Return products by their status.\n                  (default: active)\n                    \n                        active: Show only active products.\n                        archived: Show only archived products.\n                        draft: Show only draft products."
          schema: {}
          required: false
        - in: "query"
          name: "collection_id"
          description: "Filter results by product collection ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show products created after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show products created before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show products last updated after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show products last updated before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show products published after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show products published before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Return products by their published status\n                  (default: any)\n                    \n                        published: Show only published products.\n                        unpublished: Show only unpublished products.\n                        any: Show all products."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
        - in: "query"
          name: "presentment_currencies"
          description: "Return presentment prices in only certain currencies, specified by a comma-separated list of ISO 4217 currency codes."
          schema: {}
          required: false
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_products"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                summary: "Create a new product with the default product variant"
              example2:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    published: false
                summary: "Create a new unpublished product"
              example3:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    shop:
                      id: 690933842
                      name: "Apple Computers"
                      email: "steve@apple.com"
                      domain: "apple.myshopify.com"
                      province: "California"
                      country: "US"
                      address1: "1 Infinite Loop"
                      zip: "95014"
                      city: "Cupertino"
                      source: null
                      phone: "1231231234"
                      latitude: 45.45
                      longitude: -75.43
                      primary_locale: "en"
                      address2: "Suite 100"
                      created_at: "2007-12-31T19:00:00-05:00"
                      updated_at: "2020-11-04T16:46:58-05:00"
                      country_code: "US"
                      country_name: "United States"
                      currency: "USD"
                      customer_email: "steve@apple.com"
                      timezone: "(GMT-05:00) Eastern Time (US & Canada)"
                      iana_timezone: "America/New_York"
                      shop_owner: "Steve Jobs"
                      money_format: "$"
                      money_with_currency_format: "$ USD"
                      weight_unit: "lb"
                      province_code: "CA"
                      taxes_included: null
                      tax_shipping: null
                      county_taxes: true
                      plan_display_name: "Shopify Plus"
                      plan_name: "enterprise"
                      has_discounts: true
                      has_gift_cards: true
                      myshopify_domain: "apple.myshopify.com"
                      google_apps_domain: null
                      google_apps_login_enabled: null
                      money_in_emails_format: "$"
                      money_with_currency_in_emails_format: "$ USD"
                      eligible_for_payments: true
                      requires_extra_payments_agreement: false
                      password_enabled: null
                      has_storefront: true
                      eligible_for_card_reader_giveaway: false
                      finances: true
                      primary_location_id: 905684977
                      cookie_consent_level: "implicit"
                      visitor_tracking_consent_preference: "allow_all"
                      force_ssl: true
                      checkout_api_supported: true
                      multi_location_enabled: false
                      setup_required: false
                      pre_launch_enabled: false
                      enabled_presentment_currencies:
                        - "USD"
                    status: "draft"
                summary: "Create a new draft product"
              example4:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    variants:
                      - option1: "First"
                        price: "10.00"
                        sku: "123"
                      - option1: "Second"
                        price: "20.00"
                        sku: "123"
                summary: "Create a new product with multiple product variants"
              example5:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    variants:
                      - option1: "Blue"
                        option2: "155"
                      - option1: "Black"
                        option2: "159"
                    options:
                      - name: "Color"
                        values:
                          - "Blue"
                          - "Black"
                      - name: "Size"
                        values:
                          - "155"
                          - "159"
                summary: "Create a new product with multiple product variants and multiple options"
              example6:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    images:
                      - attachment: "R0lGODlhAQABAIAAAAAAAAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==\n"
                summary: "Create a new product with the default variant and base64 encoded image"
              example7:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    images:
                      - src: "http://example.com/rails_logo.gif"
                summary: "Create a new product with the default variant and a product image that will be downloaded by Shopify"
              example8:
                value:
                  product:
                    body_html: "A mystery!"
                summary: "Creating a product without a title will return an error"
              example9:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create a product with a metafield"
      summary: "Creates a new product.\n          If you want to set the product's SEO information, then you can use the following properties:\n          \n            metafields_global_title_tag: The name of the product used for SEO purposes. Generally added to the <meta name='title'> tag.\n            metafields_global_description_tag: A description of the product used for SEO purposes. Generally added to the <meta name='description'> tag."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#create-2020-07"
      parameters: []
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_products"
  /admin/api/2020-07/products/count.json:
    get:
      summary: "Retrieves a count of products."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#count-2020-07"
      parameters:
        - in: "query"
          name: "vendor"
          description: "Filter results by product vendor."
          schema: {}
          required: false
        - in: "query"
          name: "product_type"
          description: "Filter results by product type."
          schema: {}
          required: false
        - in: "query"
          name: "collection_id"
          description: "Filter results by collection ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show products created after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show products created before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show products last updated after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show products last updated before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show products published after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show products published before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Return products by their published status\n                  (default: any)\n                    \n                        published: Show only published products.\n                        unpublished: Show only unpublished products.\n                        any: Show all products."
          schema: {}
          required: false
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_products_count"
  /admin/api/2020-07/products/{product_id}.json:
    get:
      summary: "Retrieves a single product."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#show-2020-07"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_products_param_product_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  product:
                    id: 632910392
                    title: "New product title"
                summary: "Update a product's title"
              example2:
                value:
                  product:
                    id: 632910392
                    status: "draft"
                summary: "Update a product's status"
              example3:
                value:
                  product:
                    id: 632910392
                    tags: "Barnes & Noble, John's Fav"
                summary: "Update a product's tags"
              example4:
                value:
                  product:
                    id: 632910392
                    images: []
                summary: "Update a product by clearing product images"
              example5:
                value:
                  product:
                    id: 632910392
                    images:
                      - id: 850703190
                      - id: 562641783
                      - src: "http://example.com/rails_logo.gif"
                summary: "Update a product by adding a new product image"
              example6:
                value:
                  product:
                    id: 632910392
                    images:
                      - id: 850703190
                        position: 2
                      - id: 562641783
                        position: 1
                summary: "Update a product by reordering product image"
              example7:
                value:
                  product:
                    id: 632910392
                    variants:
                      - id: 457924702
                      - id: 39072856
                      - id: 49148385
                      - id: 808950810
                summary: "Update a product by reordering the product variants"
              example8:
                value:
                  product:
                    id: 632910392
                    title: "Updated Product Title"
                    variants:
                      - id: 808950810
                        price: "2000.00"
                        sku: "Updating the Product SKU"
                      - id: 49148385
                      - id: 39072856
                      - id: 457924702
                summary: "Update a product and one of its variants"
              example9:
                value:
                  product:
                    id: 632910392
                    metafields_global_title_tag: "Brand new title"
                    metafields_global_description_tag: "Brand new description"
                summary: "Update a product's SEO title and description"
              example10:
                value:
                  product:
                    id: 632910392
                    published: true
                summary: "Show a hidden product by changing the published attribute to true"
              example11:
                value:
                  product:
                    id: 632910392
                    published: false
                summary: "Hide a published product by changing the published attribute to false"
              example12:
                value:
                  product:
                    id: 632910392
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add a metafield to an existing product"
      summary: "Updates a product and its variants and images.\n          If you want to update the product's SEO information, then you can use the following properties:\n          \n            metafields_global_title_tag: The name of the product used for SEO purposes. Generally added to the <meta name='title'> tag.\n            metafields_global_description_tag: A description of the product used for SEO purposes. Generally added to the <meta name='description'> tag."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#update-2020-07"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_products_param_product_id"
    delete:
      summary: "Deletes a product."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#destroy-2020-07"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_products_param_product_id"
  /admin/api/2020-10/products.json:
    get:
      summary: "Retrieves a list of products. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#index-2020-10"
      parameters:
        - in: "query"
          name: "ids"
          description: "Return only products specified by a comma-separated list of product IDs."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "Return up to this many results per page.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "title"
          description: "Filter results by product title."
          schema: {}
          required: false
        - in: "query"
          name: "vendor"
          description: "Filter results by product vendor."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Filter results by product handle."
          schema: {}
          required: false
        - in: "query"
          name: "product_type"
          description: "Filter results by product type."
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Return products by their status.\n                  (default: active)\n                    \n                        active: Show only active products.\n                        archived: Show only archived products.\n                        draft: Show only draft products."
          schema: {}
          required: false
        - in: "query"
          name: "collection_id"
          description: "Filter results by product collection ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show products created after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show products created before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show products last updated after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show products last updated before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show products published after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show products published before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Return products by their published status\n                  (default: any)\n                    \n                        published: Show only published products.\n                        unpublished: Show only unpublished products.\n                        any: Show all products."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
        - in: "query"
          name: "presentment_currencies"
          description: "Return presentment prices in only certain currencies, specified by a comma-separated list of ISO 4217 currency codes."
          schema: {}
          required: false
      tags:
        - "products"
        - "product"
        - "products/product"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_products"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                summary: "Create a new product with the default product variant"
              example2:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    published: false
                summary: "Create a new unpublished product"
              example3:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    shop:
                      id: 690933842
                      name: "Apple Computers"
                      email: "steve@apple.com"
                      domain: "apple.myshopify.com"
                      province: "California"
                      country: "US"
                      address1: "1 Infinite Loop"
                      zip: "95014"
                      city: "Cupertino"
                      source: null
                      phone: "1231231234"
                      latitude: 45.45
                      longitude: -75.43
                      primary_locale: "en"
                      address2: "Suite 100"
                      created_at: "2007-12-31T19:00:00-05:00"
                      updated_at: "2020-11-04T16:46:58-05:00"
                      country_code: "US"
                      country_name: "United States"
                      currency: "USD"
                      customer_email: "steve@apple.com"
                      timezone: "(GMT-05:00) Eastern Time (US & Canada)"
                      iana_timezone: "America/New_York"
                      shop_owner: "Steve Jobs"
                      money_format: "$"
                      money_with_currency_format: "$ USD"
                      weight_unit: "lb"
                      province_code: "CA"
                      taxes_included: null
                      tax_shipping: null
                      county_taxes: true
                      plan_display_name: "Shopify Plus"
                      plan_name: "enterprise"
                      has_discounts: true
                      has_gift_cards: true
                      myshopify_domain: "apple.myshopify.com"
                      google_apps_domain: null
                      google_apps_login_enabled: null
                      money_in_emails_format: "$"
                      money_with_currency_in_emails_format: "$ USD"
                      eligible_for_payments: true
                      requires_extra_payments_agreement: false
                      password_enabled: null
                      has_storefront: true
                      eligible_for_card_reader_giveaway: false
                      finances: true
                      primary_location_id: 905684977
                      cookie_consent_level: "implicit"
                      visitor_tracking_consent_preference: "allow_all"
                      force_ssl: true
                      checkout_api_supported: true
                      multi_location_enabled: false
                      setup_required: false
                      pre_launch_enabled: false
                      enabled_presentment_currencies:
                        - "USD"
                    status: "draft"
                summary: "Create a new draft product"
              example4:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    variants:
                      - option1: "First"
                        price: "10.00"
                        sku: "123"
                      - option1: "Second"
                        price: "20.00"
                        sku: "123"
                summary: "Create a new product with multiple product variants"
              example5:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    variants:
                      - option1: "Blue"
                        option2: "155"
                      - option1: "Black"
                        option2: "159"
                    options:
                      - name: "Color"
                        values:
                          - "Blue"
                          - "Black"
                      - name: "Size"
                        values:
                          - "155"
                          - "159"
                summary: "Create a new product with multiple product variants and multiple options"
              example6:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    images:
                      - attachment: "R0lGODlhAQABAIAAAAAAAAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==\n"
                summary: "Create a new product with the default variant and base64 encoded image"
              example7:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    images:
                      - src: "http://example.com/rails_logo.gif"
                summary: "Create a new product with the default variant and a product image that will be downloaded by Shopify"
              example8:
                value:
                  product:
                    body_html: "A mystery!"
                summary: "Creating a product without a title will return an error"
              example9:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create a product with a metafield"
      summary: "Creates a new product.\n          If you want to set the product's SEO information, then you can use the following properties:\n          \n            metafields_global_title_tag: The name of the product used for SEO purposes. Generally added to the <meta name='title'> tag.\n            metafields_global_description_tag: A description of the product used for SEO purposes. Generally added to the <meta name='description'> tag."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#create-2020-10"
      parameters: []
      tags:
        - "products"
        - "product"
        - "products/product"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_products"
  /admin/api/2020-10/products/count.json:
    get:
      summary: "Retrieves a count of products."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#count-2020-10"
      parameters:
        - in: "query"
          name: "vendor"
          description: "Filter results by product vendor."
          schema: {}
          required: false
        - in: "query"
          name: "product_type"
          description: "Filter results by product type."
          schema: {}
          required: false
        - in: "query"
          name: "collection_id"
          description: "Filter results by collection ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show products created after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show products created before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show products last updated after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show products last updated before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show products published after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show products published before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Return products by their published status\n                  (default: any)\n                    \n                        published: Show only published products.\n                        unpublished: Show only unpublished products.\n                        any: Show all products."
          schema: {}
          required: false
      tags:
        - "products"
        - "product"
        - "products/product"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_products_count"
  /admin/api/2020-10/products/{product_id}.json:
    get:
      summary: "Retrieves a single product."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#show-2020-10"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "products"
        - "product"
        - "products/product"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_products_param_product_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  product:
                    id: 632910392
                    title: "New product title"
                summary: "Update a product's title"
              example2:
                value:
                  product:
                    id: 632910392
                    status: "draft"
                summary: "Update a product's status"
              example3:
                value:
                  product:
                    id: 632910392
                    tags: "Barnes & Noble, John's Fav"
                summary: "Update a product's tags"
              example4:
                value:
                  product:
                    id: 632910392
                    images: []
                summary: "Update a product by clearing product images"
              example5:
                value:
                  product:
                    id: 632910392
                    images:
                      - id: 850703190
                      - id: 562641783
                      - src: "http://example.com/rails_logo.gif"
                summary: "Update a product by adding a new product image"
              example6:
                value:
                  product:
                    id: 632910392
                    images:
                      - id: 850703190
                        position: 2
                      - id: 562641783
                        position: 1
                summary: "Update a product by reordering product image"
              example7:
                value:
                  product:
                    id: 632910392
                    variants:
                      - id: 457924702
                      - id: 39072856
                      - id: 49148385
                      - id: 808950810
                summary: "Update a product by reordering the product variants"
              example8:
                value:
                  product:
                    id: 632910392
                    title: "Updated Product Title"
                    variants:
                      - id: 808950810
                        price: "2000.00"
                        sku: "Updating the Product SKU"
                      - id: 49148385
                      - id: 39072856
                      - id: 457924702
                summary: "Update a product and one of its variants"
              example9:
                value:
                  product:
                    id: 632910392
                    metafields_global_title_tag: "Brand new title"
                    metafields_global_description_tag: "Brand new description"
                summary: "Update a product's SEO title and description"
              example10:
                value:
                  product:
                    id: 632910392
                    published: true
                summary: "Show a hidden product by changing the published attribute to true"
              example11:
                value:
                  product:
                    id: 632910392
                    published: false
                summary: "Hide a published product by changing the published attribute to false"
              example12:
                value:
                  product:
                    id: 632910392
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add a metafield to an existing product"
      summary: "Updates a product and its variants and images.\n          If you want to update the product's SEO information, then you can use the following properties:\n          \n            metafields_global_title_tag: The name of the product used for SEO purposes. Generally added to the <meta name='title'> tag.\n            metafields_global_description_tag: A description of the product used for SEO purposes. Generally added to the <meta name='description'> tag."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#update-2020-10"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
      tags:
        - "products"
        - "product"
        - "products/product"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_products_param_product_id"
    delete:
      summary: "Deletes a product."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#destroy-2020-10"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
      tags:
        - "products"
        - "product"
        - "products/product"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_products_param_product_id"
  /admin/api/2021-01/products.json:
    get:
      summary: "Retrieves a list of products. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#index-2021-01"
      parameters:
        - in: "query"
          name: "ids"
          description: "Return only products specified by a comma-separated list of product IDs."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "Return up to this many results per page.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "title"
          description: "Filter results by product title."
          schema: {}
          required: false
        - in: "query"
          name: "vendor"
          description: "Filter results by product vendor."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Filter results by product handle."
          schema: {}
          required: false
        - in: "query"
          name: "product_type"
          description: "Filter results by product type."
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Return products by their status.\n                  (default: active)\n                    \n                        active: Show only active products.\n                        archived: Show only archived products.\n                        draft: Show only draft products."
          schema: {}
          required: false
        - in: "query"
          name: "collection_id"
          description: "Filter results by product collection ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show products created after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show products created before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show products last updated after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show products last updated before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show products published after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show products published before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Return products by their published status\n                  (default: any)\n                    \n                        published: Show only published products.\n                        unpublished: Show only unpublished products.\n                        any: Show all products."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
        - in: "query"
          name: "presentment_currencies"
          description: "Return presentment prices in only certain currencies, specified by a comma-separated list of ISO 4217 currency codes."
          schema: {}
          required: false
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_products"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                summary: "Create a new product with the default product variant"
              example2:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    published: false
                summary: "Create a new unpublished product"
              example3:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    shop:
                      id: 690933842
                      name: "Apple Computers"
                      email: "steve@apple.com"
                      domain: "apple.myshopify.com"
                      province: "California"
                      country: "US"
                      address1: "1 Infinite Loop"
                      zip: "95014"
                      city: "Cupertino"
                      source: null
                      phone: "1231231234"
                      latitude: 45.45
                      longitude: -75.43
                      primary_locale: "en"
                      address2: "Suite 100"
                      created_at: "2007-12-31T19:00:00-05:00"
                      updated_at: "2020-11-04T16:46:58-05:00"
                      country_code: "US"
                      country_name: "United States"
                      currency: "USD"
                      customer_email: "steve@apple.com"
                      timezone: "(GMT-05:00) Eastern Time (US & Canada)"
                      iana_timezone: "America/New_York"
                      shop_owner: "Steve Jobs"
                      money_format: "$"
                      money_with_currency_format: "$ USD"
                      weight_unit: "lb"
                      province_code: "CA"
                      taxes_included: null
                      tax_shipping: null
                      county_taxes: true
                      plan_display_name: "Shopify Plus"
                      plan_name: "enterprise"
                      has_discounts: true
                      has_gift_cards: true
                      myshopify_domain: "apple.myshopify.com"
                      google_apps_domain: null
                      google_apps_login_enabled: null
                      money_in_emails_format: "$"
                      money_with_currency_in_emails_format: "$ USD"
                      eligible_for_payments: true
                      requires_extra_payments_agreement: false
                      password_enabled: null
                      has_storefront: true
                      eligible_for_card_reader_giveaway: false
                      finances: true
                      primary_location_id: 905684977
                      cookie_consent_level: "implicit"
                      visitor_tracking_consent_preference: "allow_all"
                      force_ssl: true
                      checkout_api_supported: true
                      multi_location_enabled: false
                      setup_required: false
                      pre_launch_enabled: false
                      enabled_presentment_currencies:
                        - "USD"
                    status: "draft"
                summary: "Create a new draft product"
              example4:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    variants:
                      - option1: "First"
                        price: "10.00"
                        sku: "123"
                      - option1: "Second"
                        price: "20.00"
                        sku: "123"
                summary: "Create a new product with multiple product variants"
              example5:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    variants:
                      - option1: "Blue"
                        option2: "155"
                      - option1: "Black"
                        option2: "159"
                    options:
                      - name: "Color"
                        values:
                          - "Blue"
                          - "Black"
                      - name: "Size"
                        values:
                          - "155"
                          - "159"
                summary: "Create a new product with multiple product variants and multiple options"
              example6:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    images:
                      - attachment: "R0lGODlhAQABAIAAAAAAAAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==\n"
                summary: "Create a new product with the default variant and base64 encoded image"
              example7:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    images:
                      - src: "http://example.com/rails_logo.gif"
                summary: "Create a new product with the default variant and a product image that will be downloaded by Shopify"
              example8:
                value:
                  product:
                    body_html: "A mystery!"
                summary: "Creating a product without a title will return an error"
              example9:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create a product with a metafield"
      summary: "Creates a new product.\n          If you want to set the product's SEO information, then you can use the following properties:\n          \n            metafields_global_title_tag: The name of the product used for SEO purposes. Generally added to the <meta name='title'> tag.\n            metafields_global_description_tag: A description of the product used for SEO purposes. Generally added to the <meta name='description'> tag."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#create-2021-01"
      parameters: []
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_products"
  /admin/api/2021-01/products/count.json:
    get:
      summary: "Retrieves a count of products."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#count-2021-01"
      parameters:
        - in: "query"
          name: "vendor"
          description: "Filter results by product vendor."
          schema: {}
          required: false
        - in: "query"
          name: "product_type"
          description: "Filter results by product type."
          schema: {}
          required: false
        - in: "query"
          name: "collection_id"
          description: "Filter results by collection ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show products created after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show products created before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show products last updated after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show products last updated before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show products published after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show products published before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Return products by their published status\n                  (default: any)\n                    \n                        published: Show only published products.\n                        unpublished: Show only unpublished products.\n                        any: Show all products."
          schema: {}
          required: false
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_products_count"
  /admin/api/2021-01/products/{product_id}.json:
    get:
      summary: "Retrieves a single product."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#show-2021-01"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_products_param_product_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  product:
                    id: 632910392
                    title: "New product title"
                summary: "Update a product's title"
              example2:
                value:
                  product:
                    id: 632910392
                    status: "draft"
                summary: "Update a product's status"
              example3:
                value:
                  product:
                    id: 632910392
                    tags: "Barnes & Noble, John's Fav"
                summary: "Update a product's tags"
              example4:
                value:
                  product:
                    id: 632910392
                    images: []
                summary: "Update a product by clearing product images"
              example5:
                value:
                  product:
                    id: 632910392
                    images:
                      - id: 850703190
                      - id: 562641783
                      - src: "http://example.com/rails_logo.gif"
                summary: "Update a product by adding a new product image"
              example6:
                value:
                  product:
                    id: 632910392
                    images:
                      - id: 850703190
                        position: 2
                      - id: 562641783
                        position: 1
                summary: "Update a product by reordering product image"
              example7:
                value:
                  product:
                    id: 632910392
                    variants:
                      - id: 457924702
                      - id: 39072856
                      - id: 49148385
                      - id: 808950810
                summary: "Update a product by reordering the product variants"
              example8:
                value:
                  product:
                    id: 632910392
                    title: "Updated Product Title"
                    variants:
                      - id: 808950810
                        price: "2000.00"
                        sku: "Updating the Product SKU"
                      - id: 49148385
                      - id: 39072856
                      - id: 457924702
                summary: "Update a product and one of its variants"
              example9:
                value:
                  product:
                    id: 632910392
                    metafields_global_title_tag: "Brand new title"
                    metafields_global_description_tag: "Brand new description"
                summary: "Update a product's SEO title and description"
              example10:
                value:
                  product:
                    id: 632910392
                    published: true
                summary: "Show a hidden product by changing the published attribute to true"
              example11:
                value:
                  product:
                    id: 632910392
                    published: false
                summary: "Hide a published product by changing the published attribute to false"
              example12:
                value:
                  product:
                    id: 632910392
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add a metafield to an existing product"
      summary: "Updates a product and its variants and images.\n          If you want to update the product's SEO information, then you can use the following properties:\n          \n            metafields_global_title_tag: The name of the product used for SEO purposes. Generally added to the <meta name='title'> tag.\n            metafields_global_description_tag: A description of the product used for SEO purposes. Generally added to the <meta name='description'> tag."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#update-2021-01"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_products_param_product_id"
    delete:
      summary: "Deletes a product."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#destroy-2021-01"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_products_param_product_id"
  /admin/api/unstable/products.json:
    get:
      summary: "Retrieves a list of products. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#index-unstable"
      parameters:
        - in: "query"
          name: "ids"
          description: "Return only products specified by a comma-separated list of product IDs."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "Return up to this many results per page.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "title"
          description: "Filter results by product title."
          schema: {}
          required: false
        - in: "query"
          name: "vendor"
          description: "Filter results by product vendor."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Filter results by product handle."
          schema: {}
          required: false
        - in: "query"
          name: "product_type"
          description: "Filter results by product type."
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Return products by their status.\n                  (default: active)\n                    \n                        active: Show only active products.\n                        archived: Show only archived products.\n                        draft: Show only draft products."
          schema: {}
          required: false
        - in: "query"
          name: "collection_id"
          description: "Filter results by product collection ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show products created after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show products created before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show products last updated after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show products last updated before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show products published after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show products published before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Return products by their published status\n                  (default: any)\n                    \n                        published: Show only published products.\n                        unpublished: Show only unpublished products.\n                        any: Show all products."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
        - in: "query"
          name: "presentment_currencies"
          description: "Return presentment prices in only certain currencies, specified by a comma-separated list of ISO 4217 currency codes."
          schema: {}
          required: false
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_products"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                summary: "Create a new product with the default product variant"
              example2:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    published: false
                summary: "Create a new unpublished product"
              example3:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    shop:
                      id: 690933842
                      name: "Apple Computers"
                      email: "steve@apple.com"
                      domain: "apple.myshopify.com"
                      province: "California"
                      country: "US"
                      address1: "1 Infinite Loop"
                      zip: "95014"
                      city: "Cupertino"
                      source: null
                      phone: "1231231234"
                      latitude: 45.45
                      longitude: -75.43
                      primary_locale: "en"
                      address2: "Suite 100"
                      created_at: "2007-12-31T19:00:00-05:00"
                      updated_at: "2020-11-04T16:46:58-05:00"
                      country_code: "US"
                      country_name: "United States"
                      currency: "USD"
                      customer_email: "steve@apple.com"
                      timezone: "(GMT-05:00) Eastern Time (US & Canada)"
                      iana_timezone: "America/New_York"
                      shop_owner: "Steve Jobs"
                      money_format: "$"
                      money_with_currency_format: "$ USD"
                      weight_unit: "lb"
                      province_code: "CA"
                      taxes_included: null
                      tax_shipping: null
                      county_taxes: true
                      plan_display_name: "Shopify Plus"
                      plan_name: "enterprise"
                      has_discounts: true
                      has_gift_cards: true
                      myshopify_domain: "apple.myshopify.com"
                      google_apps_domain: null
                      google_apps_login_enabled: null
                      money_in_emails_format: "$"
                      money_with_currency_in_emails_format: "$ USD"
                      eligible_for_payments: true
                      requires_extra_payments_agreement: false
                      password_enabled: null
                      has_storefront: true
                      eligible_for_card_reader_giveaway: false
                      finances: true
                      primary_location_id: 905684977
                      cookie_consent_level: "implicit"
                      visitor_tracking_consent_preference: "allow_all"
                      force_ssl: true
                      checkout_api_supported: true
                      multi_location_enabled: false
                      setup_required: false
                      pre_launch_enabled: false
                      enabled_presentment_currencies:
                        - "USD"
                    status: "draft"
                summary: "Create a new draft product"
              example4:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    variants:
                      - option1: "First"
                        price: "10.00"
                        sku: "123"
                      - option1: "Second"
                        price: "20.00"
                        sku: "123"
                summary: "Create a new product with multiple product variants"
              example5:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    variants:
                      - option1: "Blue"
                        option2: "155"
                      - option1: "Black"
                        option2: "159"
                    options:
                      - name: "Color"
                        values:
                          - "Blue"
                          - "Black"
                      - name: "Size"
                        values:
                          - "155"
                          - "159"
                summary: "Create a new product with multiple product variants and multiple options"
              example6:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    images:
                      - attachment: "R0lGODlhAQABAIAAAAAAAAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==\n"
                summary: "Create a new product with the default variant and base64 encoded image"
              example7:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    images:
                      - src: "http://example.com/rails_logo.gif"
                summary: "Create a new product with the default variant and a product image that will be downloaded by Shopify"
              example8:
                value:
                  product:
                    body_html: "A mystery!"
                summary: "Creating a product without a title will return an error"
              example9:
                value:
                  product:
                    title: "Burton Custom Freestyle 151"
                    body_html: "<strong>Good snowboard!</strong>"
                    vendor: "Burton"
                    product_type: "Snowboard"
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Create a product with a metafield"
      summary: "Creates a new product.\n          If you want to set the product's SEO information, then you can use the following properties:\n          \n            metafields_global_title_tag: The name of the product used for SEO purposes. Generally added to the <meta name='title'> tag.\n            metafields_global_description_tag: A description of the product used for SEO purposes. Generally added to the <meta name='description'> tag."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#create-unstable"
      parameters: []
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_products"
  /admin/api/unstable/products/count.json:
    get:
      summary: "Retrieves a count of products."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#count-unstable"
      parameters:
        - in: "query"
          name: "vendor"
          description: "Filter results by product vendor."
          schema: {}
          required: false
        - in: "query"
          name: "product_type"
          description: "Filter results by product type."
          schema: {}
          required: false
        - in: "query"
          name: "collection_id"
          description: "Filter results by collection ID."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show products created after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Show products created before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show products last updated after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show products last updated before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show products published after date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show products published before date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Return products by their published status\n                  (default: any)\n                    \n                        published: Show only published products.\n                        unpublished: Show only unpublished products.\n                        any: Show all products."
          schema: {}
          required: false
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_products_count"
  /admin/api/unstable/products/{product_id}.json:
    get:
      summary: "Retrieves a single product."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#show-unstable"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_products_param_product_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  product:
                    id: 632910392
                    title: "New product title"
                summary: "Update a product's title"
              example2:
                value:
                  product:
                    id: 632910392
                    status: "draft"
                summary: "Update a product's status"
              example3:
                value:
                  product:
                    id: 632910392
                    tags: "Barnes & Noble, John's Fav"
                summary: "Update a product's tags"
              example4:
                value:
                  product:
                    id: 632910392
                    images: []
                summary: "Update a product by clearing product images"
              example5:
                value:
                  product:
                    id: 632910392
                    images:
                      - id: 850703190
                      - id: 562641783
                      - src: "http://example.com/rails_logo.gif"
                summary: "Update a product by adding a new product image"
              example6:
                value:
                  product:
                    id: 632910392
                    images:
                      - id: 850703190
                        position: 2
                      - id: 562641783
                        position: 1
                summary: "Update a product by reordering product image"
              example7:
                value:
                  product:
                    id: 632910392
                    variants:
                      - id: 457924702
                      - id: 39072856
                      - id: 49148385
                      - id: 808950810
                summary: "Update a product by reordering the product variants"
              example8:
                value:
                  product:
                    id: 632910392
                    title: "Updated Product Title"
                    variants:
                      - id: 808950810
                        price: "2000.00"
                        sku: "Updating the Product SKU"
                      - id: 49148385
                      - id: 39072856
                      - id: 457924702
                summary: "Update a product and one of its variants"
              example9:
                value:
                  product:
                    id: 632910392
                    metafields_global_title_tag: "Brand new title"
                    metafields_global_description_tag: "Brand new description"
                summary: "Update a product's SEO title and description"
              example10:
                value:
                  product:
                    id: 632910392
                    published: true
                summary: "Show a hidden product by changing the published attribute to true"
              example11:
                value:
                  product:
                    id: 632910392
                    published: false
                summary: "Hide a published product by changing the published attribute to false"
              example12:
                value:
                  product:
                    id: 632910392
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                summary: "Add a metafield to an existing product"
      summary: "Updates a product and its variants and images.\n          If you want to update the product's SEO information, then you can use the following properties:\n          \n            metafields_global_title_tag: The name of the product used for SEO purposes. Generally added to the <meta name='title'> tag.\n            metafields_global_description_tag: A description of the product used for SEO purposes. Generally added to the <meta name='description'> tag."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#update-unstable"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_products_param_product_id"
    delete:
      summary: "Deletes a product."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product#destroy-unstable"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
      tags:
        - "products"
        - "product"
        - "products/product"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_products_param_product_id"
  /admin/api/2020-01/products/{product_id}/images.json:
    get:
      summary: "Get all product images"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#index-2020-01"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "comma-separated list of fields to include in the response"
          schema: {}
          required: false
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_products_param_product_id_images"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  image:
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image with included image data as attachment"
              example2:
                value:
                  image:
                    src: "http://example.com/rails_logo.gif"
                summary: "Create a new product image using a source URL that will be downloaded by Shopify"
              example3:
                value:
                  image:
                    position: 1
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image and make it the main image"
              example4:
                value:
                  image:
                    variant_ids:
                      - 808950810
                      - 457924702
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image and attach it to product variants"
              example5:
                value:
                  image:
                    position: 1
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image with a metafield"
      summary: "Create a new product image"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#create-2020-01"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_products_param_product_id_images"
  /admin/api/2020-01/products/{product_id}/images/count.json:
    get:
      summary: "Get a count of all product images"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#count-2020-01"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID"
          schema: {}
          required: false
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_products_param_product_id_images_count"
  /admin/api/2020-01/products/{product_id}/images/{image_id}.json:
    get:
      summary: "Get a single product image by id"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#show-2020-01"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "path"
          name: "image_id"
          required: true
          schema:
            type: "string"
          description: "image_id"
        - in: "query"
          name: "fields"
          description: "comma-separated list of fields to include in the response"
          schema: {}
          required: false
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_products_param_product_id_images_param_image_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  image:
                    id: 850703190
                    position: 2
                    alt: "new alt tag content"
                summary: "Modify an image; change its position and alt tag content"
              example2:
                value:
                  image:
                    id: 850703190
                    metafields:
                      - key: "my_new_metafield"
                        value: "my_new_value"
                        value_type: "string"
                        namespace: "tags"
                summary: "Modify an image; add a metafield"
              example3:
                value:
                  image:
                    id: 850703190
                    variant_ids:
                      - 808950810
                      - 457924702
                summary: "Modify an image; add it to product variants"
      summary: "Modify an existing product image"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#update-2020-01"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "path"
          name: "image_id"
          required: true
          schema:
            type: "string"
          description: "image_id"
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_products_param_product_id_images_param_image_id"
    delete:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#destroy-2020-01"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "path"
          name: "image_id"
          required: true
          schema:
            type: "string"
          description: "image_id"
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_products_param_product_id_images_param_image_id"
  /admin/api/2020-04/products/{product_id}/images.json:
    get:
      summary: "Get all product images"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#index-2020-04"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "comma-separated list of fields to include in the response"
          schema: {}
          required: false
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_products_param_product_id_images"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  image:
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image with included image data as attachment"
              example2:
                value:
                  image:
                    src: "http://example.com/rails_logo.gif"
                summary: "Create a new product image using a source URL that will be downloaded by Shopify"
              example3:
                value:
                  image:
                    position: 1
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image and make it the main image"
              example4:
                value:
                  image:
                    variant_ids:
                      - 808950810
                      - 457924702
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image and attach it to product variants"
              example5:
                value:
                  image:
                    position: 1
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image with a metafield"
      summary: "Create a new product image"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#create-2020-04"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_products_param_product_id_images"
  /admin/api/2020-04/products/{product_id}/images/count.json:
    get:
      summary: "Get a count of all product images"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#count-2020-04"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID"
          schema: {}
          required: false
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_products_param_product_id_images_count"
  /admin/api/2020-04/products/{product_id}/images/{image_id}.json:
    get:
      summary: "Get a single product image by id"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#show-2020-04"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "path"
          name: "image_id"
          required: true
          schema:
            type: "string"
          description: "image_id"
        - in: "query"
          name: "fields"
          description: "comma-separated list of fields to include in the response"
          schema: {}
          required: false
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_products_param_product_id_images_param_image_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  image:
                    id: 850703190
                    position: 2
                    alt: "new alt tag content"
                summary: "Modify an image; change its position and alt tag content"
              example2:
                value:
                  image:
                    id: 850703190
                    metafields:
                      - key: "my_new_metafield"
                        value: "my_new_value"
                        value_type: "string"
                        namespace: "tags"
                summary: "Modify an image; add a metafield"
              example3:
                value:
                  image:
                    id: 850703190
                    variant_ids:
                      - 808950810
                      - 457924702
                summary: "Modify an image; add it to product variants"
      summary: "Modify an existing product image"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#update-2020-04"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "path"
          name: "image_id"
          required: true
          schema:
            type: "string"
          description: "image_id"
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_products_param_product_id_images_param_image_id"
    delete:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#destroy-2020-04"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "path"
          name: "image_id"
          required: true
          schema:
            type: "string"
          description: "image_id"
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_products_param_product_id_images_param_image_id"
  /admin/api/2020-07/products/{product_id}/images.json:
    get:
      summary: "Get all product images"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#index-2020-07"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "comma-separated list of fields to include in the response"
          schema: {}
          required: false
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_products_param_product_id_images"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  image:
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image with included image data as attachment"
              example2:
                value:
                  image:
                    src: "http://example.com/rails_logo.gif"
                summary: "Create a new product image using a source URL that will be downloaded by Shopify"
              example3:
                value:
                  image:
                    position: 1
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image and make it the main image"
              example4:
                value:
                  image:
                    variant_ids:
                      - 808950810
                      - 457924702
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image and attach it to product variants"
              example5:
                value:
                  image:
                    position: 1
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image with a metafield"
      summary: "Create a new product image"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#create-2020-07"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_products_param_product_id_images"
  /admin/api/2020-07/products/{product_id}/images/count.json:
    get:
      summary: "Get a count of all product images"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#count-2020-07"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID"
          schema: {}
          required: false
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_products_param_product_id_images_count"
  /admin/api/2020-07/products/{product_id}/images/{image_id}.json:
    get:
      summary: "Get a single product image by id"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#show-2020-07"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "path"
          name: "image_id"
          required: true
          schema:
            type: "string"
          description: "image_id"
        - in: "query"
          name: "fields"
          description: "comma-separated list of fields to include in the response"
          schema: {}
          required: false
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_products_param_product_id_images_param_image_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  image:
                    id: 850703190
                    position: 2
                    alt: "new alt tag content"
                summary: "Modify an image; change its position and alt tag content"
              example2:
                value:
                  image:
                    id: 850703190
                    metafields:
                      - key: "my_new_metafield"
                        value: "my_new_value"
                        value_type: "string"
                        namespace: "tags"
                summary: "Modify an image; add a metafield"
              example3:
                value:
                  image:
                    id: 850703190
                    variant_ids:
                      - 808950810
                      - 457924702
                summary: "Modify an image; add it to product variants"
      summary: "Modify an existing product image"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#update-2020-07"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "path"
          name: "image_id"
          required: true
          schema:
            type: "string"
          description: "image_id"
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_products_param_product_id_images_param_image_id"
    delete:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#destroy-2020-07"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "path"
          name: "image_id"
          required: true
          schema:
            type: "string"
          description: "image_id"
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_products_param_product_id_images_param_image_id"
  /admin/api/2020-10/products/{product_id}/images.json:
    get:
      summary: "Get all product images"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#index-2020-10"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "comma-separated list of fields to include in the response"
          schema: {}
          required: false
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_products_param_product_id_images"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  image:
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image with included image data as attachment"
              example2:
                value:
                  image:
                    src: "http://example.com/rails_logo.gif"
                summary: "Create a new product image using a source URL that will be downloaded by Shopify"
              example3:
                value:
                  image:
                    position: 1
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image and make it the main image"
              example4:
                value:
                  image:
                    variant_ids:
                      - 808950810
                      - 457924702
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image and attach it to product variants"
              example5:
                value:
                  image:
                    position: 1
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image with a metafield"
      summary: "Create a new product image"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#create-2020-10"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_products_param_product_id_images"
  /admin/api/2020-10/products/{product_id}/images/count.json:
    get:
      summary: "Get a count of all product images"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#count-2020-10"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID"
          schema: {}
          required: false
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_products_param_product_id_images_count"
  /admin/api/2020-10/products/{product_id}/images/{image_id}.json:
    get:
      summary: "Get a single product image by id"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#show-2020-10"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "path"
          name: "image_id"
          required: true
          schema:
            type: "string"
          description: "image_id"
        - in: "query"
          name: "fields"
          description: "comma-separated list of fields to include in the response"
          schema: {}
          required: false
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_products_param_product_id_images_param_image_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  image:
                    id: 850703190
                    position: 2
                    alt: "new alt tag content"
                summary: "Modify an image; change its position and alt tag content"
              example2:
                value:
                  image:
                    id: 850703190
                    metafields:
                      - key: "my_new_metafield"
                        value: "my_new_value"
                        value_type: "string"
                        namespace: "tags"
                summary: "Modify an image; add a metafield"
              example3:
                value:
                  image:
                    id: 850703190
                    variant_ids:
                      - 808950810
                      - 457924702
                summary: "Modify an image; add it to product variants"
      summary: "Modify an existing product image"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#update-2020-10"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "path"
          name: "image_id"
          required: true
          schema:
            type: "string"
          description: "image_id"
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_products_param_product_id_images_param_image_id"
    delete:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#destroy-2020-10"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "path"
          name: "image_id"
          required: true
          schema:
            type: "string"
          description: "image_id"
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_products_param_product_id_images_param_image_id"
  /admin/api/2021-01/products/{product_id}/images.json:
    get:
      summary: "Get all product images"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#index-2021-01"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "comma-separated list of fields to include in the response"
          schema: {}
          required: false
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_products_param_product_id_images"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  image:
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image with included image data as attachment"
              example2:
                value:
                  image:
                    src: "http://example.com/rails_logo.gif"
                summary: "Create a new product image using a source URL that will be downloaded by Shopify"
              example3:
                value:
                  image:
                    position: 1
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image and make it the main image"
              example4:
                value:
                  image:
                    variant_ids:
                      - 808950810
                      - 457924702
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image and attach it to product variants"
              example5:
                value:
                  image:
                    position: 1
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image with a metafield"
      summary: "Create a new product image"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#create-2021-01"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_products_param_product_id_images"
  /admin/api/2021-01/products/{product_id}/images/count.json:
    get:
      summary: "Get a count of all product images"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#count-2021-01"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID"
          schema: {}
          required: false
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_products_param_product_id_images_count"
  /admin/api/2021-01/products/{product_id}/images/{image_id}.json:
    get:
      summary: "Get a single product image by id"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#show-2021-01"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "path"
          name: "image_id"
          required: true
          schema:
            type: "string"
          description: "image_id"
        - in: "query"
          name: "fields"
          description: "comma-separated list of fields to include in the response"
          schema: {}
          required: false
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_products_param_product_id_images_param_image_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  image:
                    id: 850703190
                    position: 2
                    alt: "new alt tag content"
                summary: "Modify an image; change its position and alt tag content"
              example2:
                value:
                  image:
                    id: 850703190
                    metafields:
                      - key: "my_new_metafield"
                        value: "my_new_value"
                        value_type: "string"
                        namespace: "tags"
                summary: "Modify an image; add a metafield"
              example3:
                value:
                  image:
                    id: 850703190
                    variant_ids:
                      - 808950810
                      - 457924702
                summary: "Modify an image; add it to product variants"
      summary: "Modify an existing product image"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#update-2021-01"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "path"
          name: "image_id"
          required: true
          schema:
            type: "string"
          description: "image_id"
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_products_param_product_id_images_param_image_id"
    delete:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#destroy-2021-01"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "path"
          name: "image_id"
          required: true
          schema:
            type: "string"
          description: "image_id"
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_products_param_product_id_images_param_image_id"
  /admin/api/unstable/products/{product_id}/images.json:
    get:
      summary: "Get all product images"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#index-unstable"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID"
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "comma-separated list of fields to include in the response"
          schema: {}
          required: false
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_products_param_product_id_images"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  image:
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image with included image data as attachment"
              example2:
                value:
                  image:
                    src: "http://example.com/rails_logo.gif"
                summary: "Create a new product image using a source URL that will be downloaded by Shopify"
              example3:
                value:
                  image:
                    position: 1
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image and make it the main image"
              example4:
                value:
                  image:
                    variant_ids:
                      - 808950810
                      - 457924702
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image and attach it to product variants"
              example5:
                value:
                  image:
                    position: 1
                    metafields:
                      - key: "new"
                        value: "newvalue"
                        value_type: "string"
                        namespace: "global"
                    attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\nU7Mq2Mq1K9cUW8GKTUG2rNkUHNByWMuWLdWva7t1W7UKG4S7eO/ycEhQHgaK\nsL4VGGyocGE3br5929KuxQFFkEtIlgypsuUDmDMfWGRmUZvPoEHfGU36jgDT\nLQSoVt3IQ2sPsL0IUNZGlZ0H0lo00jEkCytWMspdGzBgn/F9EBIWnKIQlqHB\nhA0bQpx48Z7UAkoEcMTdUeTJJSxf/4akOTNnzqHb3GkjrUdp0gKwq77jWdod\nO7dNKWvhRUcWT6zYQI82xB03AAQNCdTKX/xAAB10hfVCnRtbVIhIAy14oJoZ\nAXS4XXfdQaYIeOGJRx555Z1nRnrqqUeaMtIYY8dmn7Vg2yK57TYEgAzIQGBx\nxyXHj0A0OOTggxFKSN1iWwTTAIYanpYdMtFE4+GVIHrn3XeUmVhZeWiIMoOY\nnVQDGiTgKALJjIssIsADt0mjjI6+AXcDgQYi2M8/7ijEwzRIFmBIL9NVV+EW\nVzyZ4Wqj9RBABchQWeWkV3aY5ZYjjgieeKL446mnjxwAiZVpliAjZqblt19/\n/7HCwIAFGv+X3J4s9fMckoYhphiTQTwJ5Wqn9dDDAWuMUUEFviTrS6STVlmp\npVmKqCkOn34aB6TIBAAOJeHZAYl6ptixSCL8edGbq8HFeqBDcygEyIOCGqYk\nkxUW4euiq7knbA/gUDHGv//ec2wFayQbaQWinOCslVhmSUq1/gCDLJXacgtJ\nCYu4J66cjbAKoA3CxapnOgm9g+ughdK7xYX3Rinlvj2YYcYanVBBhTg2Axzw\nG4/4k4bBzDZbKRUQP1LIsRSX6sgBZtwhzQP68ccbj7AWty4/5igEoaC9dK3r\noVtgs4evvzKqb8wyQ0JFJzXXbDMVcQBQLTDGVmCssstKGs09oPT/jQcRoBw9\nMamKgEOeeg/gqBtvdVZSDnHFIQgRD4RxXWhiYEOQKNn4zncHzDIzHc0ZpHdy\nRicIQOypKDf7q3Pd96ABzSab+E1EIYIvS2o0ijA92gPZiCB1qwL+iJxL78Z7\n2NeHQrAK2YrCZva+bcgcujFUQIEG6WigonoCdLT9tr9UbIIAMMCEkkYacvvT\nxSgsBPKGJKBEAw4yjhx+hyn+PAJFfztyVdWOt5B3RehyimneFuwFvQxFyTSf\n25f1zCAqSFACDXTQ3gwSoDoElI5tZyBAINqnuhJ+Kg9vOIOaVnSHT5ECHucK\n0OMiBxJAPCdXmGseBLoBvei5rFEStB5m/yBhjFJUIw50oIMoLvCpFRAADduj\nwxvUYMIqmvARCBiDeiwRBk+lQQTEq5qQ3CWdJSkGAlu4y9h66EBgAbF6QhSV\nMUpQilKcQRNLwIenfpFEJebBioC0ohrQQJ8QhMIfSwhgj2YouYTYUEmGqhBe\nFNBDH5otgmgLnRyLWMdq0GEGCMCHJjSBjzQE8pSChMLTCJBI4pXDBeuiiA1T\nprK7PK+SUPphsIQ1wSEag5OUKIUlyiAmAowClci0YizKILUAFi+WDQEEJOmF\nxlnMYnOVbOP0gkjBTdZRmDiwhCuywcRkmtOEpHjC1DzBABto4xqN5AcgdEXN\nNO4Ql0+CB2xctv9LM2SSgpXhZB0t0QlT+iMUkzinQquFihD452P0gGdGAPGN\nHKYxjbOAwBpxqU9+ApGXQgyoQDWRgASwoAMGMMAHDrnQhc5AkQPSU0NgYVF7\nQmAWKcBnPvc5HwGcbUVxJCInEfACQXQACUhFQkqRwAIOttScv9ABO21wA8k1\np5Z3mYXYdNqAjvLzbHDUpFCNIQoUdGAdHUhrUg2gVAOg4AXmvEAaOPEGaCCA\nAASQxBtIYYIq5kEHAaKHVfsRGB3eNBPYxKdXGVWGUnAzdOSxgyg+MIxhoDWt\nal3rUlXABEBeYBQIiMMm0AAKPBBAE1A4nTjWEIAzvGEFqsvDEHqEjZj/wMKw\n1rwlVxerGkv4AxVoAOkEmXGMOKDgA8i1LFrRioSjKrWtKRVEQlXHBBSKQhLQ\nEG3tCHCLJaSWClD0zgHO8LBqDeIYNsDGTG4ryZtak4G7lZ6G2sBSfyCAaTK7\nAzfgQIEzoOC/yKVsZS+bWeim1BsdqEG10oCANxDgDZwIRHa3O4hbaA91nlKB\nKA7QBhHo0VPwCFBtAdNea86CZVztKk8FUN5PjQIHxKWABihQBkHY+L/HTa5l\nMetcAxvAG94wQAQAkA1SIIAUBvUHdkVLgBkMwrvkPSEkVtSCJ/yCAJ5gZ20l\nwgObziITGk3xTqUHhWoxYQVdAIYINMBmO0TA/8aCwHGOBbwOAvc4pXj2RieY\nIY69ttgfpJBEHOLQ5ArTAQ2SaPAb4lAC33XsoaxYhUx4kFVrZoKSYlYxbOzg\nPX8kAM1d6AILOuEDDQzBBCaIwJvhjOMAU7bOmE0qdMUhhFozQhVxiMWnuiAJ\nQTfZyahFQydWGwA1cbiZAJL0Qiht6UzoVsxetUQaJhEKZzhDBdh+A5s9AQxU\nq3rVN241ne0sa1rXWgjbqLUd3uqPUYhCFNDAxwzm3d3vjgF/vTvAHegUaYbw\nwMSZyAR8oX0I2BwiC2eoQQ2srYJA6IDNb2ABqr39bVYDWMfkRgIVzs1xdEOD\nCjhQ4nXlPe9BaOLQNf+rRjQc0eg2DM8TyvZTs3mY6Xwy4xI2YLMGdIAAhTvD\nFWzuhKhZIHGKq9riF381rDtQho53/Bjpboc1OiEJktMbtaplrbHboCOYT9rS\nOdhopocwgiRowOw6L0MNCKCBKjwA26IW9cRTXfE4i1vAlpUEHJze8XTXehvc\n2AQ05k3vDHaiDGNYeaPNoAzGxbwf/86EHDCd4kbsyBMySII2NH92nevg4TbI\nA7ZVEGqiF93ocLb7nIdhgGMIoROW4Dvft2GHOqQiDoM3+YWJnT8O7yYL3fgI\nDwK+CrFX0lwBctUxtLH55qNd5xkYxMKvDffSn/7b4L47JYQgjnW0XvZOv0L/\nKmz/BS5sIg5QvtkavDPlO/Am+FzOBCBqgU8veEJA9LCBDRjQznIw3/lJEIBs\n5gqhUIALN3rWR3QTh31IFwcUkAiV1QEOCH4ddw8LkAqpUH5cgAtnIGzikHgs\nxzSW1w3+Jgc0Bz32Rw8DoA3lQA8yIAP6xwoj4H//B4BJYAOjoAZqYIDWRn0J\nuIB1Z3fHQAGdgHeJQIEcxwwLQH5csIHEQARE4C9aRx49oAPw5ydyIHaANUPE\nwXwtmH/6Vw5iKIb/F4DaoAGisAIroIM7WG0MR3pDd3qoJwjVQAEUAAdvEGAG\nsHcUgITFgAtLmIFNiAtQeAInMAa+UGwiyAEW8QMc//AkgKUNx7EPkLOCLOiC\nNiADIzCDY0iDm2cHLxCKbNiGPueDcVh02McJ/GWHjfABxyUJdigEfUiB+pAL\ndVAHX1B+uPCERHAChSAw8QAOHMaIE6EF3MAKkjiJxlGJljgC+UcPm7iJnch8\nDJAHoRiKaqiDBRgK01d9LDB0QFiHdmiH1YACSDCE4ziLsscIdRCIGriLhfiL\naxAPOKAKtbARPFAFQKKMywg5XuiC9ACN0TiNOwAAAHCNL5CN2siN3QiHcYhq\nwCAD6WiHomAJEzmO4LcGueCOG4gLf2OIAjOPOHCPEEFT/KiMzKgNLigDABmN\nnKgL02aQB3mNCkmKB+iNCv+IBjI2Y+O4ihcZi063DcywkReYi04Yj/ewBmuA\nAyRYEbAAAVVwkv3oj9rwgizJks4okCMwCI+ACqgwCQaJkGq4hm3IjW8YakPn\nCWxmhzz5kxfJd3iwkUx4lL0ojw/QlAnxlG4glQYCOStplS8YkJuoCwnwCIY5\nCYgZljRJlqTYg9WnbTq3lm3plrGojrVWixuJgRpIDB95AgLTCCRYkjeVAXw5\nlfqXiVa5ks64QSVlmF8JljO5mAtplj4IdJE5YzpHmenYcXCwAHKJi7rIi74Y\nD7oQms1xU71QmpQ4AOVwmvoHmAH5ABcwna3pmompmAnJmDzIcGp5m2upmxMp\ni+f/Zg9AIJeCeJSG+ACHAH8OwWyzoJyUCIOnCYOAKQP4wATTeQElVZio8AiI\nCZtiSZbbuHAIUAXemZu5CZ4YyQ250KAXeJ6c2YsCYIUYwWyZUADK6QoEwAfO\nOZ8yoANSwAT4SZ37eZjXGZtjOZshoAFQ8HAHOo6TCZ5CgAfluYS4OIhPGA8C\n4AXBtxBP+WXvWZrZ4ClhYAkdmokzgAkhKqIjqp+GaaIyGaAL+XDOEAEueqC4\nGaNuKQTWAAQ1OpceCQktcAgcYFuHJQc+wJfhADFpsAPhcJpewAZKKgVL2qTV\n2ZUnKptqMApJ8ADVZqVYKpkKaodwEAflaYvAuYFE4HIe/8CIEWGhchCkJ7kE\nJQQAHGoDZcYGckqnTGqnhWmiALqYS5AEdGCAVmqgBvqiMqagquANX3qe8cCo\njpqX1iQHsAALaWogx5FkEBMO7URCmjqnTJqfJQql2LkClpAEwNCGahABapmq\nqqqgjAAE3uCgTFgC6tEIZVoRzCYHckBpJ+kBJoQA+xcCqrOpdeqpT/qf2JkF\nSQAPOdiGLoqq0QqeVOCqDUp+RMBh+7atDgELX+atPJCPKOkAJmQJ7fRH54oJ\nc7qk+amfn+qfsAkAKqB5SeAFo7CGwBCo3smWlMkMQPaqyAAJi2AaKTBpECB5\nUdFlKJk6qoMK/McHVsSwdFqnxP9aUv3JrgRghhcbCCswqp0XmdAamTtJmXHg\nqjWaCmqCIwJwsg/RrSvLA6R5HDIAAyJAAJ3mKQQAAwxwC4Akp8Iqog9bna+5\nA2V4g+kUgM/HZlUwtB2rparwYzWKB/nzAG3QtBVaq1HxA5+wl8cBA1iABTCg\nCyGgsK7Af1lrReiariTKn6ggAmTIfDfIAJuntt7pth2bjnAABHKbC74ADi13\nByfLrQG7sp/AA8dBD4EruIILAy0ABboAA66ATMHKqcMKsZ/aCNMouWrbu2vb\nthw7kdUgt3VgP41WsinwEPzwb7NgqzzwA3xrCMYBuKu7ujBwvTBAAOYEtrbr\nqQkwg5z/GLmVa7GWy7EJmo7ccGB4gAxp8i3SMLoNEXnOywOf8AmwsA/aUL3V\ni726QELJtLi3W1ICWQ7SGLm+67tCi6UeSwGb8GOFkC1L+74uAbAq+7z1Sw0F\nwACXcAmBy8H6O7sLxb22O52k4IwD2Yk0SL69a763KWOJgAQLACnFBgl267Qy\nV8H0+wnUgAEb3MMbrL/a+1SaWrNMSgpYqZUEPIY1qMICyMJtCQSB4wv2czjw\nC3mla8E6nAzcEA4+jAU/HLiJG8IAbMRW6ZLgq8S8e8BOPGM4cDtSDLqboQD4\neMV8m8VXkAV47MMeDMJP9SmLiw82oAOpicThm8IHXL6BSgEn/4AHhbAsaRLH\nMSG/e3vBjojHWRADeowFg9DHEMO9DmADDjAK1ZCaLknAhZzGaoyl3IALXHAC\nMry0cjwR8juwz0sN1OBs3HDJlpwFl8DLvMrJnqKpUADKIUoKD1DGpVzAZ3vI\nWKoIxNDKr0yysRy/dKzDP3BTChADunzJlxAOygDMJkQANlAGmMCk+CDI0KiV\nBYzGh9zEOmcDRPCEjEwlI3IACtARkmzB1JBRs9AN3KDN2mzJZQDOJRQGNmAH\nDSuiyhCYL2jGKIzKCMxmdwCFRMDIb9xo07y8V1y/14wXVxADIA3QWRDEBF0t\nBi0CAOwKgDkCmmjGpzy+anwPvbjIJ//gyBitvLNswRmVVewQ0iL9yyVt0PVA\nAIsLBfVJytK4zuXQzknADIZoiIVABNEsx8vWvN/6vJRmU6vw0T4tsyWtOvxn\nA+EABQCgpID8gqh5lQ6dxGR4yIrgi78o01MdyVY9sJ+QCd+ARlmVzT490F8N\nMTEQ1gwQDiGwPh260i2dzJ3Yu8eAO/fw2BVwD408w7UAEv9mqyubQBe1Q/98\nCCA9A38NMSLAf4JtAyFw2Gnd0Il9wmKotm0Q10o5j41svFQtc/M7CwmU1/ZU\nC559CLrwC6FdLSFA2sR9pB5anw4dvlUZDyE5j/SINKBb2RRx2ZldHUxyFxwQ\nA70d3NUCBa7/QtyljdrIvdZj6AFKGQ/oTY84YA8PnCb3ON11PQv0dN0QgA1X\noAuH4Fvc7SkIwABcC97hfdiIvdrgSwnOrd72QAkGDsHSnRDD57wS0g4NcAVb\ncN1bkAKHcAh+vd95cL3+DeABPp+pjcybeAnojQMobg8JTgmqQAlSrAjSHb8q\nOwvT0QDocOMTQAJ6UARk4M+HANr77SnY6+Egrn/tdKTjHY2LkOIqruCq8OR2\n8MYk6ScqSyiGQAI3fuNRsOVRMAEKcAjAHeT+cARD/t8g3k5HLuJHLQMMYA/r\nreAsbhv48QCUYD8NDnmSR+MF0At/YARGoOXoEAW8QAscMARhHNwh/1DmHm7m\nxZ3mxw2Y1rDicY4ft/EAlp4tlS3LkndD3ODnfp7lW14EW7AHYu4pg9C6Zc5/\njE7a+4fkad3iTy7nlW4KtC4N9hAAU47nR1IAwtAMno4Of77labQHrVDqYWC9\nis61qx7i83kIsU7plk7rppAI1G4K0UCSDp4JbgAdJNAMvv7pOL4YViAPpe4P\n+pvsy87qrT6ftQHtiUPr1K4M+9EC9nDnlOYDg+EDf+Dt3/7n6EALi0EL+VDu\nD4DsqI69ql7kjo4F7r4IpiAN8T7vjdAIdmDv74DvPsAN/O7tv14EiUECUQAC\npV4G+ovsqf7hAH6a1jDr8E7tLaAbE+8FMv//3n6S79MwBDuw7xzv6e2gGBMQ\nBadQ6gSABQ5AAA4gAodg8kOe8GduCu8O8S7/8jHfH5/HDiWRDH6QA9hwK4PB\nDfbyBLRAAtPxDbaw5X0g5mlwCXzsMwgABUdw8Aif7ocg7fEu9VP/eUPwCmDw\nAzPxA+TgBxgQ+BBgMpUjKNQR6FEwB6WuDJdw6AAQuMnO9KQNI3UP8x0DQHoP\nBmBABnuxEH4f+KAP+LitPNNRDFq+DCN/CSQt3Psb+fyXBZU/8ZevA5mv+Zqf\nAz/AED+gBeQA+r4f+DkAAShTBKAu8kFOAOFQDQV97oqu6o0g8TFP+7Vv+5Ug\nC9+q+1PQ+7//+1n/DwFF4O/osAFiDgB4DNT+UPDWC/lljgV23zF5b/vwXwny\njw3f+hE/kP1TsP36/wxNABBNeEVBp87fQYQJFS5k2NBOjGoEwvxKSOASFowZ\nscDgyHFIo0ZehrwCU9JkyUopK8nKlIkHP379+P2YMoUcBpw5deZ8RohQE6Cn\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                    filename: "rails_logo.gif"
                summary: "Create a new product image with a metafield"
      summary: "Create a new product image"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#create-unstable"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_products_param_product_id_images"
  /admin/api/unstable/products/{product_id}/images/count.json:
    get:
      summary: "Get a count of all product images"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#count-unstable"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID"
          schema: {}
          required: false
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_products_param_product_id_images_count"
  /admin/api/unstable/products/{product_id}/images/{image_id}.json:
    get:
      summary: "Get a single product image by id"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#show-unstable"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "path"
          name: "image_id"
          required: true
          schema:
            type: "string"
          description: "image_id"
        - in: "query"
          name: "fields"
          description: "comma-separated list of fields to include in the response"
          schema: {}
          required: false
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_products_param_product_id_images_param_image_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  image:
                    id: 850703190
                    position: 2
                    alt: "new alt tag content"
                summary: "Modify an image; change its position and alt tag content"
              example2:
                value:
                  image:
                    id: 850703190
                    metafields:
                      - key: "my_new_metafield"
                        value: "my_new_value"
                        value_type: "string"
                        namespace: "tags"
                summary: "Modify an image; add a metafield"
              example3:
                value:
                  image:
                    id: 850703190
                    variant_ids:
                      - 808950810
                      - 457924702
                summary: "Modify an image; add it to product variants"
      summary: "Modify an existing product image"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#update-unstable"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "path"
          name: "image_id"
          required: true
          schema:
            type: "string"
          description: "image_id"
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_products_param_product_id_images_param_image_id"
    delete:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/product-image#destroy-unstable"
      parameters:
        - in: "path"
          name: "product_id"
          required: true
          schema:
            type: "string"
          description: "product_id"
        - in: "path"
          name: "image_id"
          required: true
          schema:
            type: "string"
          description: "image_id"
      tags:
        - "products"
        - "product-image"
        - "products/product-image"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_products_param_product_id_images_param_image_id"
  /admin/api/2020-01/smart_collections.json:
    get:
      summary: "Retrieves a list of smart collections. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#index-2020-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "The number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "ids"
          description: "Show only the smart collections specified by a comma-separated list of IDs."
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "title"
          description: "Show smart collections with the specified title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Show smart collections that includes the specified product."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Filter results by smart collection handle."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show smart collections last updated after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show smart collections last updated before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show smart collections published after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show smart collections published before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Filter results based on the published status of smart collections.\n                  (default: any)\n                    \n                        published: Show only published smart collections.\n                        unpublished: Show only unpublished smart collections.\n                        any: Show all smart collections."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_smart_collections"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  smart_collection:
                    title: "IPods"
                    rules:
                      - column: "title"
                        relation: "starts_with"
                        condition: "iPod"
                summary: "Create a smart collection of all products starting with the specified term"
              example2:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                summary: "Create a smart collection with a specified title"
              example3:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                    published: false
                summary: "Create a new unpublished smart collection"
              example4:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                    image:
                      attachment: "R0lGODlhAQABAIAAAAAAAAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==\n"
                      alt: "iPod"
                summary: "Create a new smart collection with a base64 encoded image"
              example5:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                    image:
                      src: "http://example.com/rails_logo.gif"
                      alt: "Rails Logo"
                summary: "Create a new smart collection with an image that will be downloaded by Shopify"
              example6:
                value:
                  smart_collection:
                    body: "foobar"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                summary: "Creating a smart collection without a title will return an error"
      summary: "Creates a new smart collection using the specified rules."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#create-2020-01"
      parameters: []
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_smart_collections"
  /admin/api/2020-01/smart_collections/count.json:
    get:
      summary: "Retrieves a count of smart collections"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#count-2020-01"
      parameters:
        - in: "query"
          name: "title"
          description: "Show smart collections with the specified title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Show smart collections that include the specified product."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show smart collections last updated after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show smart collections last updated before this date.  (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show smart collections published after this date.  (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show smart collections published before this date.  (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Filter results based on the published status of smart collections.\n                  (default: any)\n                    \n                        published: Show only published smart collections.\n                        unpublished: Show only unpublished smart collections.\n                        any: Show all smart collections."
          schema: {}
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_smart_collections_count"
  /admin/api/2020-01/smart_collections/{smart_collection_id}.json:
    get:
      summary: "Retrieves a single smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#show-2020-01"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_smart_collections_param_smart_collection_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  smart_collection:
                    id: 482865238
                    body_html: "<p>5000 songs in your pocket</p>"
                summary: "Update the description of a smart collection"
              example2:
                value:
                  smart_collection:
                    id: 482865238
                    published: true
                summary: "Publish a hidden collection"
              example3:
                value:
                  smart_collection:
                    id: 482865238
                    published: false
                summary: "Hide a published smart collection"
              example4:
                value:
                  smart_collection:
                    id: 482865238
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                      alt: "Rails logo"
                summary: "Update a smart collection by setting a new collection image"
              example5:
                value:
                  smart_collection:
                    id: 482865238
                    image:
                      alt: "Rails logo"
                summary: "Update a smart collection by setting a new collection image alternative text"
              example6:
                value:
                  smart_collection:
                    id: 482865238
                    image: ""
                    handle: "smart-ipods"
                    title: "Smart iPods"
                    updated_at: "2020-11-04T16:20:22-05:00"
                    body_html: "<p>The best selling ipod ever</p>"
                    published_at: "2008-02-01T19:00:00-05:00"
                    sort_order: "manual"
                    template_suffix: null
                    disjunctive: false
                    rules:
                      - column: "type"
                        relation: "equals"
                        condition: "Cult Products"
                    published_scope: "web"
                    admin_graphql_api_id: "gid://shopify/Collection/482865238"
                summary: "Update a smart collection by clearing the collection image"
      summary: "Updates an existing smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#update-2020-01"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_smart_collections_param_smart_collection_id"
    delete:
      summary: "Removes a smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#destroy-2020-01"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_smart_collections_param_smart_collection_id"
  /admin/api/2020-01/smart_collections/{smart_collection_id}/order.json:
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Update manually-sorted products in the smart collection"
              example2:
                value: {}
                summary: "Update the type of ordering applied to the smart collection"
      summary: "Updates the ordering type of products in a smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#order-2020-01"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
        - in: "query"
          name: "products"
          description: "An array of product IDs, in the order that you want them to appear at the top of the collection. When products is specified but empty, any previously sorted products are cleared."
          schema: {}
          required: false
        - in: "query"
          name: "sort_order"
          description: "The type of sorting to apply. Valid values are listed in the Properties section above.\n                  (default: (current value))"
          schema: {}
          required: false
        - in: "query"
          name: "products[]"
          schema:
            type: "integer"
          description: "products[]"
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_smart_collections_param_smart_collection_id_order"
  /admin/api/2020-04/smart_collections.json:
    get:
      summary: "Retrieves a list of smart collections. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#index-2020-04"
      parameters:
        - in: "query"
          name: "limit"
          description: "The number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "ids"
          description: "Show only the smart collections specified by a comma-separated list of IDs."
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "title"
          description: "Show smart collections with the specified title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Show smart collections that includes the specified product."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Filter results by smart collection handle."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show smart collections last updated after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show smart collections last updated before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show smart collections published after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show smart collections published before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Filter results based on the published status of smart collections.\n                  (default: any)\n                    \n                        published: Show only published smart collections.\n                        unpublished: Show only unpublished smart collections.\n                        any: Show all smart collections."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_smart_collections"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  smart_collection:
                    title: "IPods"
                    rules:
                      - column: "title"
                        relation: "starts_with"
                        condition: "iPod"
                summary: "Create a smart collection of all products starting with the specified term"
              example2:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                summary: "Create a smart collection with a specified title"
              example3:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                    published: false
                summary: "Create a new unpublished smart collection"
              example4:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                    image:
                      attachment: "R0lGODlhAQABAIAAAAAAAAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==\n"
                      alt: "iPod"
                summary: "Create a new smart collection with a base64 encoded image"
              example5:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                    image:
                      src: "http://example.com/rails_logo.gif"
                      alt: "Rails Logo"
                summary: "Create a new smart collection with an image that will be downloaded by Shopify"
              example6:
                value:
                  smart_collection:
                    body: "foobar"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                summary: "Creating a smart collection without a title will return an error"
      summary: "Creates a new smart collection using the specified rules."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#create-2020-04"
      parameters: []
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_smart_collections"
  /admin/api/2020-04/smart_collections/count.json:
    get:
      summary: "Retrieves a count of smart collections"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#count-2020-04"
      parameters:
        - in: "query"
          name: "title"
          description: "Show smart collections with the specified title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Show smart collections that include the specified product."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show smart collections last updated after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show smart collections last updated before this date.  (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show smart collections published after this date.  (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show smart collections published before this date.  (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Filter results based on the published status of smart collections.\n                  (default: any)\n                    \n                        published: Show only published smart collections.\n                        unpublished: Show only unpublished smart collections.\n                        any: Show all smart collections."
          schema: {}
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_smart_collections_count"
  /admin/api/2020-04/smart_collections/{smart_collection_id}.json:
    get:
      summary: "Retrieves a single smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#show-2020-04"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_smart_collections_param_smart_collection_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  smart_collection:
                    id: 482865238
                    body_html: "<p>5000 songs in your pocket</p>"
                summary: "Update the description of a smart collection"
              example2:
                value:
                  smart_collection:
                    id: 482865238
                    published: true
                summary: "Publish a hidden collection"
              example3:
                value:
                  smart_collection:
                    id: 482865238
                    published: false
                summary: "Hide a published smart collection"
              example4:
                value:
                  smart_collection:
                    id: 482865238
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                      alt: "Rails logo"
                summary: "Update a smart collection by setting a new collection image"
              example5:
                value:
                  smart_collection:
                    id: 482865238
                    image:
                      alt: "Rails logo"
                summary: "Update a smart collection by setting a new collection image alternative text"
              example6:
                value:
                  smart_collection:
                    id: 482865238
                    image: ""
                    handle: "smart-ipods"
                    title: "Smart iPods"
                    updated_at: "2020-11-04T16:20:22-05:00"
                    body_html: "<p>The best selling ipod ever</p>"
                    published_at: "2008-02-01T19:00:00-05:00"
                    sort_order: "manual"
                    template_suffix: null
                    disjunctive: false
                    rules:
                      - column: "type"
                        relation: "equals"
                        condition: "Cult Products"
                    published_scope: "web"
                    admin_graphql_api_id: "gid://shopify/Collection/482865238"
                summary: "Update a smart collection by clearing the collection image"
      summary: "Updates an existing smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#update-2020-04"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_smart_collections_param_smart_collection_id"
    delete:
      summary: "Removes a smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#destroy-2020-04"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_smart_collections_param_smart_collection_id"
  /admin/api/2020-04/smart_collections/{smart_collection_id}/order.json:
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Update manually-sorted products in the smart collection"
              example2:
                value: {}
                summary: "Update the type of ordering applied to the smart collection"
      summary: "Updates the ordering type of products in a smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#order-2020-04"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
        - in: "query"
          name: "products"
          description: "An array of product IDs, in the order that you want them to appear at the top of the collection. When products is specified but empty, any previously sorted products are cleared."
          schema: {}
          required: false
        - in: "query"
          name: "sort_order"
          description: "The type of sorting to apply. Valid values are listed in the Properties section above.\n                  (default: (current value))"
          schema: {}
          required: false
        - in: "query"
          name: "products[]"
          schema:
            type: "integer"
          description: "products[]"
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_smart_collections_param_smart_collection_id_order"
  /admin/api/2020-07/smart_collections.json:
    get:
      summary: "Retrieves a list of smart collections. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#index-2020-07"
      parameters:
        - in: "query"
          name: "limit"
          description: "The number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "ids"
          description: "Show only the smart collections specified by a comma-separated list of IDs."
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "title"
          description: "Show smart collections with the specified title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Show smart collections that includes the specified product."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Filter results by smart collection handle."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show smart collections last updated after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show smart collections last updated before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show smart collections published after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show smart collections published before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Filter results based on the published status of smart collections.\n                  (default: any)\n                    \n                        published: Show only published smart collections.\n                        unpublished: Show only unpublished smart collections.\n                        any: Show all smart collections."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_smart_collections"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  smart_collection:
                    title: "IPods"
                    rules:
                      - column: "title"
                        relation: "starts_with"
                        condition: "iPod"
                summary: "Create a smart collection of all products starting with the specified term"
              example2:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                summary: "Create a smart collection with a specified title"
              example3:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                    published: false
                summary: "Create a new unpublished smart collection"
              example4:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                    image:
                      attachment: "R0lGODlhAQABAIAAAAAAAAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==\n"
                      alt: "iPod"
                summary: "Create a new smart collection with a base64 encoded image"
              example5:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                    image:
                      src: "http://example.com/rails_logo.gif"
                      alt: "Rails Logo"
                summary: "Create a new smart collection with an image that will be downloaded by Shopify"
              example6:
                value:
                  smart_collection:
                    body: "foobar"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                summary: "Creating a smart collection without a title will return an error"
      summary: "Creates a new smart collection using the specified rules."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#create-2020-07"
      parameters: []
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_smart_collections"
  /admin/api/2020-07/smart_collections/count.json:
    get:
      summary: "Retrieves a count of smart collections"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#count-2020-07"
      parameters:
        - in: "query"
          name: "title"
          description: "Show smart collections with the specified title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Show smart collections that include the specified product."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show smart collections last updated after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show smart collections last updated before this date.  (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show smart collections published after this date.  (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show smart collections published before this date.  (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Filter results based on the published status of smart collections.\n                  (default: any)\n                    \n                        published: Show only published smart collections.\n                        unpublished: Show only unpublished smart collections.\n                        any: Show all smart collections."
          schema: {}
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_smart_collections_count"
  /admin/api/2020-07/smart_collections/{smart_collection_id}.json:
    get:
      summary: "Retrieves a single smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#show-2020-07"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_smart_collections_param_smart_collection_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  smart_collection:
                    id: 482865238
                    body_html: "<p>5000 songs in your pocket</p>"
                summary: "Update the description of a smart collection"
              example2:
                value:
                  smart_collection:
                    id: 482865238
                    published: true
                summary: "Publish a hidden collection"
              example3:
                value:
                  smart_collection:
                    id: 482865238
                    published: false
                summary: "Hide a published smart collection"
              example4:
                value:
                  smart_collection:
                    id: 482865238
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                      alt: "Rails logo"
                summary: "Update a smart collection by setting a new collection image"
              example5:
                value:
                  smart_collection:
                    id: 482865238
                    image:
                      alt: "Rails logo"
                summary: "Update a smart collection by setting a new collection image alternative text"
              example6:
                value:
                  smart_collection:
                    id: 482865238
                    image: ""
                    handle: "smart-ipods"
                    title: "Smart iPods"
                    updated_at: "2020-11-04T16:20:22-05:00"
                    body_html: "<p>The best selling ipod ever</p>"
                    published_at: "2008-02-01T19:00:00-05:00"
                    sort_order: "manual"
                    template_suffix: null
                    disjunctive: false
                    rules:
                      - column: "type"
                        relation: "equals"
                        condition: "Cult Products"
                    published_scope: "web"
                    admin_graphql_api_id: "gid://shopify/Collection/482865238"
                summary: "Update a smart collection by clearing the collection image"
      summary: "Updates an existing smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#update-2020-07"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_smart_collections_param_smart_collection_id"
    delete:
      summary: "Removes a smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#destroy-2020-07"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_smart_collections_param_smart_collection_id"
  /admin/api/2020-07/smart_collections/{smart_collection_id}/order.json:
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Update manually-sorted products in the smart collection"
              example2:
                value: {}
                summary: "Update the type of ordering applied to the smart collection"
      summary: "Updates the ordering type of products in a smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#order-2020-07"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
        - in: "query"
          name: "products"
          description: "An array of product IDs, in the order that you want them to appear at the top of the collection. When products is specified but empty, any previously sorted products are cleared."
          schema: {}
          required: false
        - in: "query"
          name: "sort_order"
          description: "The type of sorting to apply. Valid values are listed in the Properties section above.\n                  (default: (current value))"
          schema: {}
          required: false
        - in: "query"
          name: "products[]"
          schema:
            type: "integer"
          description: "products[]"
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_smart_collections_param_smart_collection_id_order"
  /admin/api/2020-10/smart_collections.json:
    get:
      summary: "Retrieves a list of smart collections. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#index-2020-10"
      parameters:
        - in: "query"
          name: "limit"
          description: "The number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "ids"
          description: "Show only the smart collections specified by a comma-separated list of IDs."
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "title"
          description: "Show smart collections with the specified title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Show smart collections that includes the specified product."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Filter results by smart collection handle."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show smart collections last updated after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show smart collections last updated before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show smart collections published after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show smart collections published before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Filter results based on the published status of smart collections.\n                  (default: any)\n                    \n                        published: Show only published smart collections.\n                        unpublished: Show only unpublished smart collections.\n                        any: Show all smart collections."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_smart_collections"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  smart_collection:
                    title: "IPods"
                    rules:
                      - column: "title"
                        relation: "starts_with"
                        condition: "iPod"
                summary: "Create a smart collection of all products starting with the specified term"
              example2:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                summary: "Create a smart collection with a specified title"
              example3:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                    published: false
                summary: "Create a new unpublished smart collection"
              example4:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                    image:
                      attachment: "R0lGODlhAQABAIAAAAAAAAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==\n"
                      alt: "iPod"
                summary: "Create a new smart collection with a base64 encoded image"
              example5:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                    image:
                      src: "http://example.com/rails_logo.gif"
                      alt: "Rails Logo"
                summary: "Create a new smart collection with an image that will be downloaded by Shopify"
              example6:
                value:
                  smart_collection:
                    body: "foobar"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                summary: "Creating a smart collection without a title will return an error"
      summary: "Creates a new smart collection using the specified rules."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#create-2020-10"
      parameters: []
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_smart_collections"
  /admin/api/2020-10/smart_collections/count.json:
    get:
      summary: "Retrieves a count of smart collections"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#count-2020-10"
      parameters:
        - in: "query"
          name: "title"
          description: "Show smart collections with the specified title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Show smart collections that include the specified product."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show smart collections last updated after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show smart collections last updated before this date.  (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show smart collections published after this date.  (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show smart collections published before this date.  (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Filter results based on the published status of smart collections.\n                  (default: any)\n                    \n                        published: Show only published smart collections.\n                        unpublished: Show only unpublished smart collections.\n                        any: Show all smart collections."
          schema: {}
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_smart_collections_count"
  /admin/api/2020-10/smart_collections/{smart_collection_id}.json:
    get:
      summary: "Retrieves a single smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#show-2020-10"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_smart_collections_param_smart_collection_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  smart_collection:
                    id: 482865238
                    body_html: "<p>5000 songs in your pocket</p>"
                summary: "Update the description of a smart collection"
              example2:
                value:
                  smart_collection:
                    id: 482865238
                    published: true
                summary: "Publish a hidden collection"
              example3:
                value:
                  smart_collection:
                    id: 482865238
                    published: false
                summary: "Hide a published smart collection"
              example4:
                value:
                  smart_collection:
                    id: 482865238
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                      alt: "Rails logo"
                summary: "Update a smart collection by setting a new collection image"
              example5:
                value:
                  smart_collection:
                    id: 482865238
                    image:
                      alt: "Rails logo"
                summary: "Update a smart collection by setting a new collection image alternative text"
              example6:
                value:
                  smart_collection:
                    id: 482865238
                    image: ""
                    handle: "smart-ipods"
                    title: "Smart iPods"
                    updated_at: "2020-11-04T16:20:22-05:00"
                    body_html: "<p>The best selling ipod ever</p>"
                    published_at: "2008-02-01T19:00:00-05:00"
                    sort_order: "manual"
                    template_suffix: null
                    disjunctive: false
                    rules:
                      - column: "type"
                        relation: "equals"
                        condition: "Cult Products"
                    published_scope: "web"
                    admin_graphql_api_id: "gid://shopify/Collection/482865238"
                summary: "Update a smart collection by clearing the collection image"
      summary: "Updates an existing smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#update-2020-10"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_smart_collections_param_smart_collection_id"
    delete:
      summary: "Removes a smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#destroy-2020-10"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_smart_collections_param_smart_collection_id"
  /admin/api/2020-10/smart_collections/{smart_collection_id}/order.json:
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Update manually-sorted products in the smart collection"
              example2:
                value: {}
                summary: "Update the type of ordering applied to the smart collection"
      summary: "Updates the ordering type of products in a smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#order-2020-10"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
        - in: "query"
          name: "products"
          description: "An array of product IDs, in the order that you want them to appear at the top of the collection. When products is specified but empty, any previously sorted products are cleared."
          schema: {}
          required: false
        - in: "query"
          name: "sort_order"
          description: "The type of sorting to apply. Valid values are listed in the Properties section above.\n                  (default: (current value))"
          schema: {}
          required: false
        - in: "query"
          name: "products[]"
          schema:
            type: "integer"
          description: "products[]"
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_smart_collections_param_smart_collection_id_order"
  /admin/api/2021-01/smart_collections.json:
    get:
      summary: "Retrieves a list of smart collections. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#index-2021-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "The number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "ids"
          description: "Show only the smart collections specified by a comma-separated list of IDs."
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "title"
          description: "Show smart collections with the specified title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Show smart collections that includes the specified product."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Filter results by smart collection handle."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show smart collections last updated after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show smart collections last updated before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show smart collections published after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show smart collections published before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Filter results based on the published status of smart collections.\n                  (default: any)\n                    \n                        published: Show only published smart collections.\n                        unpublished: Show only unpublished smart collections.\n                        any: Show all smart collections."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_smart_collections"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  smart_collection:
                    title: "IPods"
                    rules:
                      - column: "title"
                        relation: "starts_with"
                        condition: "iPod"
                summary: "Create a smart collection of all products starting with the specified term"
              example2:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                summary: "Create a smart collection with a specified title"
              example3:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                    published: false
                summary: "Create a new unpublished smart collection"
              example4:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                    image:
                      attachment: "R0lGODlhAQABAIAAAAAAAAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==\n"
                      alt: "iPod"
                summary: "Create a new smart collection with a base64 encoded image"
              example5:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                    image:
                      src: "http://example.com/rails_logo.gif"
                      alt: "Rails Logo"
                summary: "Create a new smart collection with an image that will be downloaded by Shopify"
              example6:
                value:
                  smart_collection:
                    body: "foobar"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                summary: "Creating a smart collection without a title will return an error"
      summary: "Creates a new smart collection using the specified rules."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#create-2021-01"
      parameters: []
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_smart_collections"
  /admin/api/2021-01/smart_collections/count.json:
    get:
      summary: "Retrieves a count of smart collections"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#count-2021-01"
      parameters:
        - in: "query"
          name: "title"
          description: "Show smart collections with the specified title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Show smart collections that include the specified product."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show smart collections last updated after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show smart collections last updated before this date.  (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show smart collections published after this date.  (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show smart collections published before this date.  (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Filter results based on the published status of smart collections.\n                  (default: any)\n                    \n                        published: Show only published smart collections.\n                        unpublished: Show only unpublished smart collections.\n                        any: Show all smart collections."
          schema: {}
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_smart_collections_count"
  /admin/api/2021-01/smart_collections/{smart_collection_id}.json:
    get:
      summary: "Retrieves a single smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#show-2021-01"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_smart_collections_param_smart_collection_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  smart_collection:
                    id: 482865238
                    body_html: "<p>5000 songs in your pocket</p>"
                summary: "Update the description of a smart collection"
              example2:
                value:
                  smart_collection:
                    id: 482865238
                    published: true
                summary: "Publish a hidden collection"
              example3:
                value:
                  smart_collection:
                    id: 482865238
                    published: false
                summary: "Hide a published smart collection"
              example4:
                value:
                  smart_collection:
                    id: 482865238
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\n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\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                      alt: "Rails logo"
                summary: "Update a smart collection by setting a new collection image"
              example5:
                value:
                  smart_collection:
                    id: 482865238
                    image:
                      alt: "Rails logo"
                summary: "Update a smart collection by setting a new collection image alternative text"
              example6:
                value:
                  smart_collection:
                    id: 482865238
                    image: ""
                    handle: "smart-ipods"
                    title: "Smart iPods"
                    updated_at: "2020-11-04T16:20:22-05:00"
                    body_html: "<p>The best selling ipod ever</p>"
                    published_at: "2008-02-01T19:00:00-05:00"
                    sort_order: "manual"
                    template_suffix: null
                    disjunctive: false
                    rules:
                      - column: "type"
                        relation: "equals"
                        condition: "Cult Products"
                    published_scope: "web"
                    admin_graphql_api_id: "gid://shopify/Collection/482865238"
                summary: "Update a smart collection by clearing the collection image"
      summary: "Updates an existing smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#update-2021-01"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_smart_collections_param_smart_collection_id"
    delete:
      summary: "Removes a smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#destroy-2021-01"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_smart_collections_param_smart_collection_id"
  /admin/api/2021-01/smart_collections/{smart_collection_id}/order.json:
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Update manually-sorted products in the smart collection"
              example2:
                value: {}
                summary: "Update the type of ordering applied to the smart collection"
      summary: "Updates the ordering type of products in a smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#order-2021-01"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
        - in: "query"
          name: "products"
          description: "An array of product IDs, in the order that you want them to appear at the top of the collection. When products is specified but empty, any previously sorted products are cleared."
          schema: {}
          required: false
        - in: "query"
          name: "sort_order"
          description: "The type of sorting to apply. Valid values are listed in the Properties section above.\n                  (default: (current value))"
          schema: {}
          required: false
        - in: "query"
          name: "products[]"
          schema:
            type: "integer"
          description: "products[]"
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_smart_collections_param_smart_collection_id_order"
  /admin/api/unstable/smart_collections.json:
    get:
      summary: "Retrieves a list of smart collections. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#index-unstable"
      parameters:
        - in: "query"
          name: "limit"
          description: "The number of results to show.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "ids"
          description: "Show only the smart collections specified by a comma-separated list of IDs."
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "title"
          description: "Show smart collections with the specified title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Show smart collections that includes the specified product."
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Filter results by smart collection handle."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show smart collections last updated after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show smart collections last updated before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show smart collections published after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show smart collections published before this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Filter results based on the published status of smart collections.\n                  (default: any)\n                    \n                        published: Show only published smart collections.\n                        unpublished: Show only unpublished smart collections.\n                        any: Show all smart collections."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_smart_collections"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  smart_collection:
                    title: "IPods"
                    rules:
                      - column: "title"
                        relation: "starts_with"
                        condition: "iPod"
                summary: "Create a smart collection of all products starting with the specified term"
              example2:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                summary: "Create a smart collection with a specified title"
              example3:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                    published: false
                summary: "Create a new unpublished smart collection"
              example4:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                    image:
                      attachment: "R0lGODlhAQABAIAAAAAAAAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==\n"
                      alt: "iPod"
                summary: "Create a new smart collection with a base64 encoded image"
              example5:
                value:
                  smart_collection:
                    title: "Macbooks"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                    image:
                      src: "http://example.com/rails_logo.gif"
                      alt: "Rails Logo"
                summary: "Create a new smart collection with an image that will be downloaded by Shopify"
              example6:
                value:
                  smart_collection:
                    body: "foobar"
                    rules:
                      - column: "vendor"
                        relation: "equals"
                        condition: "Apple"
                summary: "Creating a smart collection without a title will return an error"
      summary: "Creates a new smart collection using the specified rules."
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#create-unstable"
      parameters: []
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_smart_collections"
  /admin/api/unstable/smart_collections/count.json:
    get:
      summary: "Retrieves a count of smart collections"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#count-unstable"
      parameters:
        - in: "query"
          name: "title"
          description: "Show smart collections with the specified title."
          schema: {}
          required: false
        - in: "query"
          name: "product_id"
          description: "Show smart collections that include the specified product."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show smart collections last updated after this date. (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show smart collections last updated before this date.  (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_min"
          description: "Show smart collections published after this date.  (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_at_max"
          description: "Show smart collections published before this date.  (format: 2014-04-25T16:15:47-04:00)"
          schema: {}
          required: false
        - in: "query"
          name: "published_status"
          description: "Filter results based on the published status of smart collections.\n                  (default: any)\n                    \n                        published: Show only published smart collections.\n                        unpublished: Show only unpublished smart collections.\n                        any: Show all smart collections."
          schema: {}
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_smart_collections_count"
  /admin/api/unstable/smart_collections/{smart_collection_id}.json:
    get:
      summary: "Retrieves a single smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#show-unstable"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_smart_collections_param_smart_collection_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  smart_collection:
                    id: 482865238
                    body_html: "<p>5000 songs in your pocket</p>"
                summary: "Update the description of a smart collection"
              example2:
                value:
                  smart_collection:
                    id: 482865238
                    published: true
                summary: "Publish a hidden collection"
              example3:
                value:
                  smart_collection:
                    id: 482865238
                    published: false
                summary: "Hide a published smart collection"
              example4:
                value:
                  smart_collection:
                    id: 482865238
                    image:
                      attachment: "R0lGODlhbgCMAPf/APbr48VySrxTO7IgKt2qmKQdJeK8lsFjROG5p/nz7Zg3\nMNmnd7Q1MLNVS9GId71hSJMZIuzTu4UtKbeEeakhKMl8U8WYjfr18YQaIbAf\nKKwhKdKzqpQtLebFortOOejKrOjZ1Mt7aMNpVbAqLLV7bsNqR+3WwMqEWenN\nsZYxL/Ddy/Pm2e7ZxLlUQrIjNPXp3bU5MbhENbEtLtqhj5ZQTfHh0bMxL7Ip\nNsNyUYkZIrZJPcqGdYIUHb5aPKkeJnoUHd2yiJkiLKYiKLRFOsyJXKVDO8up\nosFaS+TBnK4kKti5sNaYg/z49aqYl5kqLrljUtORfMOlo/36+H4ZH8yDYq0f\nKKFYTaU9MrY8MrZBNXwXHpgaIdGVYu/byLZNP9SaZLIyOuXCtHkpJst+Wpcm\nLMyCa8BfP9GMb9KQdPDd1PPk1sd5VP79/L5dQZ0bI9+ymqssK9WcfIoXHdzG\nxdWWfteib79lSr1YP86MYurQxKdcUKdMQr5ZSfPs6YEZH8uhl4oWIenMuurQ\nttmejaqoqsqBVaAcJLlJN5kvMLlZRMNsSL5fRak0LbdQQMVvSPjw6cJnRpkf\nKtmjhvfu5cJtT7IuOMVvWLY/M/37+o0YH9ibhtSYdObErc6HarM9NnYSGNGR\navLi09unje3WyeO8rsVrT7tdRtK3uffu6NWeaL9pTJIjJrM4NPbx8cdyX7M7\nPYYVHu7j4KgoNJAYIKtkV5o9MsOcldicis+RYNutfrhFOZ0hJbqinZ8bI8h5\nUObFuOfItJsfJrJfUOfIqc+PXqQtK8RnSbA4Mcd3Tm0SGbpXQ8aqp7RLNs+s\novHfzpVhV9iggMd1TLtbRKUdKXEQFsd4XrZRPLIgMZUeJ+jKvrAlK6AhJ65A\nMpMpKuC3j5obIsRwS7hAN8l/YtvDvnYXHbAoLI47SIUsOMenorF4gO/m4+fH\npo4vLZ8oKMukqp0cJbhVSMV2UuPR0bAfMLIrLrg/OcJwT8h+Vt+wn8eurLlh\nQrIfKHQOHHQOHf///////yH5BAEAAP8ALAAAAABuAIwAAAj/AP8JHDhQXjpz\n/PopXNiPn0OHDRMmbKhQIsOJFS1SxAhxI8SHFzVeDBnx48iNBAeeOkcxokeX\nFRdOnAlSokaaLXNujJkxo8iYHRkKtWkzZSsaOXkAWsoUECynsHgoqEW1qtVa\nU7Mq2Mq1K9cUW8GKTUG2rNkUHNByWMuWLdWva7t1W7UKG4S7eO/ycEhQHgaK\nsL4VGGyocGE3br5929KuxQFFkEtIlgypsuUDmDMfWGRmUZvPoEHfGU36jgDT\nLQSoVt3IQ2sPsL0IUNZGlZ0H0lo00jEkCytWMspdGzBgn/F9EBIWnKIQlqHB\nhA0bQpx48Z7UAkoEcMTdUeTJJSxf/4akOTNnzqHb3GkjrUdp0gKwq77jWdod\nO7dNKWvhRUcWT6zYQI82xB03AAQNCdTKX/xAAB10hfVCnRtbVIhIAy14oJoZ\nAXS4XXfdQaYIeOGJRx555Z1nRnrqqUeaMtIYY8dmn7Vg2yK57TYEgAzIQGBx\nxyXHj0A0OOTggxFKSN1iWwTTAIYanpYdMtFE4+GVIHrn3XeUmVhZeWiIMoOY\nnVQDGiTgKALJjIssIsADt0mjjI6+AXcDgQYi2M8/7ijEwzRIFmBIL9NVV+EW\nVzyZ4Wqj9RBABchQWeWkV3aY5ZYjjgieeKL446mnjxwAiZVpliAjZqblt19/\n/7HCwIAFGv+X3J4s9fMckoYhphiTQTwJ5Wqn9dDDAWuMUUEFviTrS6STVlmp\npVmKqCkOn34aB6TIBAAOJeHZAYl6ptixSCL8edGbq8HFeqBDcygEyIOCGqYk\nkxUW4euiq7knbA/gUDHGv//ec2wFayQbaQWinOCslVhmSUq1/gCDLJXacgtJ\nCYu4J66cjbAKoA3CxapnOgm9g+ughdK7xYX3Rinlvj2YYcYanVBBhTg2Axzw\nG4/4k4bBzDZbKRUQP1LIsRSX6sgBZtwhzQP68ccbj7AWty4/5igEoaC9dK3r\noVtgs4evvzKqb8wyQ0JFJzXXbDMVcQBQLTDGVmCssstKGs09oPT/jQcRoBw9\nMamKgEOeeg/gqBtvdVZSDnHFIQgRD4RxXWhiYEOQKNn4zncHzDIzHc0ZpHdy\nRicIQOypKDf7q3Pd96ABzSab+E1EIYIvS2o0ijA92gPZiCB1qwL+iJxL78Z7\n2NeHQrAK2YrCZva+bcgcujFUQIEG6WigonoCdLT9tr9UbIIAMMCEkkYacvvT\nxSgsBPKGJKBEAw4yjhx+hyn+PAJFfztyVdWOt5B3RehyimneFuwFvQxFyTSf\n25f1zCAqSFACDXTQ3gwSoDoElI5tZyBAINqnuhJ+Kg9vOIOaVnSHT5ECHucK\n0OMiBxJAPCdXmGseBLoBvei5rFEStB5m/yBhjFJUIw50oIMoLvCpFRAADduj\nwxvUYMIqmvARCBiDeiwRBk+lQQTEq5qQ3CWdJSkGAlu4y9h66EBgAbF6QhSV\nMUpQilKcQRNLwIenfpFEJebBioC0ohrQQJ8QhMIfSwhgj2YouYTYUEmGqhBe\nFNBDH5otgmgLnRyLWMdq0GEGCMCHJjSBjzQE8pSChMLTCJBI4pXDBeuiiA1T\nprK7PK+SUPphsIQ1wSEag5OUKIUlyiAmAowClci0YizKILUAFi+WDQEEJOmF\nxlnMYnOVbOP0gkjBTdZRmDiwhCuywcRkmtOEpHjC1DzBABto4xqN5AcgdEXN\nNO4Ql0+CB2xctv9LM2SSgpXhZB0t0QlT+iMUkzinQquFihD452P0gGdGAPGN\nHKYxjbOAwBpxqU9+ApGXQgyoQDWRgASwoAMGMMAHDrnQhc5AkQPSU0NgYVF7\nQmAWKcBnPvc5HwGcbUVxJCInEfACQXQACUhFQkqRwAIOttScv9ABO21wA8k1\np5Z3mYXYdNqAjvLzbHDUpFCNIQoUdGAdHUhrUg2gVAOg4AXmvEAaOPEGaCCA\nAASQxBtIYYIq5kEHAaKHVfsRGB3eNBPYxKdXGVWGUnAzdOSxgyg+MIxhoDWt\nal3rUlXABEBeYBQIiMMm0AAKPBBAE1A4nTjWEIAzvGEFqsvDEHqEjZj/wMKw\n1rwlVxerGkv4AxVoAOkEmXGMOKDgA8i1LFrRioSjKrWtKRVEQlXHBBSKQhLQ\nEG3tCHCLJaSWClD0zgHO8LBqDeIYNsDGTG4ryZtak4G7lZ6G2sBSfyCAaTK7\nAzfgQIEzoOC/yKVsZS+bWeim1BsdqEG10oCANxDgDZwIRHa3O4hbaA91nlKB\nKA7QBhHo0VPwCFBtAdNea86CZVztKk8FUN5PjQIHxKWABihQBkHY+L/HTa5l\nMetcAxvAG94wQAQAkA1SIIAUBvUHdkVLgBkMwrvkPSEkVtSCJ/yCAJ5gZ20l\nwgObziITGk3xTqUHhWoxYQVdAIYINMBmO0TA/8aCwHGOBbwOAvc4pXj2RieY\nIY69ttgfpJBEHOLQ5ArTAQ2SaPAb4lAC33XsoaxYhUx4kFVrZoKSYlYxbOzg\nPX8kAM1d6AILOuEDDQzBBCaIwJvhjOMAU7bOmE0qdMUhhFozQhVxiMWnuiAJ\nQTfZyahFQydWGwA1cbiZAJL0Qiht6UzoVsxetUQaJhEKZzhDBdh+A5s9AQxU\nq3rVN241ne0sa1rXWgjbqLUd3uqPUYhCFNDAxwzm3d3vjgF/vTvAHegUaYbw\nwMSZyAR8oX0I2BwiC2eoQQ2srYJA6IDNb2ABqr39bVYDWMfkRgIVzs1xdEOD\nCjhQ4nXlPe9BaOLQNf+rRjQc0eg2DM8TyvZTs3mY6Xwy4xI2YLMGdIAAhTvD\nFWzuhKhZIHGKq9riF381rDtQho53/Bjpboc1OiEJktMbtaplrbHboCOYT9rS\nOdhopocwgiRowOw6L0MNCKCBKjwA26IW9cRTXfE4i1vAlpUEHJze8XTXehvc\n2AQ05k3vDHaiDGNYeaPNoAzGxbwf/86EHDCd4kbsyBMySII2NH92nevg4TbI\nA7ZVEGqiF93ocLb7nIdhgGMIoROW4Dvft2GHOqQiDoM3+YWJnT8O7yYL3fgI\nDwK+CrFX0lwBctUxtLH55qNd5xkYxMKvDffSn/7b4L47JYQgjnW0XvZOv0L/\nKmz/BS5sIg5QvtkavDPlO/Am+FzOBCBqgU8veEJA9LCBDRjQznIw3/lJEIBs\n5gqhUIALN3rWR3QTh31IFwcUkAiV1QEOCH4ddw8LkAqpUH5cgAtnIGzikHgs\nxzSW1w3+Jgc0Bz32Rw8DoA3lQA8yIAP6xwoj4H//B4BJYAOjoAZqYIDWRn0J\nuIB1Z3fHQAGdgHeJQIEcxwwLQH5csIHEQARE4C9aRx49oAPw5ydyIHaANUPE\nwXwtmH/6Vw5iKIb/F4DaoAGisAIroIM7WG0MR3pDd3qoJwjVQAEUAAdvEGAG\nsHcUgITFgAtLmIFNiAtQeAInMAa+UGwiyAEW8QMc//AkgKUNx7EPkLOCLOiC\nNiADIzCDY0iDm2cHLxCKbNiGPueDcVh02McJ/GWHjfABxyUJdigEfUiB+pAL\ndVAHX1B+uPCERHAChSAw8QAOHMaIE6EF3MAKkjiJxlGJljgC+UcPm7iJnch8\nDJAHoRiKaqiDBRgK01d9LDB0QFiHdmiH1YACSDCE4ziLsscIdRCIGriLhfiL\naxAPOKAKtbARPFAFQKKMywg5XuiC9ACN0TiNOwAAAHCNL5CN2siN3QiHcYhq\nwCAD6WiHomAJEzmO4LcGueCOG4gLf2OIAjOPOHCPEEFT/KiMzKgNLigDABmN\nnKgL02aQB3mNCkmKB+iNCv+IBjI2Y+O4ihcZi063DcywkReYi04Yj/ewBmuA\nAyRYEbAAAVVwkv3oj9rwgizJks4okCMwCI+ACqgwCQaJkGq4hm3IjW8YakPn\nCWxmhzz5kxfJd3iwkUx4lL0ojw/QlAnxlG4glQYCOStplS8YkJuoCwnwCIY5\nCYgZljRJlqTYg9WnbTq3lm3plrGojrVWixuJgRpIDB95AgLTCCRYkjeVAXw5\nlfqXiVa5ks64QSVlmF8JljO5mAtplj4IdJE5YzpHmenYcXCwAHKJi7rIi74Y\nD7oQms1xU71QmpQ4AOVwmvoHmAH5ABcwna3pmompmAnJmDzIcGp5m2upmxMp\ni+f/Zg9AIJeCeJSG+ACHAH8OwWyzoJyUCIOnCYOAKQP4wATTeQElVZio8AiI\nCZtiSZbbuHAIUAXemZu5CZ4YyQ250KAXeJ6c2YsCYIUYwWyZUADK6QoEwAfO\nOZ8yoANSwAT4SZ37eZjXGZtjOZshoAFQ8HAHOo6TCZ5CgAfluYS4OIhPGA8C\n4AXBtxBP+WXvWZrZ4ClhYAkdmokzgAkhKqIjqp+GaaIyGaAL+XDOEAEueqC4\nGaNuKQTWAAQ1OpceCQktcAgcYFuHJQc+wJfhADFpsAPhcJpewAZKKgVL2qTV\n2ZUnKptqMApJ8ADVZqVYKpkKaodwEAflaYvAuYFE4HIe/8CIEWGhchCkJ7kE\nJQQAHGoDZcYGckqnTGqnhWmiALqYS5AEdGCAVmqgBvqiMqagquANX3qe8cCo\njpqX1iQHsAALaWogx5FkEBMO7URCmjqnTJqfJQql2LkClpAEwNCGahABapmq\nqqqgjAAE3uCgTFgC6tEIZVoRzCYHckBpJ+kBJoQA+xcCqrOpdeqpT/qf2JkF\nSQAPOdiGLoqq0QqeVOCqDUp+RMBh+7atDgELX+atPJCPKOkAJmQJ7fRH54oJ\nc7qk+amfn+qfsAkAKqB5SeAFo7CGwBCo3smWlMkMQPaqyAAJi2AaKTBpECB5\nUdFlKJk6qoMK/McHVsSwdFqnxP9aUv3JrgRghhcbCCswqp0XmdAamTtJmXHg\nqjWaCmqCIwJwsg/RrSvLA6R5HDIAAyJAAJ3mKQQAAwxwC4Akp8Iqog9bna+5\nA2V4g+kUgM/HZlUwtB2rparwYzWKB/nzAG3QtBVaq1HxA5+wl8cBA1iABTCg\nCyGgsK7Af1lrReiariTKn6ggAmTIfDfIAJuntt7pth2bjnAABHKbC74ADi13\nByfLrQG7sp/AA8dBD4EruIILAy0ABboAA66ATMHKqcMKsZ/aCNMouWrbu2vb\nthw7kdUgt3VgP41WsinwEPzwb7NgqzzwA3xrCMYBuKu7ujBwvTBAAOYEtrbr\nqQkwg5z/GLmVa7GWy7EJmo7ccGB4gAxp8i3SMLoNEXnOywOf8AmwsA/aUL3V\ni726QELJtLi3W1ICWQ7SGLm+67tCi6UeSwGb8GOFkC1L+74uAbAq+7z1Sw0F\nwACXcAmBy8H6O7sLxb22O52k4IwD2Yk0SL69a763KWOJgAQLACnFBgl267Qy\nV8H0+wnUgAEb3MMbrL/a+1SaWrNMSgpYqZUEPIY1qMICyMJtCQSB4wv2czjw\nC3mla8E6nAzcEA4+jAU/HLiJG8IAbMRW6ZLgq8S8e8BOPGM4cDtSDLqboQD4\neMV8m8VXkAV47MMeDMJP9SmLiw82oAOpicThm8IHXL6BSgEn/4AHhbAsaRLH\nMSG/e3vBjojHWRADeowFg9DHEMO9DmADDjAK1ZCaLknAhZzGaoyl3IALXHAC\nMry0cjwR8juwz0sN1OBs3HDJlpwFl8DLvMrJnqKpUADKIUoKD1DGpVzAZ3vI\nWKoIxNDKr0yysRy/dKzDP3BTChADunzJlxAOygDMJkQANlAGmMCk+CDI0KiV\nBYzGh9zEOmcDRPCEjEwlI3IACtARkmzB1JBRs9AN3KDN2mzJZQDOJRQGNmAH\nDSuiyhCYL2jGKIzKCMxmdwCFRMDIb9xo07y8V1y/14wXVxADIA3QWRDEBF0t\nBi0CAOwKgDkCmmjGpzy+anwPvbjIJ//gyBitvLNswRmVVewQ0iL9yyVt0PVA\nAIsLBfVJytK4zuXQzknADIZoiIVABNEsx8vWvN/6vJRmU6vw0T4tsyWtOvxn\nA+EABQCgpID8gqh5lQ6dxGR4yIrgi78o01MdyVY9sJ+QCd+ARlmVzT490F8N\nMTEQ1gwQDiGwPh260i2dzJ3Yu8eAO/fw2BVwD408w7UAEv9mqyubQBe1Q/98\nCCA9A38NMSLAf4JtAyFw2Gnd0Il9wmKotm0Q10o5j41svFQtc/M7CwmU1/ZU\nC559CLrwC6FdLSFA2sR9pB5anw4dvlUZDyE5j/SINKBb2RRx2ZldHUxyFxwQ\nA70d3NUCBa7/QtyljdrIvdZj6AFKGQ/oTY84YA8PnCb3ON11PQv0dN0QgA1X\noAuH4Fvc7SkIwABcC97hfdiIvdrgSwnOrd72QAkGDsHSnRDD57wS0g4NcAVb\ncN1bkAKHcAh+vd95cL3+DeABPp+pjcybeAnojQMobg8JTgmqQAlSrAjSHb8q\nOwvT0QDocOMTQAJ6UARk4M+HANr77SnY6+Egrn/tdKTjHY2LkOIqruCq8OR2\n8MYk6ScqSyiGQAI3fuNRsOVRMAEKcAjAHeT+cARD/t8g3k5HLuJHLQMMYA/r\nreAsbhv48QCUYD8NDnmSR+MF0At/YARGoOXoEAW8QAscMARhHNwh/1DmHm7m\nxZ3mxw2Y1rDicY4ft/EAlp4tlS3LkndD3ODnfp7lW14EW7AHYu4pg9C6Zc5/\njE7a+4fkad3iTy7nlW4KtC4N9hAAU47nR1IAwtAMno4Of77labQHrVDqYWC9\nis61qx7i83kIsU7plk7rppAI1G4K0UCSDp4JbgAdJNAMvv7pOL4YViAPpe4P\n+pvsy87qrT6ftQHtiUPr1K4M+9EC9nDnlOYDg+EDf+Dt3/7n6EALi0EL+VDu\nD4DsqI69ql7kjo4F7r4IpiAN8T7vjdAIdmDv74DvPsAN/O7tv14EiUECUQAC\npV4G+ovsqf7hAH6a1jDr8E7tLaAbE+8FMv//3n6S79MwBDuw7xzv6e2gGBMQ\nBadQ6gSABQ5AAA4gAodg8kOe8GduCu8O8S7/8jHfH5/HDiWRDH6QA9hwK4PB\nDfbyBLRAAtPxDbaw5X0g5mlwCXzsMwgABUdw8Aif7ocg7fEu9VP/eUPwCmDw\nAzPxA+TgBxgQ+BBgMpUjKNQR6FEwB6WuDJdw6AAQuMnO9KQNI3UP8x0DQHoP\nBmBABnuxEH4f+KAP+LitPNNRDFq+DCN/CSQt3Psb+fyXBZU/8ZevA5mv+Zqf\nAz/AED+gBeQA+r4f+DkAAShTBKAu8kFOAOFQDQV97oqu6o0g8TFP+7Vv+5Ug\nC9+q+1PQ+7//+1n/DwFF4O/osAFiDgB4DNT+UPDWC/lljgV23zF5b/vwXwny\njw3f+hE/kP1TsP36/wxNABBNeEVBp87fQYQJFS5k2NBOjGoEwvxKSOASFowZ\nscDgyHFIo0ZehrwCU9JkyUopK8nKlIkHP379+P2YMoUcBpw5deZ8RohQE6Cn\nGg4lOnRGDKRZsoS7pMPSA6YXNWLsKJLkSZOVwKhMGSTTrJf9ZNKcomXKTrQY\nevr02cSIvKJxi6aJkaVuXaZMs1ziO5UqPawnuXK9AWEW2Jhja9pMuzMd27YW\nLNga10fuZYUPkdZdqpTv575YbJQbkCHw1sEpb9wQMstwWLFkbfppjJPc/wTI\nhHhJ5r0BBGbMRzfb7ez5MwwbpTMsx5pa9eob2CBM5yETpmzGtTE8hrybN29b\nc1oBn6trc9K7nhmUy6BcOUrn0KHLcr0FQvWYMxdnb3w7t/fvwFMiFvKG0uw8\n4kRLYjkGG0RtMPlWc+GGdyCwbwtYrOsHu7K0a+K/AEO04K0CF8InBvPOg2GE\nKpZTrsHSUotwwgnnmW4LHGGBKbb9bMqhsSly082CW0QMkDLLSvQHFQFiOESX\nLGzQpkUY22swA8Lko9EFLqfBEcdvMhRrwx610OLHtJ5Rc01ahHnCzTeFkXNO\nOfWQkwQ6NNFzTz2X0GQJQAMVdJEYsBhBAyrbK/9tgBcbrCTCG7bkkstvvvwm\nzPzI7JEcNLXDCYICQhXVkAIMMdWQd0x1Y9VdiuHGA1hjhfWQQzyg9dZDYmBg\nyioSVfRKFwfYZ8ZIJ3XhGhe83OLSSwEZU78ea+pUO2wK8MFaUUMl9dReDOll\n1VXbuYIZWWOl1dZDLpGhV3YZXLTR9vZhUMJijUX2mmveYRZcQDLlsCZOp21s\nCx+uLTjbbE/11ttv3diFkSHKRReGcthtN1hgrdxH2Awk5fJefK+ZZ9lvVvXW\n2cT+ZSwHgdHCpmCYDb4WYVNL7baXbsN9FdYYbKDA4otddBdYeffZx9iPjw35\nmmlKNtnUfmXSNNqAW9b/6eWYY8YWYW0V7tYQhxWAwwege61y6OXkbdDoSUFe\nWuR3wP3akKhjUtlHlqklG+YqsjaY620VNgQDMcQQouwrX3zR6KKFZfttyKtw\n+utQnRUL2mjLYjnvtLDpu9e9/ZYZ8FK3maLwwn8OmlF3lWNc7df3gfzteaZZ\n+NTKx5y6RxJ69/333mvBwHOLQ/fhiR2SV34HS47hmnAafJ9gh3AaDMcB7LE/\nIoPY441dhOzDz94VN3DPNmoeM5drAyfK7lWH34baYetVCidBIT6C5UMhB4r2\nn3FheSANRVGCwhBmObtlbgqXyYYNyuYFAMQFCtPwQf3spxAraGBRR+Af91wX\n/zsPoCIuCCAV13yAMsWo7zIOaJHFSHEZHZABdWK4X0JoIAENLIeDCXFA2rgX\nuwG8MC6kKGGoZuaDTEhtd/vBTBoyYLYqeAEzFpihGCagEBqIQQJVGMAOEdLD\n2L0uHJdBAMIOhsTELHExwLnS/i6zAQlIQItWxKIccejGL/4wjPvw4kHSQApA\nBhKQUDCiEWE2C93dTSEW2EMjaWABhbgnA3g8SAj4cElK+kMJWoyjBK6YECtw\nUgKZ7N8ejdZHfzjgGgNY5SpnZsisJXFHikwICTLBskzUECFtxJ/FFKKETmrx\nkwixQiclYAX+mfKUCpnBEZzpzHpkS2Yxm0ViMNcjhf+QABs5uKUuD9KoTOaP\nQb80picxaExk8lCZfIxLNuBhrWnurZpjoiVCbAkBbnrTH2pbTjgZVAVyGnOY\nBylmJ9P5xXWOUS6WEB3ZqgmTazLxMk40WntQub3lbIOc7OjkQP1RUI4e9CCl\nfJ3jjCbEogDAE6KrAiKlVs+4gJF7GUDlDLLnUWCyg6Ps8GgxdyrSVK5zH/WI\noARjZjFEQhSmRCEFg9SGSqIoQadT7alOJcAOoJJUmeFA6VBIETqk+ssPKizK\nDorxwx9CdShSvapOqzpVoO7ApMocgAdcIb74HeSroEOqEn8w1mgVRR0KyEEw\nKqoctTZEquzggFsVooepskP/DwqZAAfmakpGvc4HXSXF54CWVLthALASRYhB\nFpmDd4QxsQxRQmNd61HITnWyCVHC9MTnCsY9U7dH4AM8spGQvVrsiRB4Fg/8\ncFxsJmQDHvUHLQyhWsy01rXs2MFj2ZGC6862KKRgHGY6K9zlEPdyP8AJcteo\n3ClsQCHq0AF0QdkN+HbjlxygL31hO13tMrW7lwkB0BiUoR3x4EfmrYlCNjAF\nCRAoIWmwQexQqQcyxHe+9eXAfVOQAg7k16v7jQsAHGi2Bv0gUzyQQ05Ga+Cy\n0MBEDsZgN8gQ4QnXt7oJ0QOGOZACDTeEu0aTCwC80EKhDcAHMDGHWATMsuMC\nFsVl/9GnP0Jg0kw24MUv/qUTOGDlCj8WETfGsVx2vI+UzsATIFZUaTIRk3QY\n+ZYlFq0Ce5QJHBXgdU+MRCSwEYlVBCHPQZhyn7vhhD9fWdAc2DKhKXxhRCc6\n0Yi4LOPcl6hGVUFqc4gJLGaxufKO1s2VkrOj63znOkciCKMedZ+n7ARUp1rQ\niLAyIlyNYURcONaInrWs9ci4JyJOaFYawDzP8Q+ZwAICLckbgd08i290eh9V\nCIadQw3qO5Oa1H1GNRlSjeorO2HLruZ2rLudAm+Dm9Gxcx/GXmSIMbnjH5W2\nzy2RbOzM+cENBRAWs0N9b3zXWdp8pra1r61tbXdb4N/2Nv8i5gzeIJd5Gjui\nwT+AzQ9YVGrYnNO0Agm27GBkvNnNzje+921qf/+b1QEfuMDFPe5lk/lspUG3\nWKbQCofLBBBuwNEs3C3aikcrB2TTeM81HgmOd3zf/PZ3yFPNaqSXfODF0EDK\nE9e6liZmCvJwOLD7AQhU2efSbG6zm7VgiG1ofBc+//nGgZ7vbYw67aVux4v/\nfXSSK53by/HVrzIwDZTBBANUrzpMeAAIWASeB4P/AQ9+cHjEJx7xWgDE5nLQ\neMdHXvKbg/zkMZ23H/1oFRjYPOc9v3nQ58Aw0xn9LACvO7HQAOZVf/jl0ii1\nHcXe9bPX3euftaPL5R71tIf97nsy7/o0WlP2r4/JOU7B+r5nqva7jz1EdZ97\n4qNe+bonfvCfVXvly1762beOOdLBd+Q7PCAAOw==\n"
                      alt: "Rails logo"
                summary: "Update a smart collection by setting a new collection image"
              example5:
                value:
                  smart_collection:
                    id: 482865238
                    image:
                      alt: "Rails logo"
                summary: "Update a smart collection by setting a new collection image alternative text"
              example6:
                value:
                  smart_collection:
                    id: 482865238
                    image: ""
                    handle: "smart-ipods"
                    title: "Smart iPods"
                    updated_at: "2020-11-04T16:20:22-05:00"
                    body_html: "<p>The best selling ipod ever</p>"
                    published_at: "2008-02-01T19:00:00-05:00"
                    sort_order: "manual"
                    template_suffix: null
                    disjunctive: false
                    rules:
                      - column: "type"
                        relation: "equals"
                        condition: "Cult Products"
                    published_scope: "web"
                    admin_graphql_api_id: "gid://shopify/Collection/482865238"
                summary: "Update a smart collection by clearing the collection image"
      summary: "Updates an existing smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#update-unstable"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_smart_collections_param_smart_collection_id"
    delete:
      summary: "Removes a smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#destroy-unstable"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_smart_collections_param_smart_collection_id"
  /admin/api/unstable/smart_collections/{smart_collection_id}/order.json:
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Update manually-sorted products in the smart collection"
              example2:
                value: {}
                summary: "Update the type of ordering applied to the smart collection"
      summary: "Updates the ordering type of products in a smart collection"
      description: "https://shopify.dev/docs/admin-api/rest/reference/products/smartcollection#order-unstable"
      parameters:
        - in: "path"
          name: "smart_collection_id"
          required: true
          schema:
            type: "string"
          description: "smart_collection_id"
        - in: "query"
          name: "products"
          description: "An array of product IDs, in the order that you want them to appear at the top of the collection. When products is specified but empty, any previously sorted products are cleared."
          schema: {}
          required: false
        - in: "query"
          name: "sort_order"
          description: "The type of sorting to apply. Valid values are listed in the Properties section above.\n                  (default: (current value))"
          schema: {}
          required: false
        - in: "query"
          name: "products[]"
          schema:
            type: "integer"
          description: "products[]"
          required: false
      tags:
        - "products"
        - "smartcollection"
        - "products/smartcollection"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_smart_collections_param_smart_collection_id_order"
  /admin/api/2020-01/checkouts/{token}/complete.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Complete a checkout without requiring payment"
      summary: "Completes a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#complete-2020-01"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_checkouts_param_token_complete"
  /admin/api/2020-01/checkouts/{token}.json:
    get:
      summary: "Retrieves a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#show-2020-01"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_checkouts_param_token"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  checkout:
                    token: "exuw7apwoycchjuwtiqg8nytfhphr62a"
                    email: "john.smith@example.com"
                    shipping_address:
                      first_name: "John"
                      last_name: "Smith"
                      address1: "126 York St."
                      city: "Los Angeles"
                      province_code: "CA"
                      country_code: "US"
                      phone: "(123)456-7890"
                      zip: "90002"
                summary: "Update the shipping address and email of a checkout"
              example2:
                value:
                  checkout:
                    token: "exuw7apwoycchjuwtiqg8nytfhphr62a"
                    shipping_line:
                      handle: "shopify-Free%20Shipping-0.00"
                summary: "Select a shipping rate"
              example3:
                value:
                  checkout:
                    token: "exuw7apwoycchjuwtiqg8nytfhphr62a"
                    shipping_address:
                      first_name: "John"
                      last_name: "Smith"
                      address1: "126 York St."
                      city: "Beverly Hills"
                      province_code: "CA"
                      country_code: "US"
                      phone: "(123)456-7890"
                      zip: "1234"
                summary: "Updating a shipping address with an invalid zip code fails and returns errors"
      summary: "Modifies an existing checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#update-2020-01"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_checkouts_param_token"
  /admin/api/2020-01/checkouts/{token}/shipping_rates.json:
    get:
      summary: "Retrieves a list of available shipping rates for the specified checkout. Implementers need to poll this endpoint until rates become available.\n    Each shipping rate contains the checkout's new subtotal price, total tax, and total price in the event that this shipping rate is selected. This can be used to update the UI without performing further API requests.\n    To apply a shipping rate, update the checkout's shipping line with the handle of the selected rate."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#shipping_rates-2020-01"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_checkouts_param_token_shipping_rates"
  /admin/api/2020-04/checkouts/{token}/complete.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Complete a checkout without requiring payment"
      summary: "Completes a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#complete-2020-04"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_checkouts_param_token_complete"
  /admin/api/2020-04/checkouts/{token}.json:
    get:
      summary: "Retrieves a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#show-2020-04"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_checkouts_param_token"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  checkout:
                    token: "exuw7apwoycchjuwtiqg8nytfhphr62a"
                    email: "john.smith@example.com"
                    shipping_address:
                      first_name: "John"
                      last_name: "Smith"
                      address1: "126 York St."
                      city: "Los Angeles"
                      province_code: "CA"
                      country_code: "US"
                      phone: "(123)456-7890"
                      zip: "90002"
                summary: "Update the shipping address and email of a checkout"
              example2:
                value:
                  checkout:
                    token: "exuw7apwoycchjuwtiqg8nytfhphr62a"
                    shipping_line:
                      handle: "shopify-Free%20Shipping-0.00"
                summary: "Select a shipping rate"
              example3:
                value:
                  checkout:
                    token: "exuw7apwoycchjuwtiqg8nytfhphr62a"
                    shipping_address:
                      first_name: "John"
                      last_name: "Smith"
                      address1: "126 York St."
                      city: "Beverly Hills"
                      province_code: "CA"
                      country_code: "US"
                      phone: "(123)456-7890"
                      zip: "1234"
                summary: "Updating a shipping address with an invalid zip code fails and returns errors"
      summary: "Modifies an existing checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#update-2020-04"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_checkouts_param_token"
  /admin/api/2020-04/checkouts/{token}/shipping_rates.json:
    get:
      summary: "Retrieves a list of available shipping rates for the specified checkout. Implementers need to poll this endpoint until rates become available.\n    Each shipping rate contains the checkout's new subtotal price, total tax, and total price in the event that this shipping rate is selected. This can be used to update the UI without performing further API requests.\n    To apply a shipping rate, update the checkout's shipping line with the handle of the selected rate."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#shipping_rates-2020-04"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_checkouts_param_token_shipping_rates"
  /admin/api/2020-07/checkouts/{token}/complete.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Complete a checkout without requiring payment"
      summary: "Completes a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#complete-2020-07"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_checkouts_param_token_complete"
  /admin/api/2020-07/checkouts/{token}.json:
    get:
      summary: "Retrieves a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#show-2020-07"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_checkouts_param_token"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  checkout:
                    token: "exuw7apwoycchjuwtiqg8nytfhphr62a"
                    email: "john.smith@example.com"
                    shipping_address:
                      first_name: "John"
                      last_name: "Smith"
                      address1: "126 York St."
                      city: "Los Angeles"
                      province_code: "CA"
                      country_code: "US"
                      phone: "(123)456-7890"
                      zip: "90002"
                summary: "Update the shipping address and email of a checkout"
              example2:
                value:
                  checkout:
                    token: "exuw7apwoycchjuwtiqg8nytfhphr62a"
                    shipping_line:
                      handle: "shopify-Free%20Shipping-0.00"
                summary: "Select a shipping rate"
              example3:
                value:
                  checkout:
                    token: "exuw7apwoycchjuwtiqg8nytfhphr62a"
                    shipping_address:
                      first_name: "John"
                      last_name: "Smith"
                      address1: "126 York St."
                      city: "Beverly Hills"
                      province_code: "CA"
                      country_code: "US"
                      phone: "(123)456-7890"
                      zip: "1234"
                summary: "Updating a shipping address with an invalid zip code fails and returns errors"
      summary: "Modifies an existing checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#update-2020-07"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_checkouts_param_token"
  /admin/api/2020-07/checkouts/{token}/shipping_rates.json:
    get:
      summary: "Retrieves a list of available shipping rates for the specified checkout. Implementers need to poll this endpoint until rates become available.\n    Each shipping rate contains the checkout's new subtotal price, total tax, and total price in the event that this shipping rate is selected. This can be used to update the UI without performing further API requests.\n    To apply a shipping rate, update the checkout's shipping line with the handle of the selected rate."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#shipping_rates-2020-07"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_checkouts_param_token_shipping_rates"
  /admin/api/2020-10/checkouts/{token}/complete.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Complete a checkout without requiring payment"
      summary: "Completes a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#complete-2020-10"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_checkouts_param_token_complete"
  /admin/api/2020-10/checkouts/{token}.json:
    get:
      summary: "Retrieves a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#show-2020-10"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_checkouts_param_token"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  checkout:
                    token: "exuw7apwoycchjuwtiqg8nytfhphr62a"
                    email: "john.smith@example.com"
                    shipping_address:
                      first_name: "John"
                      last_name: "Smith"
                      address1: "126 York St."
                      city: "Los Angeles"
                      province_code: "CA"
                      country_code: "US"
                      phone: "(123)456-7890"
                      zip: "90002"
                summary: "Update the shipping address and email of a checkout"
              example2:
                value:
                  checkout:
                    token: "exuw7apwoycchjuwtiqg8nytfhphr62a"
                    shipping_line:
                      handle: "shopify-Free%20Shipping-0.00"
                summary: "Select a shipping rate"
              example3:
                value:
                  checkout:
                    token: "exuw7apwoycchjuwtiqg8nytfhphr62a"
                    shipping_address:
                      first_name: "John"
                      last_name: "Smith"
                      address1: "126 York St."
                      city: "Beverly Hills"
                      province_code: "CA"
                      country_code: "US"
                      phone: "(123)456-7890"
                      zip: "1234"
                summary: "Updating a shipping address with an invalid zip code fails and returns errors"
      summary: "Modifies an existing checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#update-2020-10"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_checkouts_param_token"
  /admin/api/2020-10/checkouts/{token}/shipping_rates.json:
    get:
      summary: "Retrieves a list of available shipping rates for the specified checkout. Implementers need to poll this endpoint until rates become available.\n    Each shipping rate contains the checkout's new subtotal price, total tax, and total price in the event that this shipping rate is selected. This can be used to update the UI without performing further API requests.\n    To apply a shipping rate, update the checkout's shipping line with the handle of the selected rate."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#shipping_rates-2020-10"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_checkouts_param_token_shipping_rates"
  /admin/api/2021-01/checkouts/{token}/complete.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Complete a checkout without requiring payment"
      summary: "Completes a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#complete-2021-01"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_checkouts_param_token_complete"
  /admin/api/2021-01/checkouts/{token}.json:
    get:
      summary: "Retrieves a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#show-2021-01"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_checkouts_param_token"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  checkout:
                    token: "exuw7apwoycchjuwtiqg8nytfhphr62a"
                    email: "john.smith@example.com"
                    shipping_address:
                      first_name: "John"
                      last_name: "Smith"
                      address1: "126 York St."
                      city: "Los Angeles"
                      province_code: "CA"
                      country_code: "US"
                      phone: "(123)456-7890"
                      zip: "90002"
                summary: "Update the shipping address and email of a checkout"
              example2:
                value:
                  checkout:
                    token: "exuw7apwoycchjuwtiqg8nytfhphr62a"
                    shipping_line:
                      handle: "shopify-Free%20Shipping-0.00"
                summary: "Select a shipping rate"
              example3:
                value:
                  checkout:
                    token: "exuw7apwoycchjuwtiqg8nytfhphr62a"
                    shipping_address:
                      first_name: "John"
                      last_name: "Smith"
                      address1: "126 York St."
                      city: "Beverly Hills"
                      province_code: "CA"
                      country_code: "US"
                      phone: "(123)456-7890"
                      zip: "1234"
                summary: "Updating a shipping address with an invalid zip code fails and returns errors"
      summary: "Modifies an existing checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#update-2021-01"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_checkouts_param_token"
  /admin/api/2021-01/checkouts/{token}/shipping_rates.json:
    get:
      summary: "Retrieves a list of available shipping rates for the specified checkout. Implementers need to poll this endpoint until rates become available.\n    Each shipping rate contains the checkout's new subtotal price, total tax, and total price in the event that this shipping rate is selected. This can be used to update the UI without performing further API requests.\n    To apply a shipping rate, update the checkout's shipping line with the handle of the selected rate."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#shipping_rates-2021-01"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_checkouts_param_token_shipping_rates"
  /admin/api/unstable/checkouts/{token}/complete.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Complete a checkout without requiring payment"
      summary: "Completes a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#complete-unstable"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_checkouts_param_token_complete"
  /admin/api/unstable/checkouts/{token}.json:
    get:
      summary: "Retrieves a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#show-unstable"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_checkouts_param_token"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  checkout:
                    token: "exuw7apwoycchjuwtiqg8nytfhphr62a"
                    email: "john.smith@example.com"
                    shipping_address:
                      first_name: "John"
                      last_name: "Smith"
                      address1: "126 York St."
                      city: "Los Angeles"
                      province_code: "CA"
                      country_code: "US"
                      phone: "(123)456-7890"
                      zip: "90002"
                summary: "Update the shipping address and email of a checkout"
              example2:
                value:
                  checkout:
                    token: "exuw7apwoycchjuwtiqg8nytfhphr62a"
                    shipping_line:
                      handle: "shopify-Free%20Shipping-0.00"
                summary: "Select a shipping rate"
              example3:
                value:
                  checkout:
                    token: "exuw7apwoycchjuwtiqg8nytfhphr62a"
                    shipping_address:
                      first_name: "John"
                      last_name: "Smith"
                      address1: "126 York St."
                      city: "Beverly Hills"
                      province_code: "CA"
                      country_code: "US"
                      phone: "(123)456-7890"
                      zip: "1234"
                summary: "Updating a shipping address with an invalid zip code fails and returns errors"
      summary: "Modifies an existing checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#update-unstable"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_checkouts_param_token"
  /admin/api/unstable/checkouts/{token}/shipping_rates.json:
    get:
      summary: "Retrieves a list of available shipping rates for the specified checkout. Implementers need to poll this endpoint until rates become available.\n    Each shipping rate contains the checkout's new subtotal price, total tax, and total price in the event that this shipping rate is selected. This can be used to update the UI without performing further API requests.\n    To apply a shipping rate, update the checkout's shipping line with the handle of the selected rate."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/checkout#shipping_rates-unstable"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "checkout"
        - "sales-channels/checkout"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_checkouts_param_token_shipping_rates"
  /admin/api/2020-01/collection_listings.json:
    get:
      summary: "Retrieve collection listings that are published to your app. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#index-2020-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "Amount of results\n                  (default: 50, maximum: 1000)"
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_collection_listings"
  /admin/api/2020-01/collection_listings/{collection_listing_id}/product_ids.json:
    get:
      summary: "Retrieve product_ids that are published to a collection_id.       Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#product_ids-2020-01"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
        - in: "query"
          name: "limit"
          description: "Amount of results\n                  (default: 50, maximum: 1000)"
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_collection_listings_param_collection_listing_id_product_ids"
  /admin/api/2020-01/collection_listings/{collection_listing_id}.json:
    get:
      summary: "Retrieve a specific collection listing that is published to your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#show-2020-01"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_collection_listings_param_collection_listing_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  collection_listing:
                    collection_id: 482865238
                summary: "Create a collection listing to publish a collection to your app"
      summary: "Create a collection listing to publish a collection to your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#create-2020-01"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_collection_listings_param_collection_listing_id"
    delete:
      summary: "Delete a collection listing to unpublish a collection from your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#destroy-2020-01"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_collection_listings_param_collection_listing_id"
  /admin/api/2020-04/collection_listings.json:
    get:
      summary: "Retrieve collection listings that are published to your app. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#index-2020-04"
      parameters:
        - in: "query"
          name: "limit"
          description: "Amount of results\n                  (default: 50, maximum: 1000)"
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_collection_listings"
  /admin/api/2020-04/collection_listings/{collection_listing_id}/product_ids.json:
    get:
      summary: "Retrieve product_ids that are published to a collection_id.       Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#product_ids-2020-04"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
        - in: "query"
          name: "limit"
          description: "Amount of results\n                  (default: 50, maximum: 1000)"
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_collection_listings_param_collection_listing_id_product_ids"
  /admin/api/2020-04/collection_listings/{collection_listing_id}.json:
    get:
      summary: "Retrieve a specific collection listing that is published to your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#show-2020-04"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_collection_listings_param_collection_listing_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  collection_listing:
                    collection_id: 482865238
                summary: "Create a collection listing to publish a collection to your app"
      summary: "Create a collection listing to publish a collection to your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#create-2020-04"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_collection_listings_param_collection_listing_id"
    delete:
      summary: "Delete a collection listing to unpublish a collection from your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#destroy-2020-04"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_collection_listings_param_collection_listing_id"
  /admin/api/2020-07/collection_listings.json:
    get:
      summary: "Retrieve collection listings that are published to your app. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#index-2020-07"
      parameters:
        - in: "query"
          name: "limit"
          description: "Amount of results\n                  (default: 50, maximum: 1000)"
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_collection_listings"
  /admin/api/2020-07/collection_listings/{collection_listing_id}/product_ids.json:
    get:
      summary: "Retrieve product_ids that are published to a collection_id.       Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#product_ids-2020-07"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
        - in: "query"
          name: "limit"
          description: "Amount of results\n                  (default: 50, maximum: 1000)"
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_collection_listings_param_collection_listing_id_product_ids"
  /admin/api/2020-07/collection_listings/{collection_listing_id}.json:
    get:
      summary: "Retrieve a specific collection listing that is published to your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#show-2020-07"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_collection_listings_param_collection_listing_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  collection_listing:
                    collection_id: 482865238
                summary: "Create a collection listing to publish a collection to your app"
      summary: "Create a collection listing to publish a collection to your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#create-2020-07"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_collection_listings_param_collection_listing_id"
    delete:
      summary: "Delete a collection listing to unpublish a collection from your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#destroy-2020-07"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_collection_listings_param_collection_listing_id"
  /admin/api/2020-10/collection_listings.json:
    get:
      summary: "Retrieve collection listings that are published to your app. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#index-2020-10"
      parameters:
        - in: "query"
          name: "limit"
          description: "Amount of results\n                  (default: 50, maximum: 1000)"
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_collection_listings"
  /admin/api/2020-10/collection_listings/{collection_listing_id}/product_ids.json:
    get:
      summary: "Retrieve product_ids that are published to a collection_id.       Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#product_ids-2020-10"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
        - in: "query"
          name: "limit"
          description: "Amount of results\n                  (default: 50, maximum: 1000)"
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_collection_listings_param_collection_listing_id_product_ids"
  /admin/api/2020-10/collection_listings/{collection_listing_id}.json:
    get:
      summary: "Retrieve a specific collection listing that is published to your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#show-2020-10"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_collection_listings_param_collection_listing_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  collection_listing:
                    collection_id: 482865238
                summary: "Create a collection listing to publish a collection to your app"
      summary: "Create a collection listing to publish a collection to your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#create-2020-10"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_collection_listings_param_collection_listing_id"
    delete:
      summary: "Delete a collection listing to unpublish a collection from your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#destroy-2020-10"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_collection_listings_param_collection_listing_id"
  /admin/api/2021-01/collection_listings.json:
    get:
      summary: "Retrieve collection listings that are published to your app. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#index-2021-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "Amount of results\n                  (default: 50, maximum: 1000)"
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_collection_listings"
  /admin/api/2021-01/collection_listings/{collection_listing_id}/product_ids.json:
    get:
      summary: "Retrieve product_ids that are published to a collection_id.       Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#product_ids-2021-01"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
        - in: "query"
          name: "limit"
          description: "Amount of results\n                  (default: 50, maximum: 1000)"
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_collection_listings_param_collection_listing_id_product_ids"
  /admin/api/2021-01/collection_listings/{collection_listing_id}.json:
    get:
      summary: "Retrieve a specific collection listing that is published to your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#show-2021-01"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_collection_listings_param_collection_listing_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  collection_listing:
                    collection_id: 482865238
                summary: "Create a collection listing to publish a collection to your app"
      summary: "Create a collection listing to publish a collection to your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#create-2021-01"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_collection_listings_param_collection_listing_id"
    delete:
      summary: "Delete a collection listing to unpublish a collection from your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#destroy-2021-01"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_collection_listings_param_collection_listing_id"
  /admin/api/unstable/collection_listings.json:
    get:
      summary: "Retrieve collection listings that are published to your app. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#index-unstable"
      parameters:
        - in: "query"
          name: "limit"
          description: "Amount of results\n                  (default: 50, maximum: 1000)"
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_collection_listings"
  /admin/api/unstable/collection_listings/{collection_listing_id}/product_ids.json:
    get:
      summary: "Retrieve product_ids that are published to a collection_id.       Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#product_ids-unstable"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
        - in: "query"
          name: "limit"
          description: "Amount of results\n                  (default: 50, maximum: 1000)"
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_collection_listings_param_collection_listing_id_product_ids"
  /admin/api/unstable/collection_listings/{collection_listing_id}.json:
    get:
      summary: "Retrieve a specific collection listing that is published to your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#show-unstable"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_collection_listings_param_collection_listing_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  collection_listing:
                    collection_id: 482865238
                summary: "Create a collection listing to publish a collection to your app"
      summary: "Create a collection listing to publish a collection to your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#create-unstable"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_collection_listings_param_collection_listing_id"
    delete:
      summary: "Delete a collection listing to unpublish a collection from your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/collectionlisting#destroy-unstable"
      parameters:
        - in: "path"
          name: "collection_listing_id"
          required: true
          schema:
            type: "string"
          description: "collection_listing_id"
      tags:
        - "sales-channels"
        - "collectionlisting"
        - "sales-channels/collectionlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_collection_listings_param_collection_listing_id"
  /admin/api/2020-01/checkouts/{token}/payments.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "398.00"
                    session_id: "global-2b883b5dbab7059e"
                    unique_token: "client-side-idempotency-token"
                summary: "Create an authorization using a valid session_id stored in the vault"
              example2:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "419.49"
                    session_id: "global-a61a334b946b55fb"
                    unique_token: "client-side-idempotency-token"
                summary: "Creating an authorization with a valid session ID but an invalid credit card number fails and returns errors"
              example3:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "419.49"
                    session_id: "global-an_invalid_session_id"
                    unique_token: "client-side-idempotency-token"
                summary: "Creating an authorization with an invalid session ID fails and returns errors"
              example4:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "398.00"
                    session_id: "global-d0436243a47a3418"
                    unique_token: "client-side-idempotency-token"
                summary: "Creating an authorization with a valid session can fail for various reasons"
      summary: "Creates a payment on a checkout using the session ID returned by the card vault"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#create_payment-2020-01"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
        - in: "query"
          name: "amount\n                  required"
          description: "The amount of the payment."
          schema: {}
          required: false
        - in: "query"
          name: "request_details\n                  required"
          description: "The details of the request, including the following attributes:\n                    \n                        ip_address: The IP address of the customer.\n                        accept_language: The language preferences of the customer, in the same format as a standard Accept-Language request header.\n\n                        user_agent: The user agent string for the customer's device."
          schema: {}
          required: false
        - in: "query"
          name: "session_id\n                  required"
          description: "A session ID provided by the card vault when creating a payment session."
          schema: {}
          required: false
        - in: "query"
          name: "unique_token\n                  required"
          description: "A unique idempotency token generated by your app. This can be any value, but must be unique across all payment requests."
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_checkouts_param_token_payments"
    get:
      summary: "Retrieves a list of payments on a particular checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#index-2020-01"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_checkouts_param_token_payments"
  /admin/api/2020-01/checkouts/{token}/payments/{payment_id}.json:
    get:
      summary: "Retrieves the payment information for an existing payment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#show-2020-01"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
        - in: "path"
          name: "payment_id"
          required: true
          schema:
            type: "string"
          description: "payment_id"
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_checkouts_param_token_payments_param_payment_id"
  /admin/api/2020-01/checkouts/{token}/payments/count.json:
    get:
      summary: "Counts the number of payments attempted on a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#count-2020-01"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_checkouts_param_token_payments_count"
  /admin/api/2020-04/checkouts/{token}/payments.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "398.00"
                    session_id: "global-2b883b5dbab7059e"
                    unique_token: "client-side-idempotency-token"
                summary: "Create an authorization using a valid session_id stored in the vault"
              example2:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "419.49"
                    session_id: "global-a61a334b946b55fb"
                    unique_token: "client-side-idempotency-token"
                summary: "Creating an authorization with a valid session ID but an invalid credit card number fails and returns errors"
              example3:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "419.49"
                    session_id: "global-an_invalid_session_id"
                    unique_token: "client-side-idempotency-token"
                summary: "Creating an authorization with an invalid session ID fails and returns errors"
              example4:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "398.00"
                    session_id: "global-d0436243a47a3418"
                    unique_token: "client-side-idempotency-token"
                summary: "Creating an authorization with a valid session can fail for various reasons"
      summary: "Creates a payment on a checkout using the session ID returned by the card vault"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#create_payment-2020-04"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
        - in: "query"
          name: "amount\n                  required"
          description: "The amount of the payment."
          schema: {}
          required: false
        - in: "query"
          name: "request_details\n                  required"
          description: "The details of the request, including the following attributes:\n                    \n                        ip_address: The IP address of the customer.\n                        accept_language: The language preferences of the customer, in the same format as a standard Accept-Language request header.\n\n                        user_agent: The user agent string for the customer's device."
          schema: {}
          required: false
        - in: "query"
          name: "session_id\n                  required"
          description: "A session ID provided by the card vault when creating a payment session."
          schema: {}
          required: false
        - in: "query"
          name: "unique_token\n                  required"
          description: "A unique idempotency token generated by your app. This can be any value, but must be unique across all payment requests."
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_checkouts_param_token_payments"
    get:
      summary: "Retrieves a list of payments on a particular checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#index-2020-04"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_checkouts_param_token_payments"
  /admin/api/2020-04/checkouts/{token}/payments/{payment_id}.json:
    get:
      summary: "Retrieves the payment information for an existing payment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#show-2020-04"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
        - in: "path"
          name: "payment_id"
          required: true
          schema:
            type: "string"
          description: "payment_id"
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_checkouts_param_token_payments_param_payment_id"
  /admin/api/2020-04/checkouts/{token}/payments/count.json:
    get:
      summary: "Counts the number of payments attempted on a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#count-2020-04"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_checkouts_param_token_payments_count"
  /admin/api/2020-07/checkouts/{token}/payments.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "398.00"
                    session_id: "global-2b883b5dbab7059e"
                    unique_token: "client-side-idempotency-token"
                summary: "Create an authorization using a valid session_id stored in the vault"
              example2:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "419.49"
                    session_id: "global-a61a334b946b55fb"
                    unique_token: "client-side-idempotency-token"
                summary: "Creating an authorization with a valid session ID but an invalid credit card number fails and returns errors"
              example3:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "419.49"
                    session_id: "global-an_invalid_session_id"
                    unique_token: "client-side-idempotency-token"
                summary: "Creating an authorization with an invalid session ID fails and returns errors"
              example4:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "398.00"
                    session_id: "global-d0436243a47a3418"
                    unique_token: "client-side-idempotency-token"
                summary: "Creating an authorization with a valid session can fail for various reasons"
      summary: "Creates a payment on a checkout using the session ID returned by the card vault"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#create_payment-2020-07"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
        - in: "query"
          name: "amount\n                  required"
          description: "The amount of the payment."
          schema: {}
          required: false
        - in: "query"
          name: "request_details\n                  required"
          description: "The details of the request, including the following attributes:\n                    \n                        ip_address: The IP address of the customer.\n                        accept_language: The language preferences of the customer, in the same format as a standard Accept-Language request header.\n\n                        user_agent: The user agent string for the customer's device."
          schema: {}
          required: false
        - in: "query"
          name: "session_id\n                  required"
          description: "A session ID provided by the card vault when creating a payment session."
          schema: {}
          required: false
        - in: "query"
          name: "unique_token\n                  required"
          description: "A unique idempotency token generated by your app. This can be any value, but must be unique across all payment requests."
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_checkouts_param_token_payments"
    get:
      summary: "Retrieves a list of payments on a particular checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#index-2020-07"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_checkouts_param_token_payments"
  /admin/api/2020-07/checkouts/{token}/payments/{payment_id}.json:
    get:
      summary: "Retrieves the payment information for an existing payment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#show-2020-07"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
        - in: "path"
          name: "payment_id"
          required: true
          schema:
            type: "string"
          description: "payment_id"
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_checkouts_param_token_payments_param_payment_id"
  /admin/api/2020-07/checkouts/{token}/payments/count.json:
    get:
      summary: "Counts the number of payments attempted on a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#count-2020-07"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_checkouts_param_token_payments_count"
  /admin/api/2020-10/checkouts/{token}/payments.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "398.00"
                    session_id: "global-2b883b5dbab7059e"
                    unique_token: "client-side-idempotency-token"
                summary: "Create an authorization using a valid session_id stored in the vault"
              example2:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "419.49"
                    session_id: "global-a61a334b946b55fb"
                    unique_token: "client-side-idempotency-token"
                summary: "Creating an authorization with a valid session ID but an invalid credit card number fails and returns errors"
              example3:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "419.49"
                    session_id: "global-an_invalid_session_id"
                    unique_token: "client-side-idempotency-token"
                summary: "Creating an authorization with an invalid session ID fails and returns errors"
              example4:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "398.00"
                    session_id: "global-d0436243a47a3418"
                    unique_token: "client-side-idempotency-token"
                summary: "Creating an authorization with a valid session can fail for various reasons"
      summary: "Creates a payment on a checkout using the session ID returned by the card vault"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#create_payment-2020-10"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
        - in: "query"
          name: "amount\n                  required"
          description: "The amount of the payment."
          schema: {}
          required: false
        - in: "query"
          name: "request_details\n                  required"
          description: "The details of the request, including the following attributes:\n                    \n                        ip_address: The IP address of the customer.\n                        accept_language: The language preferences of the customer, in the same format as a standard Accept-Language request header.\n\n                        user_agent: The user agent string for the customer's device."
          schema: {}
          required: false
        - in: "query"
          name: "session_id\n                  required"
          description: "A session ID provided by the card vault when creating a payment session."
          schema: {}
          required: false
        - in: "query"
          name: "unique_token\n                  required"
          description: "A unique idempotency token generated by your app. This can be any value, but must be unique across all payment requests."
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_checkouts_param_token_payments"
    get:
      summary: "Retrieves a list of payments on a particular checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#index-2020-10"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_checkouts_param_token_payments"
  /admin/api/2020-10/checkouts/{token}/payments/{payment_id}.json:
    get:
      summary: "Retrieves the payment information for an existing payment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#show-2020-10"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
        - in: "path"
          name: "payment_id"
          required: true
          schema:
            type: "string"
          description: "payment_id"
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_checkouts_param_token_payments_param_payment_id"
  /admin/api/2020-10/checkouts/{token}/payments/count.json:
    get:
      summary: "Counts the number of payments attempted on a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#count-2020-10"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_checkouts_param_token_payments_count"
  /admin/api/2021-01/checkouts/{token}/payments.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "398.00"
                    session_id: "global-2b883b5dbab7059e"
                    unique_token: "client-side-idempotency-token"
                summary: "Create an authorization using a valid session_id stored in the vault"
              example2:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "419.49"
                    session_id: "global-a61a334b946b55fb"
                    unique_token: "client-side-idempotency-token"
                summary: "Creating an authorization with a valid session ID but an invalid credit card number fails and returns errors"
              example3:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "419.49"
                    session_id: "global-an_invalid_session_id"
                    unique_token: "client-side-idempotency-token"
                summary: "Creating an authorization with an invalid session ID fails and returns errors"
              example4:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "398.00"
                    session_id: "global-d0436243a47a3418"
                    unique_token: "client-side-idempotency-token"
                summary: "Creating an authorization with a valid session can fail for various reasons"
      summary: "Creates a payment on a checkout using the session ID returned by the card vault"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#create_payment-2021-01"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
        - in: "query"
          name: "amount\n                  required"
          description: "The amount of the payment."
          schema: {}
          required: false
        - in: "query"
          name: "request_details\n                  required"
          description: "The details of the request, including the following attributes:\n                    \n                        ip_address: The IP address of the customer.\n                        accept_language: The language preferences of the customer, in the same format as a standard Accept-Language request header.\n\n                        user_agent: The user agent string for the customer's device."
          schema: {}
          required: false
        - in: "query"
          name: "session_id\n                  required"
          description: "A session ID provided by the card vault when creating a payment session."
          schema: {}
          required: false
        - in: "query"
          name: "unique_token\n                  required"
          description: "A unique idempotency token generated by your app. This can be any value, but must be unique across all payment requests."
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_checkouts_param_token_payments"
    get:
      summary: "Retrieves a list of payments on a particular checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#index-2021-01"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_checkouts_param_token_payments"
  /admin/api/2021-01/checkouts/{token}/payments/{payment_id}.json:
    get:
      summary: "Retrieves the payment information for an existing payment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#show-2021-01"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
        - in: "path"
          name: "payment_id"
          required: true
          schema:
            type: "string"
          description: "payment_id"
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_checkouts_param_token_payments_param_payment_id"
  /admin/api/2021-01/checkouts/{token}/payments/count.json:
    get:
      summary: "Counts the number of payments attempted on a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#count-2021-01"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_checkouts_param_token_payments_count"
  /admin/api/unstable/checkouts/{token}/payments.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "398.00"
                    session_id: "global-2b883b5dbab7059e"
                    unique_token: "client-side-idempotency-token"
                summary: "Create an authorization using a valid session_id stored in the vault"
              example2:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "419.49"
                    session_id: "global-a61a334b946b55fb"
                    unique_token: "client-side-idempotency-token"
                summary: "Creating an authorization with a valid session ID but an invalid credit card number fails and returns errors"
              example3:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "419.49"
                    session_id: "global-an_invalid_session_id"
                    unique_token: "client-side-idempotency-token"
                summary: "Creating an authorization with an invalid session ID fails and returns errors"
              example4:
                value:
                  payment:
                    request_details:
                      ip_address: "123.1.1.1"
                      accept_language: "en-US,en;q=0.8,fr;q=0.6"
                      user_agent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36"
                    amount: "398.00"
                    session_id: "global-d0436243a47a3418"
                    unique_token: "client-side-idempotency-token"
                summary: "Creating an authorization with a valid session can fail for various reasons"
      summary: "Creates a payment on a checkout using the session ID returned by the card vault"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#create_payment-unstable"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
        - in: "query"
          name: "amount\n                  required"
          description: "The amount of the payment."
          schema: {}
          required: false
        - in: "query"
          name: "request_details\n                  required"
          description: "The details of the request, including the following attributes:\n                    \n                        ip_address: The IP address of the customer.\n                        accept_language: The language preferences of the customer, in the same format as a standard Accept-Language request header.\n\n                        user_agent: The user agent string for the customer's device."
          schema: {}
          required: false
        - in: "query"
          name: "session_id\n                  required"
          description: "A session ID provided by the card vault when creating a payment session."
          schema: {}
          required: false
        - in: "query"
          name: "unique_token\n                  required"
          description: "A unique idempotency token generated by your app. This can be any value, but must be unique across all payment requests."
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_checkouts_param_token_payments"
    get:
      summary: "Retrieves a list of payments on a particular checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#index-unstable"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_checkouts_param_token_payments"
  /admin/api/unstable/checkouts/{token}/payments/{payment_id}.json:
    get:
      summary: "Retrieves the payment information for an existing payment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#show-unstable"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
        - in: "path"
          name: "payment_id"
          required: true
          schema:
            type: "string"
          description: "payment_id"
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_checkouts_param_token_payments_param_payment_id"
  /admin/api/unstable/checkouts/{token}/payments/count.json:
    get:
      summary: "Counts the number of payments attempted on a checkout"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/payment#count-unstable"
      parameters:
        - in: "path"
          name: "token"
          required: true
          schema:
            type: "string"
          description: "token"
      tags:
        - "sales-channels"
        - "payment"
        - "sales-channels/payment"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_checkouts_param_token_payments_count"
  /admin/api/2020-01/product_listings.json:
    get:
      summary: "Retrieve product listings that are published to your app. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/productlisting#index-2020-01"
      parameters:
        - in: "query"
          name: "product_ids"
          description: "A comma-separated list of product ids"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "Amount of results\n                  (default: 50, maximum: 1000)"
          schema: {}
          required: false
        - in: "query"
          name: "collection_id"
          description: "Filter by products belonging to a particular collection"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Filter by products last updated after a certain date and time (formatted in ISO 8601)"
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Filter by product handle"
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "productlisting"
        - "sales-channels/productlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_product_listings"
  /admin/api/2020-01/product_listings/product_ids.json:
    get:
      summary: "Retrieve product_ids that are published to your app. Maximum 1,000 results per page."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/productlisting#product_ids-2020-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "Amount of results\n                  (default: 50, maximum: 1000)"
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "productlisting"
        - "sales-channels/productlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_product_listings_product_ids"
  /admin/api/2020-01/product_listings/count.json:
    get:
      summary: "Retrieve a count of products that are published to your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/productlisting#count-2020-01"
      parameters: []
      tags:
        - "sales-channels"
        - "productlisting"
        - "sales-channels/productlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_product_listings_count"
  /admin/api/2020-01/product_listings/{product_listing_id}.json:
    get:
      summary: "Retrieve a specific product listing that is published to your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/productlisting#show-2020-01"
      parameters:
        - in: "path"
          name: "product_listing_id"
          required: true
          schema:
            type: "string"
          description: "product_listing_id"
      tags:
        - "sales-channels"
        - "productlisting"
        - "sales-channels/productlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_product_listings_param_product_listing_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  product_listing:
                    product_id: 921728736
                summary: "Create a product listing to publish a product to your app"
      summary: "Create a product listing to publish a product to your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/productlisting#create-2020-01"
      parameters:
        - in: "path"
          name: "product_listing_id"
          required: true
          schema:
            type: "string"
          description: "product_listing_id"
      tags:
        - "sales-channels"
        - "productlisting"
        - "sales-channels/productlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_product_listings_param_product_listing_id"
    delete:
      summary: "Delete a product listing to unpublish a product from your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/productlisting#destroy-2020-01"
      parameters:
        - in: "path"
          name: "product_listing_id"
          required: true
          schema:
            type: "string"
          description: "product_listing_id"
      tags:
        - "sales-channels"
        - "productlisting"
        - "sales-channels/productlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_product_listings_param_product_listing_id"
  /admin/api/2020-04/product_listings.json:
    get:
      summary: "Retrieve product listings that are published to your app. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/productlisting#index-2020-04"
      parameters:
        - in: "query"
          name: "product_ids"
          description: "A comma-separated list of product ids"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "Amount of results\n                  (default: 50, maximum: 1000)"
          schema: {}
          required: false
        - in: "query"
          name: "collection_id"
          description: "Filter by products belonging to a particular collection"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Filter by products last updated after a certain date and time (formatted in ISO 8601)"
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Filter by product handle"
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "productlisting"
        - "sales-channels/productlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_product_listings"
  /admin/api/2020-04/product_listings/product_ids.json:
    get:
      summary: "Retrieve product_ids that are published to your app. Maximum 1,000 results per page."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/productlisting#product_ids-2020-04"
      parameters:
        - in: "query"
          name: "limit"
          description: "Amount of results\n                  (default: 50, maximum: 1000)"
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "productlisting"
        - "sales-channels/productlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_product_listings_product_ids"
  /admin/api/2020-04/product_listings/count.json:
    get:
      summary: "Retrieve a count of products that are published to your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/productlisting#count-2020-04"
      parameters: []
      tags:
        - "sales-channels"
        - "productlisting"
        - "sales-channels/productlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_product_listings_count"
  /admin/api/2020-04/product_listings/{product_listing_id}.json:
    get:
      summary: "Retrieve a specific product listing that is published to your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/productlisting#show-2020-04"
      parameters:
        - in: "path"
          name: "product_listing_id"
          required: true
          schema:
            type: "string"
          description: "product_listing_id"
      tags:
        - "sales-channels"
        - "productlisting"
        - "sales-channels/productlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_product_listings_param_product_listing_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  product_listing:
                    product_id: 921728736
                summary: "Create a product listing to publish a product to your app"
      summary: "Create a product listing to publish a product to your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/productlisting#create-2020-04"
      parameters:
        - in: "path"
          name: "product_listing_id"
          required: true
          schema:
            type: "string"
          description: "product_listing_id"
      tags:
        - "sales-channels"
        - "productlisting"
        - "sales-channels/productlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_product_listings_param_product_listing_id"
    delete:
      summary: "Delete a product listing to unpublish a product from your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/productlisting#destroy-2020-04"
      parameters:
        - in: "path"
          name: "product_listing_id"
          required: true
          schema:
            type: "string"
          description: "product_listing_id"
      tags:
        - "sales-channels"
        - "productlisting"
        - "sales-channels/productlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_product_listings_param_product_listing_id"
  /admin/api/2020-07/product_listings.json:
    get:
      summary: "Retrieve product listings that are published to your app. Note: As of version 2019-07, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/productlisting#index-2020-07"
      parameters:
        - in: "query"
          name: "product_ids"
          description: "A comma-separated list of product ids"
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "Amount of results\n                  (default: 50, maximum: 1000)"
          schema: {}
          required: false
        - in: "query"
          name: "collection_id"
          description: "Filter by products belonging to a particular collection"
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Filter by products last updated after a certain date and time (formatted in ISO 8601)"
          schema: {}
          required: false
        - in: "query"
          name: "handle"
          description: "Filter by product handle"
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "productlisting"
        - "sales-channels/productlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_product_listings"
  /admin/api/2020-07/product_listings/product_ids.json:
    get:
      summary: "Retrieve product_ids that are published to your app. Maximum 1,000 results per page."
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/productlisting#product_ids-2020-07"
      parameters:
        - in: "query"
          name: "limit"
          description: "Amount of results\n                  (default: 50, maximum: 1000)"
          schema: {}
          required: false
      tags:
        - "sales-channels"
        - "productlisting"
        - "sales-channels/productlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_product_listings_product_ids"
  /admin/api/2020-07/product_listings/count.json:
    get:
      summary: "Retrieve a count of products that are published to your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/productlisting#count-2020-07"
      parameters: []
      tags:
        - "sales-channels"
        - "productlisting"
        - "sales-channels/productlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_product_listings_count"
  /admin/api/2020-07/product_listings/{product_listing_id}.json:
    get:
      summary: "Retrieve a specific product listing that is published to your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/productlisting#show-2020-07"
      parameters:
        - in: "path"
          name: "product_listing_id"
          required: true
          schema:
            type: "string"
          description: "product_listing_id"
      tags:
        - "sales-channels"
        - "productlisting"
        - "sales-channels/productlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_product_listings_param_product_listing_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  product_listing:
                    product_id: 921728736
                summary: "Create a product listing to publish a product to your app"
      summary: "Create a product listing to publish a product to your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/productlisting#create-2020-07"
      parameters:
        - in: "path"
          name: "product_listing_id"
          required: true
          schema:
            type: "string"
          description: "product_listing_id"
      tags:
        - "sales-channels"
        - "productlisting"
        - "sales-channels/productlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_product_listings_param_product_listing_id"
    delete:
      summary: "Delete a product listing to unpublish a product from your app"
      description: "https://shopify.dev/docs/admin-api/rest/reference/sales-channels/productlisting#destroy-2020-07"
      parameters:
        - in: "path"
          name: "product_listing_id"
          required: true
          schema:
            type: "string"
          description: "product_listing_id"
      tags:
        - "sales-channels"
        - "productlisting"
        - "sales-channels/productlisting"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_product_listings_param_product_listing_id"
  /admin/api/2020-01/assigned_fulfillment_orders.json:
    get:
      summary: "Retrieves a list of fulfillment orders on a shop for a specific app."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/assignedfulfillmentorder#index-2020-01"
      parameters:
        - in: "query"
          name: "assignment_status"
          description: "The assigment status of the fulfillment orders that should be returned:\n                    \n                        cancellation_requested: Fulfillment orders for which the merchant has requested cancellation of the previously accepted fulfillment request.\n                        fulfillment_requested: Fulfillment orders for which the merchant has requested fulfillment.\n                        fulfillment_accepted: Fulfillment orders for which the merchant's fulfillment request has been accepted. Any number of fulfillments can be created on these fulfillment orders to completely fulfill the requested items."
          schema: {}
          required: false
        - in: "query"
          name: "location_ids"
          description: "The IDs of the assigned locations of the fulfillment orders that should be returned."
          schema: {}
          required: false
        - in: "query"
          name: "location_ids[]"
          schema:
            type: "integer"
          description: "location_ids[]"
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "assignedfulfillmentorder"
        - "shipping-and-fulfillment/assignedfulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_assigned_fulfillment_orders"
  /admin/api/2020-04/assigned_fulfillment_orders.json:
    get:
      summary: "Retrieves a list of fulfillment orders on a shop for a specific app."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/assignedfulfillmentorder#index-2020-04"
      parameters:
        - in: "query"
          name: "assignment_status"
          description: "The assigment status of the fulfillment orders that should be returned:\n                    \n                        cancellation_requested: Fulfillment orders for which the merchant has requested cancellation of the previously accepted fulfillment request.\n                        fulfillment_requested: Fulfillment orders for which the merchant has requested fulfillment.\n                        fulfillment_accepted: Fulfillment orders for which the merchant's fulfillment request has been accepted. Any number of fulfillments can be created on these fulfillment orders to completely fulfill the requested items."
          schema: {}
          required: false
        - in: "query"
          name: "location_ids"
          description: "The IDs of the assigned locations of the fulfillment orders that should be returned."
          schema: {}
          required: false
        - in: "query"
          name: "location_ids[]"
          schema:
            type: "integer"
          description: "location_ids[]"
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "assignedfulfillmentorder"
        - "shipping-and-fulfillment/assignedfulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_assigned_fulfillment_orders"
  /admin/api/2020-07/assigned_fulfillment_orders.json:
    get:
      summary: "Retrieves a list of fulfillment orders on a shop for a specific app."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/assignedfulfillmentorder#index-2020-07"
      parameters:
        - in: "query"
          name: "assignment_status"
          description: "The assigment status of the fulfillment orders that should be returned:\n                    \n                        cancellation_requested: Fulfillment orders for which the merchant has requested cancellation of the previously accepted fulfillment request.\n                        fulfillment_requested: Fulfillment orders for which the merchant has requested fulfillment.\n                        fulfillment_accepted: Fulfillment orders for which the merchant's fulfillment request has been accepted. Any number of fulfillments can be created on these fulfillment orders to completely fulfill the requested items."
          schema: {}
          required: false
        - in: "query"
          name: "location_ids"
          description: "The IDs of the assigned locations of the fulfillment orders that should be returned."
          schema: {}
          required: false
        - in: "query"
          name: "location_ids[]"
          schema:
            type: "integer"
          description: "location_ids[]"
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "assignedfulfillmentorder"
        - "shipping-and-fulfillment/assignedfulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_assigned_fulfillment_orders"
  /admin/api/2020-10/assigned_fulfillment_orders.json:
    get:
      summary: "Retrieves a list of fulfillment orders on a shop for a specific app."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/assignedfulfillmentorder#index-2020-10"
      parameters:
        - in: "query"
          name: "assignment_status"
          description: "The assigment status of the fulfillment orders that should be returned:\n                    \n                        cancellation_requested: Fulfillment orders for which the merchant has requested cancellation of the previously accepted fulfillment request.\n                        fulfillment_requested: Fulfillment orders for which the merchant has requested fulfillment.\n                        fulfillment_accepted: Fulfillment orders for which the merchant's fulfillment request has been accepted. Any number of fulfillments can be created on these fulfillment orders to completely fulfill the requested items."
          schema: {}
          required: false
        - in: "query"
          name: "location_ids"
          description: "The IDs of the assigned locations of the fulfillment orders that should be returned."
          schema: {}
          required: false
        - in: "query"
          name: "location_ids[]"
          schema:
            type: "integer"
          description: "location_ids[]"
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "assignedfulfillmentorder"
        - "shipping-and-fulfillment/assignedfulfillmentorder"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_assigned_fulfillment_orders"
  /admin/api/2021-01/assigned_fulfillment_orders.json:
    get:
      summary: "Retrieves a list of fulfillment orders on a shop for a specific app."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/assignedfulfillmentorder#index-2021-01"
      parameters:
        - in: "query"
          name: "assignment_status"
          description: "The assigment status of the fulfillment orders that should be returned:\n                    \n                        cancellation_requested: Fulfillment orders for which the merchant has requested cancellation of the previously accepted fulfillment request.\n                        fulfillment_requested: Fulfillment orders for which the merchant has requested fulfillment.\n                        fulfillment_accepted: Fulfillment orders for which the merchant's fulfillment request has been accepted. Any number of fulfillments can be created on these fulfillment orders to completely fulfill the requested items."
          schema: {}
          required: false
        - in: "query"
          name: "location_ids"
          description: "The IDs of the assigned locations of the fulfillment orders that should be returned."
          schema: {}
          required: false
        - in: "query"
          name: "location_ids[]"
          schema:
            type: "integer"
          description: "location_ids[]"
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "assignedfulfillmentorder"
        - "shipping-and-fulfillment/assignedfulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_assigned_fulfillment_orders"
  /admin/api/unstable/assigned_fulfillment_orders.json:
    get:
      summary: "Retrieves a list of fulfillment orders on a shop for a specific app."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/assignedfulfillmentorder#index-unstable"
      parameters:
        - in: "query"
          name: "assignment_status"
          description: "The assigment status of the fulfillment orders that should be returned:\n                    \n                        cancellation_requested: Fulfillment orders for which the merchant has requested cancellation of the previously accepted fulfillment request.\n                        fulfillment_requested: Fulfillment orders for which the merchant has requested fulfillment.\n                        fulfillment_accepted: Fulfillment orders for which the merchant's fulfillment request has been accepted. Any number of fulfillments can be created on these fulfillment orders to completely fulfill the requested items."
          schema: {}
          required: false
        - in: "query"
          name: "location_ids"
          description: "The IDs of the assigned locations of the fulfillment orders that should be returned."
          schema: {}
          required: false
        - in: "query"
          name: "location_ids[]"
          schema:
            type: "integer"
          description: "location_ids[]"
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "assignedfulfillmentorder"
        - "shipping-and-fulfillment/assignedfulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_assigned_fulfillment_orders"
  /admin/api/2020-01/fulfillment_orders/{fulfillment_order_id}/cancellation_request.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  cancellation_request:
                    message: "The customer changed his mind."
                summary: "Sends a cancellation request to the fulfillment service of a fulfillment order and updates the fulfillment order"
      summary: "Sends a cancellation request to the fulfillment service of a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/cancellationrequest#create-2020-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for the cancellation request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "cancellationrequest"
        - "shipping-and-fulfillment/cancellationrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_fulfillment_orders_param_fulfillment_order_id_cancellation_request"
  /admin/api/2020-01/fulfillment_orders/{fulfillment_order_id}/cancellation_request/accept.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  cancellation_request:
                    message: "We had not started any processing yet."
                summary: "Accepts a cancellation request sent to a fulfillment service and updates the fulfillment order"
      summary: "Accepts a cancellation request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/cancellationrequest#accept-2020-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for accepting the cancellation request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "cancellationrequest"
        - "shipping-and-fulfillment/cancellationrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_fulfillment_orders_param_fulfillment_order_id_cancellation_request_accept"
  /admin/api/2020-01/fulfillment_orders/{fulfillment_order_id}/cancellation_request/reject.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  cancellation_request:
                    message: "We have already send the shipment out."
                summary: "Rejects a cancellation request sent to a fulfillment service and updates the fulfillment order"
      summary: "Rejects a cancellation request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/cancellationrequest#reject-2020-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for rejecting the cancellation request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "cancellationrequest"
        - "shipping-and-fulfillment/cancellationrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_fulfillment_orders_param_fulfillment_order_id_cancellation_request_reject"
  /admin/api/2020-04/fulfillment_orders/{fulfillment_order_id}/cancellation_request.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  cancellation_request:
                    message: "The customer changed his mind."
                summary: "Sends a cancellation request to the fulfillment service of a fulfillment order and updates the fulfillment order"
      summary: "Sends a cancellation request to the fulfillment service of a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/cancellationrequest#create-2020-04"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for the cancellation request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "cancellationrequest"
        - "shipping-and-fulfillment/cancellationrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_fulfillment_orders_param_fulfillment_order_id_cancellation_request"
  /admin/api/2020-04/fulfillment_orders/{fulfillment_order_id}/cancellation_request/accept.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  cancellation_request:
                    message: "We had not started any processing yet."
                summary: "Accepts a cancellation request sent to a fulfillment service and updates the fulfillment order"
      summary: "Accepts a cancellation request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/cancellationrequest#accept-2020-04"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for accepting the cancellation request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "cancellationrequest"
        - "shipping-and-fulfillment/cancellationrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_fulfillment_orders_param_fulfillment_order_id_cancellation_request_accept"
  /admin/api/2020-04/fulfillment_orders/{fulfillment_order_id}/cancellation_request/reject.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  cancellation_request:
                    message: "We have already send the shipment out."
                summary: "Rejects a cancellation request sent to a fulfillment service and updates the fulfillment order"
      summary: "Rejects a cancellation request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/cancellationrequest#reject-2020-04"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for rejecting the cancellation request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "cancellationrequest"
        - "shipping-and-fulfillment/cancellationrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_fulfillment_orders_param_fulfillment_order_id_cancellation_request_reject"
  /admin/api/2020-07/fulfillment_orders/{fulfillment_order_id}/cancellation_request.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  cancellation_request:
                    message: "The customer changed his mind."
                summary: "Sends a cancellation request to the fulfillment service of a fulfillment order and updates the fulfillment order"
      summary: "Sends a cancellation request to the fulfillment service of a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/cancellationrequest#create-2020-07"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for the cancellation request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "cancellationrequest"
        - "shipping-and-fulfillment/cancellationrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_fulfillment_orders_param_fulfillment_order_id_cancellation_request"
  /admin/api/2020-07/fulfillment_orders/{fulfillment_order_id}/cancellation_request/accept.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  cancellation_request:
                    message: "We had not started any processing yet."
                summary: "Accepts a cancellation request sent to a fulfillment service and updates the fulfillment order"
      summary: "Accepts a cancellation request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/cancellationrequest#accept-2020-07"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for accepting the cancellation request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "cancellationrequest"
        - "shipping-and-fulfillment/cancellationrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_fulfillment_orders_param_fulfillment_order_id_cancellation_request_accept"
  /admin/api/2020-07/fulfillment_orders/{fulfillment_order_id}/cancellation_request/reject.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  cancellation_request:
                    message: "We have already send the shipment out."
                summary: "Rejects a cancellation request sent to a fulfillment service and updates the fulfillment order"
      summary: "Rejects a cancellation request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/cancellationrequest#reject-2020-07"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for rejecting the cancellation request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "cancellationrequest"
        - "shipping-and-fulfillment/cancellationrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_fulfillment_orders_param_fulfillment_order_id_cancellation_request_reject"
  /admin/api/2020-10/fulfillment_orders/{fulfillment_order_id}/cancellation_request.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  cancellation_request:
                    message: "The customer changed his mind."
                summary: "Sends a cancellation request to the fulfillment service of a fulfillment order and updates the fulfillment order"
      summary: "Sends a cancellation request to the fulfillment service of a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/cancellationrequest#create-2020-10"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for the cancellation request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "cancellationrequest"
        - "shipping-and-fulfillment/cancellationrequest"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_fulfillment_orders_param_fulfillment_order_id_cancellation_request"
  /admin/api/2020-10/fulfillment_orders/{fulfillment_order_id}/cancellation_request/accept.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  cancellation_request:
                    message: "We had not started any processing yet."
                summary: "Accepts a cancellation request sent to a fulfillment service and updates the fulfillment order"
      summary: "Accepts a cancellation request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/cancellationrequest#accept-2020-10"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for accepting the cancellation request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "cancellationrequest"
        - "shipping-and-fulfillment/cancellationrequest"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_fulfillment_orders_param_fulfillment_order_id_cancellation_request_accept"
  /admin/api/2020-10/fulfillment_orders/{fulfillment_order_id}/cancellation_request/reject.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  cancellation_request:
                    message: "We have already send the shipment out."
                summary: "Rejects a cancellation request sent to a fulfillment service and updates the fulfillment order"
      summary: "Rejects a cancellation request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/cancellationrequest#reject-2020-10"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for rejecting the cancellation request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "cancellationrequest"
        - "shipping-and-fulfillment/cancellationrequest"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_fulfillment_orders_param_fulfillment_order_id_cancellation_request_reject"
  /admin/api/2021-01/fulfillment_orders/{fulfillment_order_id}/cancellation_request.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  cancellation_request:
                    message: "The customer changed his mind."
                summary: "Sends a cancellation request to the fulfillment service of a fulfillment order and updates the fulfillment order"
      summary: "Sends a cancellation request to the fulfillment service of a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/cancellationrequest#create-2021-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for the cancellation request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "cancellationrequest"
        - "shipping-and-fulfillment/cancellationrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_fulfillment_orders_param_fulfillment_order_id_cancellation_request"
  /admin/api/2021-01/fulfillment_orders/{fulfillment_order_id}/cancellation_request/accept.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  cancellation_request:
                    message: "We had not started any processing yet."
                summary: "Accepts a cancellation request sent to a fulfillment service and updates the fulfillment order"
      summary: "Accepts a cancellation request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/cancellationrequest#accept-2021-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for accepting the cancellation request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "cancellationrequest"
        - "shipping-and-fulfillment/cancellationrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_fulfillment_orders_param_fulfillment_order_id_cancellation_request_accept"
  /admin/api/2021-01/fulfillment_orders/{fulfillment_order_id}/cancellation_request/reject.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  cancellation_request:
                    message: "We have already send the shipment out."
                summary: "Rejects a cancellation request sent to a fulfillment service and updates the fulfillment order"
      summary: "Rejects a cancellation request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/cancellationrequest#reject-2021-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for rejecting the cancellation request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "cancellationrequest"
        - "shipping-and-fulfillment/cancellationrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_fulfillment_orders_param_fulfillment_order_id_cancellation_request_reject"
  /admin/api/unstable/fulfillment_orders/{fulfillment_order_id}/cancellation_request.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  cancellation_request:
                    message: "The customer changed his mind."
                summary: "Sends a cancellation request to the fulfillment service of a fulfillment order and updates the fulfillment order"
      summary: "Sends a cancellation request to the fulfillment service of a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/cancellationrequest#create-unstable"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for the cancellation request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "cancellationrequest"
        - "shipping-and-fulfillment/cancellationrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_fulfillment_orders_param_fulfillment_order_id_cancellation_request"
  /admin/api/unstable/fulfillment_orders/{fulfillment_order_id}/cancellation_request/accept.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  cancellation_request:
                    message: "We had not started any processing yet."
                summary: "Accepts a cancellation request sent to a fulfillment service and updates the fulfillment order"
      summary: "Accepts a cancellation request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/cancellationrequest#accept-unstable"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for accepting the cancellation request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "cancellationrequest"
        - "shipping-and-fulfillment/cancellationrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_fulfillment_orders_param_fulfillment_order_id_cancellation_request_accept"
  /admin/api/unstable/fulfillment_orders/{fulfillment_order_id}/cancellation_request/reject.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  cancellation_request:
                    message: "We have already send the shipment out."
                summary: "Rejects a cancellation request sent to a fulfillment service and updates the fulfillment order"
      summary: "Rejects a cancellation request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/cancellationrequest#reject-unstable"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for rejecting the cancellation request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "cancellationrequest"
        - "shipping-and-fulfillment/cancellationrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_fulfillment_orders_param_fulfillment_order_id_cancellation_request_reject"
  /admin/api/2020-01/carrier_services.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  carrier_service:
                    name: "Shipping Rate Provider"
                    callback_url: "http://shippingrateprovider.com"
                    service_discovery: true
                summary: "Create a carrier service"
      summary: "Creates a carrier service"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#create-2020-01"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_carrier_services"
    get:
      summary: "Retrieves a list of carrier services"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#index-2020-01"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_carrier_services"
  /admin/api/2020-01/carrier_services/{carrier_service_id}.json:
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  carrier_service:
                    id: 1036894957
                    name: "Some new name"
                    active: false
                summary: "Update a carrier service"
      summary: "Updates a carrier service. Only the app that creates a carrier service can update it."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#update-2020-01"
      parameters:
        - in: "path"
          name: "carrier_service_id"
          required: true
          schema:
            type: "string"
          description: "carrier_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_carrier_services_param_carrier_service_id"
    get:
      summary: "Retrieves a single carrier service by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#show-2020-01"
      parameters:
        - in: "path"
          name: "carrier_service_id"
          required: true
          schema:
            type: "string"
          description: "carrier_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_carrier_services_param_carrier_service_id"
    delete:
      summary: "Deletes a carrier service"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#destroy-2020-01"
      parameters:
        - in: "path"
          name: "carrier_service_id"
          required: true
          schema:
            type: "string"
          description: "carrier_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_carrier_services_param_carrier_service_id"
  /admin/api/2020-04/carrier_services.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  carrier_service:
                    name: "Shipping Rate Provider"
                    callback_url: "http://shippingrateprovider.com"
                    service_discovery: true
                summary: "Create a carrier service"
      summary: "Creates a carrier service"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#create-2020-04"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_carrier_services"
    get:
      summary: "Retrieves a list of carrier services"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#index-2020-04"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_carrier_services"
  /admin/api/2020-04/carrier_services/{carrier_service_id}.json:
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  carrier_service:
                    id: 1036894957
                    name: "Some new name"
                    active: false
                summary: "Update a carrier service"
      summary: "Updates a carrier service. Only the app that creates a carrier service can update it."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#update-2020-04"
      parameters:
        - in: "path"
          name: "carrier_service_id"
          required: true
          schema:
            type: "string"
          description: "carrier_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_carrier_services_param_carrier_service_id"
    get:
      summary: "Retrieves a single carrier service by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#show-2020-04"
      parameters:
        - in: "path"
          name: "carrier_service_id"
          required: true
          schema:
            type: "string"
          description: "carrier_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_carrier_services_param_carrier_service_id"
    delete:
      summary: "Deletes a carrier service"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#destroy-2020-04"
      parameters:
        - in: "path"
          name: "carrier_service_id"
          required: true
          schema:
            type: "string"
          description: "carrier_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_carrier_services_param_carrier_service_id"
  /admin/api/2020-07/carrier_services.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  carrier_service:
                    name: "Shipping Rate Provider"
                    callback_url: "http://shippingrateprovider.com"
                    service_discovery: true
                summary: "Create a carrier service"
      summary: "Creates a carrier service"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#create-2020-07"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_carrier_services"
    get:
      summary: "Retrieves a list of carrier services"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#index-2020-07"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_carrier_services"
  /admin/api/2020-07/carrier_services/{carrier_service_id}.json:
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  carrier_service:
                    id: 1036894957
                    name: "Some new name"
                    active: false
                summary: "Update a carrier service"
      summary: "Updates a carrier service. Only the app that creates a carrier service can update it."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#update-2020-07"
      parameters:
        - in: "path"
          name: "carrier_service_id"
          required: true
          schema:
            type: "string"
          description: "carrier_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_carrier_services_param_carrier_service_id"
    get:
      summary: "Retrieves a single carrier service by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#show-2020-07"
      parameters:
        - in: "path"
          name: "carrier_service_id"
          required: true
          schema:
            type: "string"
          description: "carrier_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_carrier_services_param_carrier_service_id"
    delete:
      summary: "Deletes a carrier service"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#destroy-2020-07"
      parameters:
        - in: "path"
          name: "carrier_service_id"
          required: true
          schema:
            type: "string"
          description: "carrier_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_carrier_services_param_carrier_service_id"
  /admin/api/2020-10/carrier_services.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  carrier_service:
                    name: "Shipping Rate Provider"
                    callback_url: "http://shippingrateprovider.com"
                    service_discovery: true
                summary: "Create a carrier service"
      summary: "Creates a carrier service"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#create-2020-10"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_carrier_services"
    get:
      summary: "Retrieves a list of carrier services"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#index-2020-10"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_carrier_services"
  /admin/api/2020-10/carrier_services/{carrier_service_id}.json:
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  carrier_service:
                    id: 1036894957
                    name: "Some new name"
                    active: false
                summary: "Update a carrier service"
      summary: "Updates a carrier service. Only the app that creates a carrier service can update it."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#update-2020-10"
      parameters:
        - in: "path"
          name: "carrier_service_id"
          required: true
          schema:
            type: "string"
          description: "carrier_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_carrier_services_param_carrier_service_id"
    get:
      summary: "Retrieves a single carrier service by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#show-2020-10"
      parameters:
        - in: "path"
          name: "carrier_service_id"
          required: true
          schema:
            type: "string"
          description: "carrier_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_carrier_services_param_carrier_service_id"
    delete:
      summary: "Deletes a carrier service"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#destroy-2020-10"
      parameters:
        - in: "path"
          name: "carrier_service_id"
          required: true
          schema:
            type: "string"
          description: "carrier_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_carrier_services_param_carrier_service_id"
  /admin/api/2021-01/carrier_services.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  carrier_service:
                    name: "Shipping Rate Provider"
                    callback_url: "http://shippingrateprovider.com"
                    service_discovery: true
                summary: "Create a carrier service"
      summary: "Creates a carrier service"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#create-2021-01"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_carrier_services"
    get:
      summary: "Retrieves a list of carrier services"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#index-2021-01"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_carrier_services"
  /admin/api/2021-01/carrier_services/{carrier_service_id}.json:
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  carrier_service:
                    id: 1036894957
                    name: "Some new name"
                    active: false
                summary: "Update a carrier service"
      summary: "Updates a carrier service. Only the app that creates a carrier service can update it."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#update-2021-01"
      parameters:
        - in: "path"
          name: "carrier_service_id"
          required: true
          schema:
            type: "string"
          description: "carrier_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_carrier_services_param_carrier_service_id"
    get:
      summary: "Retrieves a single carrier service by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#show-2021-01"
      parameters:
        - in: "path"
          name: "carrier_service_id"
          required: true
          schema:
            type: "string"
          description: "carrier_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_carrier_services_param_carrier_service_id"
    delete:
      summary: "Deletes a carrier service"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#destroy-2021-01"
      parameters:
        - in: "path"
          name: "carrier_service_id"
          required: true
          schema:
            type: "string"
          description: "carrier_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_carrier_services_param_carrier_service_id"
  /admin/api/unstable/carrier_services.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  carrier_service:
                    name: "Shipping Rate Provider"
                    callback_url: "http://shippingrateprovider.com"
                    service_discovery: true
                summary: "Create a carrier service"
      summary: "Creates a carrier service"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#create-unstable"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_carrier_services"
    get:
      summary: "Retrieves a list of carrier services"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#index-unstable"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_carrier_services"
  /admin/api/unstable/carrier_services/{carrier_service_id}.json:
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  carrier_service:
                    id: 1036894957
                    name: "Some new name"
                    active: false
                summary: "Update a carrier service"
      summary: "Updates a carrier service. Only the app that creates a carrier service can update it."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#update-unstable"
      parameters:
        - in: "path"
          name: "carrier_service_id"
          required: true
          schema:
            type: "string"
          description: "carrier_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_carrier_services_param_carrier_service_id"
    get:
      summary: "Retrieves a single carrier service by its ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#show-unstable"
      parameters:
        - in: "path"
          name: "carrier_service_id"
          required: true
          schema:
            type: "string"
          description: "carrier_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_carrier_services_param_carrier_service_id"
    delete:
      summary: "Deletes a carrier service"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/carrierservice#destroy-unstable"
      parameters:
        - in: "path"
          name: "carrier_service_id"
          required: true
          schema:
            type: "string"
          description: "carrier_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "carrierservice"
        - "shipping-and-fulfillment/carrierservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_carrier_services_param_carrier_service_id"
  /admin/api/2020-01/orders/{order_id}/fulfillments.json:
    get:
      summary: "Retrieves fulfillments associated with an order. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#index-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "created_at_max"
          description: "Show fulfillments created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show fulfillments created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "Limit the amount of results.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show fulfillments last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show fulfillments last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_orders_param_order_id_fulfillments"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    location_id: 487838322
                    tracking_number: "123456789"
                    tracking_urls:
                      - "https://shipping.xyz/track.php?num=123456789"
                      - "https://anothershipper.corp/track.php?code=abc"
                    notify_customer: true
                summary: "Fulfill all line items for an order and send the shipping confirmation email. Not specifying line item IDs causes all unfulfilled and partially fulfilled line items for the order to be fulfilled."
              example2:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: null
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill line items without a tracking number"
              example3:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_numbers:
                      - "04263ac9875a5cdc27996db6865a3e91"
                      - "74a62cd540170b8ef633f90d584daadf"
                      - "d9d423437dc58dbb54a76908573239bc"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill all line items for an order with multiple tracking numbers"
              example4:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_url: "http://www.packagetrackr.com/track/somecarrier/1234567"
                    tracking_company: "Jack Black's Pack, Stack and Track"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill all line items for an order and use a custom tracking URL and company"
              example5:
                value:
                  fulfillment:
                    tracking_url: "http://www.packagetrackr.com/track/somecarrier/1234567"
                    tracking_company: "Jack Black's Pack, Stack and Track"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill without a location_id results in a bad request"
              example6:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "123456789"
                    tracking_company: "4PX"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a supported tracking company (generates tracking URL)"
              example7:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "123456789010"
                    tracking_company: "fed ex"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a supported tracking company in an incorrect format (uses fuzzy matches to generate tracking URL, but respects tracking company supplied)"
              example8:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "123456789010"
                    tracking_company: "fed ex"
                    tracking_url: "https://www.new-fedex-tracking.com/?number=123456789010"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a supported tracking company in an incorrect format and custom tracking URL (respects sent URL)"
              example9:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "RR123456789CN"
                    tracking_company: "Chinese Post"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a non-supported tracking company without a tracking URL (generates best guess URL if number matches recognizable pattern)"
              example10:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "1234567"
                    tracking_company: "Custom Tracking Company"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a non-supported tracking company without a tracking URL. Does not generate a URL if tracking number does not match a recognizable pattern."
              example11:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "CJ274101086US"
                    tracking_url: "http://www.custom-tracking.com/?tracking_number=CJ274101086US"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using only a tracking number and a custom tracking URL (respects tracking URL but attempts to generate tracking company if number matches recognizable pattern)"
              example12:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: null
                    line_items:
                      - id: 518995019
                summary: "Fulfill a single line item by explicitly specifying the line items to be fulfilled"
              example13:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: null
                    line_items:
                      - id: 518995019
                        quantity: 1
                summary: "Partially fulfill a single line item by specifying a line item and quantity to be fulfilled"
      summary: "Create a fulfillment for the specified order and line items.\n          The fulfillment's status depends on the line items in the order:\n          \n          If the line items in the fulfillment use a manual or custom fulfillment service, then the status of the returned fulfillment will be set immediately.\n          If the line items use an external fulfillment service, then they will be queued for fulfillment and the status will be set to pending until the external fulfillment service has been invoked.\n          \n          \n          A fulfillment might then transition to open, which implies it is being processed by the service, before transitioning to success when the items have shipped.\n          If you don't specify line item IDs, then all unfulfilled and partially fulfilled line items for the order will be fulfilled.\n          However, if an order is refunded or if any of its individual line items are refunded, then the order can't be fulfilled.\n          \n          All line items being fulfilled must have the same fulfillment service.\n          \n          \n            Note\n            If you are using this endpoint with a Partner development store or a trial store, then you can create no more than 5 new fulfillments per minute.\n          \n          About tracking urls\n           If you're creating a fulfillment for a supported carrier, then you can send the tracking_company and tracking_numbers fields, and Shopify will generate the tracking_url for you. If you're creating a fulfillment for an unsupported carrier (not in the tracking_company list), then send the tracking_company, tracking_numbers, and tracking_urls fields.\n           \n          \n            Note\n            If you send an unsupported carrier without a tracking URL, then Shopify will still try to generate a valid tracking URL by using pattern matching on the tracking number. However, Shopify does not validate the tracking URL, so you should make sure that your tracking URL is correct for the order and fulfillment."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#create-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_orders_param_order_id_fulfillments"
  /admin/api/2020-01/fulfillment_orders/{fulfillment_order_id}/fulfillments.json:
    get:
      summary: "Retrieves fulfillments associated with a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#indexV2-2020-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "fulfillment_order_id"
          description: "The ID of the fulfillment order that is associated with the fulfillments."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_fulfillment_orders_param_fulfillment_order_id_fulfillments"
  /admin/api/2020-01/orders/{order_id}/fulfillments/count.json:
    get:
      summary: "Retrieves a count of fulfillments associated with a specific order"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#count-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "created_at_min"
          description: "Count fulfillments created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count fulfillments created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count fulfillments last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count fulfillments last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_orders_param_order_id_fulfillments_count"
  /admin/api/2020-01/orders/{order_id}/fulfillments/{fulfillment_id}.json:
    get:
      summary: "Retrieve a specific fulfillment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#show-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "query"
          name: "fields"
          description: "Comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_orders_param_order_id_fulfillments_param_fulfillment_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    tracking_number: "987654321"
                    id: 255858046
                summary: "Update the tracking number for a fulfillment"
      summary: "Update information associated with a fulfillment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#update-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_orders_param_order_id_fulfillments_param_fulfillment_id"
  /admin/api/2020-01/fulfillments.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    message: "The package was shipped this morning."
                    notify_customer: false
                    tracking_info:
                      number: 1562678
                      url: "https://www.my-shipping-company.com"
                      company: "my-shipping-company"
                    line_items_by_fulfillment_order:
                      - fulfillment_order_id: 1046000794
                        fulfillment_order_line_items:
                          - id: 1025578640
                            quantity: 1
                summary: "Create a fulfillment for the fulfillment order line items specified"
              example2:
                value:
                  fulfillment:
                    message: "The package was shipped this morning."
                    notify_customer: false
                    tracking_info:
                      number: 1562678
                      url: "https://www.my-shipping-company.com"
                      company: "my-shipping-company"
                    line_items_by_fulfillment_order:
                      - fulfillment_order_id: 1046000795
                summary: "Creates a fulfillment for all fulfillment order line items if `fulfillment_order_line_items` is left blank"
      summary: "Creates a fulfillment for one or many fulfillment orders. The fulfillment orders are associated with the same order and are assigned to the same location."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#createV2-2020-01"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_fulfillments"
  /admin/api/2020-01/fulfillments/{fulfillment_id}/update_tracking.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    notify_customer: true
                    tracking_info:
                      number: "1111"
                      url: "http://www.my-url.com"
                      company: "my-company"
                summary: "Update the tracking information for a fulfillment"
      summary: "Updates the tracking information for a fulfillment."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#update_tracking-2020-01"
      parameters:
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_fulfillments_param_fulfillment_id_update_tracking"
  /admin/api/2020-01/orders/{order_id}/fulfillments/{fulfillment_id}/complete.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Complete a fulfillment"
      summary: "Mark a fulfillment as complete"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#complete-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_orders_param_order_id_fulfillments_param_fulfillment_id_complete"
  /admin/api/2020-01/orders/{order_id}/fulfillments/{fulfillment_id}/open.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Transition a fulfillment from pending to open"
      summary: "Mark a fulfillment as open"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#open-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_orders_param_order_id_fulfillments_param_fulfillment_id_open"
  /admin/api/2020-01/orders/{order_id}/fulfillments/{fulfillment_id}/cancel.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Cancel a fulfillment for a specific order ID"
      summary: "Cancel a fulfillment for a specific order ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#cancel-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_orders_param_order_id_fulfillments_param_fulfillment_id_cancel"
  /admin/api/2020-01/fulfillments/{fulfillment_id}/cancel.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Cancel a fulfillment"
      summary: "Cancels a fulfillment."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#cancelV2-2020-01"
      parameters:
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_fulfillments_param_fulfillment_id_cancel"
  /admin/api/2020-04/orders/{order_id}/fulfillments.json:
    get:
      summary: "Retrieves fulfillments associated with an order. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#index-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "created_at_max"
          description: "Show fulfillments created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show fulfillments created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "Limit the amount of results.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show fulfillments last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show fulfillments last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_orders_param_order_id_fulfillments"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    location_id: 487838322
                    tracking_number: "123456789"
                    tracking_urls:
                      - "https://shipping.xyz/track.php?num=123456789"
                      - "https://anothershipper.corp/track.php?code=abc"
                    notify_customer: true
                summary: "Fulfill all line items for an order and send the shipping confirmation email. Not specifying line item IDs causes all unfulfilled and partially fulfilled line items for the order to be fulfilled."
              example2:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: null
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill line items without a tracking number"
              example3:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_numbers:
                      - "04263ac9875a5cdc27996db6865a3e91"
                      - "74a62cd540170b8ef633f90d584daadf"
                      - "d9d423437dc58dbb54a76908573239bc"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill all line items for an order with multiple tracking numbers"
              example4:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_url: "http://www.packagetrackr.com/track/somecarrier/1234567"
                    tracking_company: "Jack Black's Pack, Stack and Track"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill all line items for an order and use a custom tracking URL and company"
              example5:
                value:
                  fulfillment:
                    tracking_url: "http://www.packagetrackr.com/track/somecarrier/1234567"
                    tracking_company: "Jack Black's Pack, Stack and Track"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill without a location_id results in a bad request"
              example6:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "123456789"
                    tracking_company: "4PX"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a supported tracking company (generates tracking URL)"
              example7:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "123456789010"
                    tracking_company: "fed ex"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a supported tracking company in an incorrect format (uses fuzzy matches to generate tracking URL, but respects tracking company supplied)"
              example8:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "123456789010"
                    tracking_company: "fed ex"
                    tracking_url: "https://www.new-fedex-tracking.com/?number=123456789010"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a supported tracking company in an incorrect format and custom tracking URL (respects sent URL)"
              example9:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "RR123456789CN"
                    tracking_company: "Chinese Post"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a non-supported tracking company without a tracking URL (generates best guess URL if number matches recognizable pattern)"
              example10:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "1234567"
                    tracking_company: "Custom Tracking Company"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a non-supported tracking company without a tracking URL. Does not generate a URL if tracking number does not match a recognizable pattern."
              example11:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "CJ274101086US"
                    tracking_url: "http://www.custom-tracking.com/?tracking_number=CJ274101086US"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using only a tracking number and a custom tracking URL (respects tracking URL but attempts to generate tracking company if number matches recognizable pattern)"
              example12:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: null
                    line_items:
                      - id: 518995019
                summary: "Fulfill a single line item by explicitly specifying the line items to be fulfilled"
              example13:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: null
                    line_items:
                      - id: 518995019
                        quantity: 1
                summary: "Partially fulfill a single line item by specifying a line item and quantity to be fulfilled"
      summary: "Create a fulfillment for the specified order and line items.\n          The fulfillment's status depends on the line items in the order:\n          \n          If the line items in the fulfillment use a manual or custom fulfillment service, then the status of the returned fulfillment will be set immediately.\n          If the line items use an external fulfillment service, then they will be queued for fulfillment and the status will be set to pending until the external fulfillment service has been invoked.\n          \n          \n          A fulfillment might then transition to open, which implies it is being processed by the service, before transitioning to success when the items have shipped.\n          If you don't specify line item IDs, then all unfulfilled and partially fulfilled line items for the order will be fulfilled.\n          However, if an order is refunded or if any of its individual line items are refunded, then the order can't be fulfilled.\n          \n          All line items being fulfilled must have the same fulfillment service.\n          \n          \n            Note\n            If you are using this endpoint with a Partner development store or a trial store, then you can create no more than 5 new fulfillments per minute.\n          \n          About tracking urls\n           If you're creating a fulfillment for a supported carrier, then you can send the tracking_company and tracking_numbers fields, and Shopify will generate the tracking_url for you. If you're creating a fulfillment for an unsupported carrier (not in the tracking_company list), then send the tracking_company, tracking_numbers, and tracking_urls fields.\n           \n          \n            Note\n            If you send an unsupported carrier without a tracking URL, then Shopify will still try to generate a valid tracking URL by using pattern matching on the tracking number. However, Shopify does not validate the tracking URL, so you should make sure that your tracking URL is correct for the order and fulfillment."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#create-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_orders_param_order_id_fulfillments"
  /admin/api/2020-04/fulfillment_orders/{fulfillment_order_id}/fulfillments.json:
    get:
      summary: "Retrieves fulfillments associated with a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#indexV2-2020-04"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "fulfillment_order_id"
          description: "The ID of the fulfillment order that is associated with the fulfillments."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_fulfillment_orders_param_fulfillment_order_id_fulfillments"
  /admin/api/2020-04/orders/{order_id}/fulfillments/count.json:
    get:
      summary: "Retrieves a count of fulfillments associated with a specific order"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#count-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "created_at_min"
          description: "Count fulfillments created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count fulfillments created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count fulfillments last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count fulfillments last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_orders_param_order_id_fulfillments_count"
  /admin/api/2020-04/orders/{order_id}/fulfillments/{fulfillment_id}.json:
    get:
      summary: "Retrieve a specific fulfillment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#show-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "query"
          name: "fields"
          description: "Comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_orders_param_order_id_fulfillments_param_fulfillment_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    tracking_number: "987654321"
                    id: 255858046
                summary: "Update the tracking number for a fulfillment"
      summary: "Update information associated with a fulfillment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#update-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_orders_param_order_id_fulfillments_param_fulfillment_id"
  /admin/api/2020-04/fulfillments.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    message: "The package was shipped this morning."
                    notify_customer: false
                    tracking_info:
                      number: 1562678
                      url: "https://www.my-shipping-company.com"
                      company: "my-shipping-company"
                    line_items_by_fulfillment_order:
                      - fulfillment_order_id: 1046000794
                        fulfillment_order_line_items:
                          - id: 1025578640
                            quantity: 1
                summary: "Create a fulfillment for the fulfillment order line items specified"
              example2:
                value:
                  fulfillment:
                    message: "The package was shipped this morning."
                    notify_customer: false
                    tracking_info:
                      number: 1562678
                      url: "https://www.my-shipping-company.com"
                      company: "my-shipping-company"
                    line_items_by_fulfillment_order:
                      - fulfillment_order_id: 1046000795
                summary: "Creates a fulfillment for all fulfillment order line items if `fulfillment_order_line_items` is left blank"
      summary: "Creates a fulfillment for one or many fulfillment orders. The fulfillment orders are associated with the same order and are assigned to the same location."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#createV2-2020-04"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_fulfillments"
  /admin/api/2020-04/fulfillments/{fulfillment_id}/update_tracking.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    notify_customer: true
                    tracking_info:
                      number: "1111"
                      url: "http://www.my-url.com"
                      company: "my-company"
                summary: "Update the tracking information for a fulfillment"
      summary: "Updates the tracking information for a fulfillment."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#update_tracking-2020-04"
      parameters:
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_fulfillments_param_fulfillment_id_update_tracking"
  /admin/api/2020-04/orders/{order_id}/fulfillments/{fulfillment_id}/complete.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Complete a fulfillment"
      summary: "Mark a fulfillment as complete"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#complete-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_orders_param_order_id_fulfillments_param_fulfillment_id_complete"
  /admin/api/2020-04/orders/{order_id}/fulfillments/{fulfillment_id}/open.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Transition a fulfillment from pending to open"
      summary: "Mark a fulfillment as open"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#open-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_orders_param_order_id_fulfillments_param_fulfillment_id_open"
  /admin/api/2020-04/orders/{order_id}/fulfillments/{fulfillment_id}/cancel.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Cancel a fulfillment for a specific order ID"
      summary: "Cancel a fulfillment for a specific order ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#cancel-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_orders_param_order_id_fulfillments_param_fulfillment_id_cancel"
  /admin/api/2020-04/fulfillments/{fulfillment_id}/cancel.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Cancel a fulfillment"
      summary: "Cancels a fulfillment."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#cancelV2-2020-04"
      parameters:
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_fulfillments_param_fulfillment_id_cancel"
  /admin/api/2020-07/orders/{order_id}/fulfillments.json:
    get:
      summary: "Retrieves fulfillments associated with an order. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#index-2020-07"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "created_at_max"
          description: "Show fulfillments created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show fulfillments created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "Limit the amount of results.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show fulfillments last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show fulfillments last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_orders_param_order_id_fulfillments"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    location_id: 487838322
                    tracking_number: "123456789"
                    tracking_urls:
                      - "https://shipping.xyz/track.php?num=123456789"
                      - "https://anothershipper.corp/track.php?code=abc"
                    notify_customer: true
                summary: "Fulfill all line items for an order and send the shipping confirmation email. Not specifying line item IDs causes all unfulfilled and partially fulfilled line items for the order to be fulfilled."
              example2:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: null
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill line items without a tracking number"
              example3:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_numbers:
                      - "04263ac9875a5cdc27996db6865a3e91"
                      - "74a62cd540170b8ef633f90d584daadf"
                      - "d9d423437dc58dbb54a76908573239bc"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill all line items for an order with multiple tracking numbers"
              example4:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_url: "http://www.packagetrackr.com/track/somecarrier/1234567"
                    tracking_company: "Jack Black's Pack, Stack and Track"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill all line items for an order and use a custom tracking URL and company"
              example5:
                value:
                  fulfillment:
                    tracking_url: "http://www.packagetrackr.com/track/somecarrier/1234567"
                    tracking_company: "Jack Black's Pack, Stack and Track"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill without a location_id results in a bad request"
              example6:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "123456789"
                    tracking_company: "4PX"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a supported tracking company (generates tracking URL)"
              example7:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "123456789010"
                    tracking_company: "fed ex"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a supported tracking company in an incorrect format (uses fuzzy matches to generate tracking URL, but respects tracking company supplied)"
              example8:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "123456789010"
                    tracking_company: "fed ex"
                    tracking_url: "https://www.new-fedex-tracking.com/?number=123456789010"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a supported tracking company in an incorrect format and custom tracking URL (respects sent URL)"
              example9:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "RR123456789CN"
                    tracking_company: "Chinese Post"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a non-supported tracking company without a tracking URL (generates best guess URL if number matches recognizable pattern)"
              example10:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "1234567"
                    tracking_company: "Custom Tracking Company"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a non-supported tracking company without a tracking URL. Does not generate a URL if tracking number does not match a recognizable pattern."
              example11:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "CJ274101086US"
                    tracking_url: "http://www.custom-tracking.com/?tracking_number=CJ274101086US"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using only a tracking number and a custom tracking URL (respects tracking URL but attempts to generate tracking company if number matches recognizable pattern)"
              example12:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: null
                    line_items:
                      - id: 518995019
                summary: "Fulfill a single line item by explicitly specifying the line items to be fulfilled"
              example13:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: null
                    line_items:
                      - id: 518995019
                        quantity: 1
                summary: "Partially fulfill a single line item by specifying a line item and quantity to be fulfilled"
      summary: "Create a fulfillment for the specified order and line items.\n          The fulfillment's status depends on the line items in the order:\n          \n          If the line items in the fulfillment use a manual or custom fulfillment service, then the status of the returned fulfillment will be set immediately.\n          If the line items use an external fulfillment service, then they will be queued for fulfillment and the status will be set to pending until the external fulfillment service has been invoked.\n          \n          \n          A fulfillment might then transition to open, which implies it is being processed by the service, before transitioning to success when the items have shipped.\n          If you don't specify line item IDs, then all unfulfilled and partially fulfilled line items for the order will be fulfilled.\n          However, if an order is refunded or if any of its individual line items are refunded, then the order can't be fulfilled.\n          \n          All line items being fulfilled must have the same fulfillment service.\n          \n          \n            Note\n            If you are using this endpoint with a Partner development store or a trial store, then you can create no more than 5 new fulfillments per minute.\n          \n          About tracking urls\n           If you're creating a fulfillment for a supported carrier, then you can send the tracking_company and tracking_numbers fields, and Shopify will generate the tracking_url for you. If you're creating a fulfillment for an unsupported carrier (not in the tracking_company list), then send the tracking_company, tracking_numbers, and tracking_urls fields.\n           \n          \n            Note\n            If you send an unsupported carrier without a tracking URL, then Shopify will still try to generate a valid tracking URL by using pattern matching on the tracking number. However, Shopify does not validate the tracking URL, so you should make sure that your tracking URL is correct for the order and fulfillment."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#create-2020-07"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_orders_param_order_id_fulfillments"
  /admin/api/2020-07/fulfillment_orders/{fulfillment_order_id}/fulfillments.json:
    get:
      summary: "Retrieves fulfillments associated with a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#indexV2-2020-07"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "fulfillment_order_id"
          description: "The ID of the fulfillment order that is associated with the fulfillments."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_fulfillment_orders_param_fulfillment_order_id_fulfillments"
  /admin/api/2020-07/orders/{order_id}/fulfillments/count.json:
    get:
      summary: "Retrieves a count of fulfillments associated with a specific order"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#count-2020-07"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "created_at_min"
          description: "Count fulfillments created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count fulfillments created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count fulfillments last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count fulfillments last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_orders_param_order_id_fulfillments_count"
  /admin/api/2020-07/orders/{order_id}/fulfillments/{fulfillment_id}.json:
    get:
      summary: "Retrieve a specific fulfillment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#show-2020-07"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "query"
          name: "fields"
          description: "Comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_orders_param_order_id_fulfillments_param_fulfillment_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    tracking_number: "987654321"
                    id: 255858046
                summary: "Update the tracking number for a fulfillment"
      summary: "Update information associated with a fulfillment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#update-2020-07"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_orders_param_order_id_fulfillments_param_fulfillment_id"
  /admin/api/2020-07/fulfillments.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    message: "The package was shipped this morning."
                    notify_customer: false
                    tracking_info:
                      number: 1562678
                      url: "https://www.my-shipping-company.com"
                      company: "my-shipping-company"
                    line_items_by_fulfillment_order:
                      - fulfillment_order_id: 1046000794
                        fulfillment_order_line_items:
                          - id: 1025578640
                            quantity: 1
                summary: "Create a fulfillment for the fulfillment order line items specified"
              example2:
                value:
                  fulfillment:
                    message: "The package was shipped this morning."
                    notify_customer: false
                    tracking_info:
                      number: 1562678
                      url: "https://www.my-shipping-company.com"
                      company: "my-shipping-company"
                    line_items_by_fulfillment_order:
                      - fulfillment_order_id: 1046000795
                summary: "Creates a fulfillment for all fulfillment order line items if `fulfillment_order_line_items` is left blank"
      summary: "Creates a fulfillment for one or many fulfillment orders. The fulfillment orders are associated with the same order and are assigned to the same location."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#createV2-2020-07"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_fulfillments"
  /admin/api/2020-07/fulfillments/{fulfillment_id}/update_tracking.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    notify_customer: true
                    tracking_info:
                      number: "1111"
                      url: "http://www.my-url.com"
                      company: "my-company"
                summary: "Update the tracking information for a fulfillment"
      summary: "Updates the tracking information for a fulfillment."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#update_tracking-2020-07"
      parameters:
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_fulfillments_param_fulfillment_id_update_tracking"
  /admin/api/2020-07/orders/{order_id}/fulfillments/{fulfillment_id}/complete.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Complete a fulfillment"
      summary: "Mark a fulfillment as complete"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#complete-2020-07"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_orders_param_order_id_fulfillments_param_fulfillment_id_complete"
  /admin/api/2020-07/orders/{order_id}/fulfillments/{fulfillment_id}/open.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Transition a fulfillment from pending to open"
      summary: "Mark a fulfillment as open"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#open-2020-07"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_orders_param_order_id_fulfillments_param_fulfillment_id_open"
  /admin/api/2020-07/orders/{order_id}/fulfillments/{fulfillment_id}/cancel.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Cancel a fulfillment for a specific order ID"
      summary: "Cancel a fulfillment for a specific order ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#cancel-2020-07"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_orders_param_order_id_fulfillments_param_fulfillment_id_cancel"
  /admin/api/2020-07/fulfillments/{fulfillment_id}/cancel.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Cancel a fulfillment"
      summary: "Cancels a fulfillment."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#cancelV2-2020-07"
      parameters:
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_fulfillments_param_fulfillment_id_cancel"
  /admin/api/2020-10/orders/{order_id}/fulfillments.json:
    get:
      summary: "Retrieves fulfillments associated with an order. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#index-2020-10"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "created_at_max"
          description: "Show fulfillments created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show fulfillments created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "Limit the amount of results.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show fulfillments last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show fulfillments last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_orders_param_order_id_fulfillments"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    location_id: 487838322
                    tracking_number: "123456789"
                    tracking_urls:
                      - "https://shipping.xyz/track.php?num=123456789"
                      - "https://anothershipper.corp/track.php?code=abc"
                    notify_customer: true
                summary: "Fulfill all line items for an order and send the shipping confirmation email. Not specifying line item IDs causes all unfulfilled and partially fulfilled line items for the order to be fulfilled."
              example2:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: null
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill line items without a tracking number"
              example3:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_numbers:
                      - "04263ac9875a5cdc27996db6865a3e91"
                      - "74a62cd540170b8ef633f90d584daadf"
                      - "d9d423437dc58dbb54a76908573239bc"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill all line items for an order with multiple tracking numbers"
              example4:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_url: "http://www.packagetrackr.com/track/somecarrier/1234567"
                    tracking_company: "Jack Black's Pack, Stack and Track"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill all line items for an order and use a custom tracking URL and company"
              example5:
                value:
                  fulfillment:
                    tracking_url: "http://www.packagetrackr.com/track/somecarrier/1234567"
                    tracking_company: "Jack Black's Pack, Stack and Track"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill without a location_id results in a bad request"
              example6:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "123456789"
                    tracking_company: "4PX"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a supported tracking company (generates tracking URL)"
              example7:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "123456789010"
                    tracking_company: "fed ex"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a supported tracking company in an incorrect format (uses fuzzy matches to generate tracking URL, but respects tracking company supplied)"
              example8:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "123456789010"
                    tracking_company: "fed ex"
                    tracking_url: "https://www.new-fedex-tracking.com/?number=123456789010"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a supported tracking company in an incorrect format and custom tracking URL (respects sent URL)"
              example9:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "RR123456789CN"
                    tracking_company: "Chinese Post"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a non-supported tracking company without a tracking URL (generates best guess URL if number matches recognizable pattern)"
              example10:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "1234567"
                    tracking_company: "Custom Tracking Company"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a non-supported tracking company without a tracking URL. Does not generate a URL if tracking number does not match a recognizable pattern."
              example11:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "CJ274101086US"
                    tracking_url: "http://www.custom-tracking.com/?tracking_number=CJ274101086US"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using only a tracking number and a custom tracking URL (respects tracking URL but attempts to generate tracking company if number matches recognizable pattern)"
              example12:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: null
                    line_items:
                      - id: 518995019
                summary: "Fulfill a single line item by explicitly specifying the line items to be fulfilled"
              example13:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: null
                    line_items:
                      - id: 518995019
                        quantity: 1
                summary: "Partially fulfill a single line item by specifying a line item and quantity to be fulfilled"
      summary: "Create a fulfillment for the specified order and line items.\n          The fulfillment's status depends on the line items in the order:\n          \n          If the line items in the fulfillment use a manual or custom fulfillment service, then the status of the returned fulfillment will be set immediately.\n          If the line items use an external fulfillment service, then they will be queued for fulfillment and the status will be set to pending until the external fulfillment service has been invoked.\n          \n          \n          A fulfillment might then transition to open, which implies it is being processed by the service, before transitioning to success when the items have shipped.\n          If you don't specify line item IDs, then all unfulfilled and partially fulfilled line items for the order will be fulfilled.\n          However, if an order is refunded or if any of its individual line items are refunded, then the order can't be fulfilled.\n          \n          All line items being fulfilled must have the same fulfillment service.\n          \n          \n            Note\n            If you are using this endpoint with a Partner development store or a trial store, then you can create no more than 5 new fulfillments per minute.\n          \n          About tracking urls\n           If you're creating a fulfillment for a supported carrier, then you can send the tracking_company and tracking_numbers fields, and Shopify will generate the tracking_url for you. If you're creating a fulfillment for an unsupported carrier (not in the tracking_company list), then send the tracking_company, tracking_numbers, and tracking_urls fields.\n           \n          \n            Note\n            If you send an unsupported carrier without a tracking URL, then Shopify will still try to generate a valid tracking URL by using pattern matching on the tracking number. However, Shopify does not validate the tracking URL, so you should make sure that your tracking URL is correct for the order and fulfillment."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#create-2020-10"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_orders_param_order_id_fulfillments"
  /admin/api/2020-10/fulfillment_orders/{fulfillment_order_id}/fulfillments.json:
    get:
      summary: "Retrieves fulfillments associated with a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#indexV2-2020-10"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "fulfillment_order_id"
          description: "The ID of the fulfillment order that is associated with the fulfillments."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_fulfillment_orders_param_fulfillment_order_id_fulfillments"
  /admin/api/2020-10/orders/{order_id}/fulfillments/count.json:
    get:
      summary: "Retrieves a count of fulfillments associated with a specific order"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#count-2020-10"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "created_at_min"
          description: "Count fulfillments created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count fulfillments created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count fulfillments last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count fulfillments last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_orders_param_order_id_fulfillments_count"
  /admin/api/2020-10/orders/{order_id}/fulfillments/{fulfillment_id}.json:
    get:
      summary: "Retrieve a specific fulfillment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#show-2020-10"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "query"
          name: "fields"
          description: "Comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_orders_param_order_id_fulfillments_param_fulfillment_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    tracking_number: "987654321"
                    id: 255858046
                summary: "Update the tracking number for a fulfillment"
      summary: "Update information associated with a fulfillment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#update-2020-10"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_orders_param_order_id_fulfillments_param_fulfillment_id"
  /admin/api/2020-10/fulfillments.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    message: "The package was shipped this morning."
                    notify_customer: false
                    tracking_info:
                      number: 1562678
                      url: "https://www.my-shipping-company.com"
                      company: "my-shipping-company"
                    line_items_by_fulfillment_order:
                      - fulfillment_order_id: 1046000794
                        fulfillment_order_line_items:
                          - id: 1025578640
                            quantity: 1
                summary: "Create a fulfillment for the fulfillment order line items specified"
              example2:
                value:
                  fulfillment:
                    message: "The package was shipped this morning."
                    notify_customer: false
                    tracking_info:
                      number: 1562678
                      url: "https://www.my-shipping-company.com"
                      company: "my-shipping-company"
                    line_items_by_fulfillment_order:
                      - fulfillment_order_id: 1046000795
                summary: "Creates a fulfillment for all fulfillment order line items if `fulfillment_order_line_items` is left blank"
      summary: "Creates a fulfillment for one or many fulfillment orders. The fulfillment orders are associated with the same order and are assigned to the same location."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#createV2-2020-10"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_fulfillments"
  /admin/api/2020-10/fulfillments/{fulfillment_id}/update_tracking.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    notify_customer: true
                    tracking_info:
                      number: "1111"
                      url: "http://www.my-url.com"
                      company: "my-company"
                summary: "Update the tracking information for a fulfillment"
      summary: "Updates the tracking information for a fulfillment."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#update_tracking-2020-10"
      parameters:
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_fulfillments_param_fulfillment_id_update_tracking"
  /admin/api/2020-10/orders/{order_id}/fulfillments/{fulfillment_id}/complete.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Complete a fulfillment"
      summary: "Mark a fulfillment as complete"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#complete-2020-10"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_orders_param_order_id_fulfillments_param_fulfillment_id_complete"
  /admin/api/2020-10/orders/{order_id}/fulfillments/{fulfillment_id}/open.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Transition a fulfillment from pending to open"
      summary: "Mark a fulfillment as open"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#open-2020-10"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_orders_param_order_id_fulfillments_param_fulfillment_id_open"
  /admin/api/2020-10/orders/{order_id}/fulfillments/{fulfillment_id}/cancel.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Cancel a fulfillment for a specific order ID"
      summary: "Cancel a fulfillment for a specific order ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#cancel-2020-10"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_orders_param_order_id_fulfillments_param_fulfillment_id_cancel"
  /admin/api/2020-10/fulfillments/{fulfillment_id}/cancel.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Cancel a fulfillment"
      summary: "Cancels a fulfillment."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#cancelV2-2020-10"
      parameters:
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_fulfillments_param_fulfillment_id_cancel"
  /admin/api/2021-01/orders/{order_id}/fulfillments.json:
    get:
      summary: "Retrieves fulfillments associated with an order. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#index-2021-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "created_at_max"
          description: "Show fulfillments created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show fulfillments created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "Limit the amount of results.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show fulfillments last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show fulfillments last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_orders_param_order_id_fulfillments"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    location_id: 487838322
                    tracking_number: "123456789"
                    tracking_urls:
                      - "https://shipping.xyz/track.php?num=123456789"
                      - "https://anothershipper.corp/track.php?code=abc"
                    notify_customer: true
                summary: "Fulfill all line items for an order and send the shipping confirmation email. Not specifying line item IDs causes all unfulfilled and partially fulfilled line items for the order to be fulfilled."
              example2:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: null
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill line items without a tracking number"
              example3:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_numbers:
                      - "04263ac9875a5cdc27996db6865a3e91"
                      - "74a62cd540170b8ef633f90d584daadf"
                      - "d9d423437dc58dbb54a76908573239bc"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill all line items for an order with multiple tracking numbers"
              example4:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_url: "http://www.packagetrackr.com/track/somecarrier/1234567"
                    tracking_company: "Jack Black's Pack, Stack and Track"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill all line items for an order and use a custom tracking URL and company"
              example5:
                value:
                  fulfillment:
                    tracking_url: "http://www.packagetrackr.com/track/somecarrier/1234567"
                    tracking_company: "Jack Black's Pack, Stack and Track"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill without a location_id results in a bad request"
              example6:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "123456789"
                    tracking_company: "4PX"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a supported tracking company (generates tracking URL)"
              example7:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "123456789010"
                    tracking_company: "fed ex"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a supported tracking company in an incorrect format (uses fuzzy matches to generate tracking URL, but respects tracking company supplied)"
              example8:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "123456789010"
                    tracking_company: "fed ex"
                    tracking_url: "https://www.new-fedex-tracking.com/?number=123456789010"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a supported tracking company in an incorrect format and custom tracking URL (respects sent URL)"
              example9:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "RR123456789CN"
                    tracking_company: "Chinese Post"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a non-supported tracking company without a tracking URL (generates best guess URL if number matches recognizable pattern)"
              example10:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "1234567"
                    tracking_company: "Custom Tracking Company"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a non-supported tracking company without a tracking URL. Does not generate a URL if tracking number does not match a recognizable pattern."
              example11:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "CJ274101086US"
                    tracking_url: "http://www.custom-tracking.com/?tracking_number=CJ274101086US"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using only a tracking number and a custom tracking URL (respects tracking URL but attempts to generate tracking company if number matches recognizable pattern)"
              example12:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: null
                    line_items:
                      - id: 518995019
                summary: "Fulfill a single line item by explicitly specifying the line items to be fulfilled"
              example13:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: null
                    line_items:
                      - id: 518995019
                        quantity: 1
                summary: "Partially fulfill a single line item by specifying a line item and quantity to be fulfilled"
      summary: "Create a fulfillment for the specified order and line items.\n          The fulfillment's status depends on the line items in the order:\n          \n          If the line items in the fulfillment use a manual or custom fulfillment service, then the status of the returned fulfillment will be set immediately.\n          If the line items use an external fulfillment service, then they will be queued for fulfillment and the status will be set to pending until the external fulfillment service has been invoked.\n          \n          \n          A fulfillment might then transition to open, which implies it is being processed by the service, before transitioning to success when the items have shipped.\n          If you don't specify line item IDs, then all unfulfilled and partially fulfilled line items for the order will be fulfilled.\n          However, if an order is refunded or if any of its individual line items are refunded, then the order can't be fulfilled.\n          \n          All line items being fulfilled must have the same fulfillment service.\n          \n          \n            Note\n            If you are using this endpoint with a Partner development store or a trial store, then you can create no more than 5 new fulfillments per minute.\n          \n          About tracking urls\n           If you're creating a fulfillment for a supported carrier, then you can send the tracking_company and tracking_numbers fields, and Shopify will generate the tracking_url for you. If you're creating a fulfillment for an unsupported carrier (not in the tracking_company list), then send the tracking_company, tracking_numbers, and tracking_urls fields.\n           \n          \n            Note\n            If you send an unsupported carrier without a tracking URL, then Shopify will still try to generate a valid tracking URL by using pattern matching on the tracking number. However, Shopify does not validate the tracking URL, so you should make sure that your tracking URL is correct for the order and fulfillment."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#create-2021-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_orders_param_order_id_fulfillments"
  /admin/api/2021-01/fulfillment_orders/{fulfillment_order_id}/fulfillments.json:
    get:
      summary: "Retrieves fulfillments associated with a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#indexV2-2021-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "fulfillment_order_id"
          description: "The ID of the fulfillment order that is associated with the fulfillments."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_fulfillment_orders_param_fulfillment_order_id_fulfillments"
  /admin/api/2021-01/orders/{order_id}/fulfillments/count.json:
    get:
      summary: "Retrieves a count of fulfillments associated with a specific order"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#count-2021-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "created_at_min"
          description: "Count fulfillments created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count fulfillments created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count fulfillments last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count fulfillments last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_orders_param_order_id_fulfillments_count"
  /admin/api/2021-01/orders/{order_id}/fulfillments/{fulfillment_id}.json:
    get:
      summary: "Retrieve a specific fulfillment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#show-2021-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "query"
          name: "fields"
          description: "Comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_orders_param_order_id_fulfillments_param_fulfillment_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    tracking_number: "987654321"
                    id: 255858046
                summary: "Update the tracking number for a fulfillment"
      summary: "Update information associated with a fulfillment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#update-2021-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_orders_param_order_id_fulfillments_param_fulfillment_id"
  /admin/api/2021-01/fulfillments.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    message: "The package was shipped this morning."
                    notify_customer: false
                    tracking_info:
                      number: 1562678
                      url: "https://www.my-shipping-company.com"
                      company: "my-shipping-company"
                    line_items_by_fulfillment_order:
                      - fulfillment_order_id: 1046000794
                        fulfillment_order_line_items:
                          - id: 1025578640
                            quantity: 1
                summary: "Create a fulfillment for the fulfillment order line items specified"
              example2:
                value:
                  fulfillment:
                    message: "The package was shipped this morning."
                    notify_customer: false
                    tracking_info:
                      number: 1562678
                      url: "https://www.my-shipping-company.com"
                      company: "my-shipping-company"
                    line_items_by_fulfillment_order:
                      - fulfillment_order_id: 1046000795
                summary: "Creates a fulfillment for all fulfillment order line items if `fulfillment_order_line_items` is left blank"
      summary: "Creates a fulfillment for one or many fulfillment orders. The fulfillment orders are associated with the same order and are assigned to the same location."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#createV2-2021-01"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_fulfillments"
  /admin/api/2021-01/fulfillments/{fulfillment_id}/update_tracking.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    notify_customer: true
                    tracking_info:
                      number: "1111"
                      url: "http://www.my-url.com"
                      company: "my-company"
                summary: "Update the tracking information for a fulfillment"
      summary: "Updates the tracking information for a fulfillment."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#update_tracking-2021-01"
      parameters:
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_fulfillments_param_fulfillment_id_update_tracking"
  /admin/api/2021-01/orders/{order_id}/fulfillments/{fulfillment_id}/complete.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Complete a fulfillment"
      summary: "Mark a fulfillment as complete"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#complete-2021-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_orders_param_order_id_fulfillments_param_fulfillment_id_complete"
  /admin/api/2021-01/orders/{order_id}/fulfillments/{fulfillment_id}/open.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Transition a fulfillment from pending to open"
      summary: "Mark a fulfillment as open"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#open-2021-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_orders_param_order_id_fulfillments_param_fulfillment_id_open"
  /admin/api/2021-01/orders/{order_id}/fulfillments/{fulfillment_id}/cancel.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Cancel a fulfillment for a specific order ID"
      summary: "Cancel a fulfillment for a specific order ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#cancel-2021-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_orders_param_order_id_fulfillments_param_fulfillment_id_cancel"
  /admin/api/2021-01/fulfillments/{fulfillment_id}/cancel.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Cancel a fulfillment"
      summary: "Cancels a fulfillment."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#cancelV2-2021-01"
      parameters:
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_fulfillments_param_fulfillment_id_cancel"
  /admin/api/unstable/orders/{order_id}/fulfillments.json:
    get:
      summary: "Retrieves fulfillments associated with an order. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#index-unstable"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "created_at_max"
          description: "Show fulfillments created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_min"
          description: "Show fulfillments created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
        - in: "query"
          name: "limit"
          description: "Limit the amount of results.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Show fulfillments last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Show fulfillments last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_orders_param_order_id_fulfillments"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    location_id: 487838322
                    tracking_number: "123456789"
                    tracking_urls:
                      - "https://shipping.xyz/track.php?num=123456789"
                      - "https://anothershipper.corp/track.php?code=abc"
                    notify_customer: true
                summary: "Fulfill all line items for an order and send the shipping confirmation email. Not specifying line item IDs causes all unfulfilled and partially fulfilled line items for the order to be fulfilled."
              example2:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: null
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill line items without a tracking number"
              example3:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_numbers:
                      - "04263ac9875a5cdc27996db6865a3e91"
                      - "74a62cd540170b8ef633f90d584daadf"
                      - "d9d423437dc58dbb54a76908573239bc"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill all line items for an order with multiple tracking numbers"
              example4:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_url: "http://www.packagetrackr.com/track/somecarrier/1234567"
                    tracking_company: "Jack Black's Pack, Stack and Track"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill all line items for an order and use a custom tracking URL and company"
              example5:
                value:
                  fulfillment:
                    tracking_url: "http://www.packagetrackr.com/track/somecarrier/1234567"
                    tracking_company: "Jack Black's Pack, Stack and Track"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill without a location_id results in a bad request"
              example6:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "123456789"
                    tracking_company: "4PX"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a supported tracking company (generates tracking URL)"
              example7:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "123456789010"
                    tracking_company: "fed ex"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a supported tracking company in an incorrect format (uses fuzzy matches to generate tracking URL, but respects tracking company supplied)"
              example8:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "123456789010"
                    tracking_company: "fed ex"
                    tracking_url: "https://www.new-fedex-tracking.com/?number=123456789010"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a supported tracking company in an incorrect format and custom tracking URL (respects sent URL)"
              example9:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "RR123456789CN"
                    tracking_company: "Chinese Post"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a non-supported tracking company without a tracking URL (generates best guess URL if number matches recognizable pattern)"
              example10:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "1234567"
                    tracking_company: "Custom Tracking Company"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using a non-supported tracking company without a tracking URL. Does not generate a URL if tracking number does not match a recognizable pattern."
              example11:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: "CJ274101086US"
                    tracking_url: "http://www.custom-tracking.com/?tracking_number=CJ274101086US"
                    line_items:
                      - id: 466157049
                      - id: 518995019
                      - id: 703073504
                summary: "Fulfill an order using only a tracking number and a custom tracking URL (respects tracking URL but attempts to generate tracking company if number matches recognizable pattern)"
              example12:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: null
                    line_items:
                      - id: 518995019
                summary: "Fulfill a single line item by explicitly specifying the line items to be fulfilled"
              example13:
                value:
                  fulfillment:
                    location_id: 905684977
                    tracking_number: null
                    line_items:
                      - id: 518995019
                        quantity: 1
                summary: "Partially fulfill a single line item by specifying a line item and quantity to be fulfilled"
      summary: "Create a fulfillment for the specified order and line items.\n          The fulfillment's status depends on the line items in the order:\n          \n          If the line items in the fulfillment use a manual or custom fulfillment service, then the status of the returned fulfillment will be set immediately.\n          If the line items use an external fulfillment service, then they will be queued for fulfillment and the status will be set to pending until the external fulfillment service has been invoked.\n          \n          \n          A fulfillment might then transition to open, which implies it is being processed by the service, before transitioning to success when the items have shipped.\n          If you don't specify line item IDs, then all unfulfilled and partially fulfilled line items for the order will be fulfilled.\n          However, if an order is refunded or if any of its individual line items are refunded, then the order can't be fulfilled.\n          \n          All line items being fulfilled must have the same fulfillment service.\n          \n          \n            Note\n            If you are using this endpoint with a Partner development store or a trial store, then you can create no more than 5 new fulfillments per minute.\n          \n          About tracking urls\n           If you're creating a fulfillment for a supported carrier, then you can send the tracking_company and tracking_numbers fields, and Shopify will generate the tracking_url for you. If you're creating a fulfillment for an unsupported carrier (not in the tracking_company list), then send the tracking_company, tracking_numbers, and tracking_urls fields.\n           \n          \n            Note\n            If you send an unsupported carrier without a tracking URL, then Shopify will still try to generate a valid tracking URL by using pattern matching on the tracking number. However, Shopify does not validate the tracking URL, so you should make sure that your tracking URL is correct for the order and fulfillment."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#create-unstable"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_orders_param_order_id_fulfillments"
  /admin/api/unstable/fulfillment_orders/{fulfillment_order_id}/fulfillments.json:
    get:
      summary: "Retrieves fulfillments associated with a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#indexV2-unstable"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "fulfillment_order_id"
          description: "The ID of the fulfillment order that is associated with the fulfillments."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_fulfillment_orders_param_fulfillment_order_id_fulfillments"
  /admin/api/unstable/orders/{order_id}/fulfillments/count.json:
    get:
      summary: "Retrieves a count of fulfillments associated with a specific order"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#count-unstable"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "created_at_min"
          description: "Count fulfillments created after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "created_at_max"
          description: "Count fulfillments created before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_min"
          description: "Count fulfillments last updated after date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
        - in: "query"
          name: "updated_at_max"
          description: "Count fulfillments last updated before date (format: 2014-04-25T16:15:47-04:00)."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_orders_param_order_id_fulfillments_count"
  /admin/api/unstable/orders/{order_id}/fulfillments/{fulfillment_id}.json:
    get:
      summary: "Retrieve a specific fulfillment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#show-unstable"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "query"
          name: "fields"
          description: "Comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_orders_param_order_id_fulfillments_param_fulfillment_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    tracking_number: "987654321"
                    id: 255858046
                summary: "Update the tracking number for a fulfillment"
      summary: "Update information associated with a fulfillment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#update-unstable"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_orders_param_order_id_fulfillments_param_fulfillment_id"
  /admin/api/unstable/fulfillments.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    message: "The package was shipped this morning."
                    notify_customer: false
                    tracking_info:
                      number: 1562678
                      url: "https://www.my-shipping-company.com"
                      company: "my-shipping-company"
                    line_items_by_fulfillment_order:
                      - fulfillment_order_id: 1046000794
                        fulfillment_order_line_items:
                          - id: 1025578640
                            quantity: 1
                summary: "Create a fulfillment for the fulfillment order line items specified"
              example2:
                value:
                  fulfillment:
                    message: "The package was shipped this morning."
                    notify_customer: false
                    tracking_info:
                      number: 1562678
                      url: "https://www.my-shipping-company.com"
                      company: "my-shipping-company"
                    line_items_by_fulfillment_order:
                      - fulfillment_order_id: 1046000795
                summary: "Creates a fulfillment for all fulfillment order line items if `fulfillment_order_line_items` is left blank"
      summary: "Creates a fulfillment for one or many fulfillment orders. The fulfillment orders are associated with the same order and are assigned to the same location."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#createV2-unstable"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_fulfillments"
  /admin/api/unstable/fulfillments/{fulfillment_id}/update_tracking.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment:
                    notify_customer: true
                    tracking_info:
                      number: "1111"
                      url: "http://www.my-url.com"
                      company: "my-company"
                summary: "Update the tracking information for a fulfillment"
      summary: "Updates the tracking information for a fulfillment."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#update_tracking-unstable"
      parameters:
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_fulfillments_param_fulfillment_id_update_tracking"
  /admin/api/unstable/orders/{order_id}/fulfillments/{fulfillment_id}/complete.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Complete a fulfillment"
      summary: "Mark a fulfillment as complete"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#complete-unstable"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_orders_param_order_id_fulfillments_param_fulfillment_id_complete"
  /admin/api/unstable/orders/{order_id}/fulfillments/{fulfillment_id}/open.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Transition a fulfillment from pending to open"
      summary: "Mark a fulfillment as open"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#open-unstable"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_orders_param_order_id_fulfillments_param_fulfillment_id_open"
  /admin/api/unstable/orders/{order_id}/fulfillments/{fulfillment_id}/cancel.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Cancel a fulfillment for a specific order ID"
      summary: "Cancel a fulfillment for a specific order ID"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#cancel-unstable"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_orders_param_order_id_fulfillments_param_fulfillment_id_cancel"
  /admin/api/unstable/fulfillments/{fulfillment_id}/cancel.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Cancel a fulfillment"
      summary: "Cancels a fulfillment."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillment#cancelV2-unstable"
      parameters:
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillment"
        - "shipping-and-fulfillment/fulfillment"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_fulfillments_param_fulfillment_id_cancel"
  /admin/api/2020-01/orders/{order_id}/fulfillments/{fulfillment_id}/events.json:
    get:
      summary: "Retrieves a list of fulfillment events for a specific fulfillment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#index-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "query"
          name: "fulfillment_id"
          description: "The ID of the fulfillment that's associated with the fulfillment event."
          schema: {}
          required: false
        - in: "query"
          name: "order_id"
          description: "The ID of the order that's associated with the fulfillment event."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_orders_param_order_id_fulfillments_param_fulfillment_id_events"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  event:
                    status: "in_transit"
                summary: "Create a fulfillment event"
      summary: "Creates a fulfillment event"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#create-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_orders_param_order_id_fulfillments_param_fulfillment_id_events"
  /admin/api/2020-01/orders/{order_id}/fulfillments/{fulfillment_id}/events/{event_id}.json:
    get:
      summary: "Retrieves a specific fulfillment event"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#show-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "path"
          name: "event_id"
          required: true
          schema:
            type: "string"
          description: "event_id"
        - in: "query"
          name: "event_id"
          description: "The ID of the fulfillment event."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_orders_param_order_id_fulfillments_param_fulfillment_id_events_param_event_id"
    delete:
      summary: "Deletes a fulfillment event"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#destroy-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "path"
          name: "event_id"
          required: true
          schema:
            type: "string"
          description: "event_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_orders_param_order_id_fulfillments_param_fulfillment_id_events_param_event_id"
  /admin/api/2020-04/orders/{order_id}/fulfillments/{fulfillment_id}/events.json:
    get:
      summary: "Retrieves a list of fulfillment events for a specific fulfillment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#index-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "query"
          name: "fulfillment_id"
          description: "The ID of the fulfillment that's associated with the fulfillment event."
          schema: {}
          required: false
        - in: "query"
          name: "order_id"
          description: "The ID of the order that's associated with the fulfillment event."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_orders_param_order_id_fulfillments_param_fulfillment_id_events"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  event:
                    status: "in_transit"
                summary: "Create a fulfillment event"
      summary: "Creates a fulfillment event"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#create-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_orders_param_order_id_fulfillments_param_fulfillment_id_events"
  /admin/api/2020-04/orders/{order_id}/fulfillments/{fulfillment_id}/events/{event_id}.json:
    get:
      summary: "Retrieves a specific fulfillment event"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#show-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "path"
          name: "event_id"
          required: true
          schema:
            type: "string"
          description: "event_id"
        - in: "query"
          name: "event_id"
          description: "The ID of the fulfillment event."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_orders_param_order_id_fulfillments_param_fulfillment_id_events_param_event_id"
    delete:
      summary: "Deletes a fulfillment event"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#destroy-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "path"
          name: "event_id"
          required: true
          schema:
            type: "string"
          description: "event_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_orders_param_order_id_fulfillments_param_fulfillment_id_events_param_event_id"
  /admin/api/2020-07/orders/{order_id}/fulfillments/{fulfillment_id}/events.json:
    get:
      summary: "Retrieves a list of fulfillment events for a specific fulfillment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#index-2020-07"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "query"
          name: "fulfillment_id"
          description: "The ID of the fulfillment that's associated with the fulfillment event."
          schema: {}
          required: false
        - in: "query"
          name: "order_id"
          description: "The ID of the order that's associated with the fulfillment event."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_orders_param_order_id_fulfillments_param_fulfillment_id_events"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  event:
                    status: "in_transit"
                summary: "Create a fulfillment event"
      summary: "Creates a fulfillment event"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#create-2020-07"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_orders_param_order_id_fulfillments_param_fulfillment_id_events"
  /admin/api/2020-07/orders/{order_id}/fulfillments/{fulfillment_id}/events/{event_id}.json:
    get:
      summary: "Retrieves a specific fulfillment event"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#show-2020-07"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "path"
          name: "event_id"
          required: true
          schema:
            type: "string"
          description: "event_id"
        - in: "query"
          name: "event_id"
          description: "The ID of the fulfillment event."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_orders_param_order_id_fulfillments_param_fulfillment_id_events_param_event_id"
    delete:
      summary: "Deletes a fulfillment event"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#destroy-2020-07"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "path"
          name: "event_id"
          required: true
          schema:
            type: "string"
          description: "event_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_orders_param_order_id_fulfillments_param_fulfillment_id_events_param_event_id"
  /admin/api/2020-10/orders/{order_id}/fulfillments/{fulfillment_id}/events.json:
    get:
      summary: "Retrieves a list of fulfillment events for a specific fulfillment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#index-2020-10"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "query"
          name: "fulfillment_id"
          description: "The ID of the fulfillment that's associated with the fulfillment event."
          schema: {}
          required: false
        - in: "query"
          name: "order_id"
          description: "The ID of the order that's associated with the fulfillment event."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_orders_param_order_id_fulfillments_param_fulfillment_id_events"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  event:
                    status: "in_transit"
                summary: "Create a fulfillment event"
      summary: "Creates a fulfillment event"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#create-2020-10"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_orders_param_order_id_fulfillments_param_fulfillment_id_events"
  /admin/api/2020-10/orders/{order_id}/fulfillments/{fulfillment_id}/events/{event_id}.json:
    get:
      summary: "Retrieves a specific fulfillment event"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#show-2020-10"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "path"
          name: "event_id"
          required: true
          schema:
            type: "string"
          description: "event_id"
        - in: "query"
          name: "event_id"
          description: "The ID of the fulfillment event."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_orders_param_order_id_fulfillments_param_fulfillment_id_events_param_event_id"
    delete:
      summary: "Deletes a fulfillment event"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#destroy-2020-10"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "path"
          name: "event_id"
          required: true
          schema:
            type: "string"
          description: "event_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_orders_param_order_id_fulfillments_param_fulfillment_id_events_param_event_id"
  /admin/api/2021-01/orders/{order_id}/fulfillments/{fulfillment_id}/events.json:
    get:
      summary: "Retrieves a list of fulfillment events for a specific fulfillment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#index-2021-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "query"
          name: "fulfillment_id"
          description: "The ID of the fulfillment that's associated with the fulfillment event."
          schema: {}
          required: false
        - in: "query"
          name: "order_id"
          description: "The ID of the order that's associated with the fulfillment event."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_orders_param_order_id_fulfillments_param_fulfillment_id_events"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  event:
                    status: "in_transit"
                summary: "Create a fulfillment event"
      summary: "Creates a fulfillment event"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#create-2021-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_orders_param_order_id_fulfillments_param_fulfillment_id_events"
  /admin/api/2021-01/orders/{order_id}/fulfillments/{fulfillment_id}/events/{event_id}.json:
    get:
      summary: "Retrieves a specific fulfillment event"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#show-2021-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "path"
          name: "event_id"
          required: true
          schema:
            type: "string"
          description: "event_id"
        - in: "query"
          name: "event_id"
          description: "The ID of the fulfillment event."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_orders_param_order_id_fulfillments_param_fulfillment_id_events_param_event_id"
    delete:
      summary: "Deletes a fulfillment event"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#destroy-2021-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "path"
          name: "event_id"
          required: true
          schema:
            type: "string"
          description: "event_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_orders_param_order_id_fulfillments_param_fulfillment_id_events_param_event_id"
  /admin/api/unstable/orders/{order_id}/fulfillments/{fulfillment_id}/events.json:
    get:
      summary: "Retrieves a list of fulfillment events for a specific fulfillment"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#index-unstable"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "query"
          name: "fulfillment_id"
          description: "The ID of the fulfillment that's associated with the fulfillment event."
          schema: {}
          required: false
        - in: "query"
          name: "order_id"
          description: "The ID of the order that's associated with the fulfillment event."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_orders_param_order_id_fulfillments_param_fulfillment_id_events"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  event:
                    status: "in_transit"
                summary: "Create a fulfillment event"
      summary: "Creates a fulfillment event"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#create-unstable"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_orders_param_order_id_fulfillments_param_fulfillment_id_events"
  /admin/api/unstable/orders/{order_id}/fulfillments/{fulfillment_id}/events/{event_id}.json:
    get:
      summary: "Retrieves a specific fulfillment event"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#show-unstable"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "path"
          name: "event_id"
          required: true
          schema:
            type: "string"
          description: "event_id"
        - in: "query"
          name: "event_id"
          description: "The ID of the fulfillment event."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_orders_param_order_id_fulfillments_param_fulfillment_id_events_param_event_id"
    delete:
      summary: "Deletes a fulfillment event"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentevent#destroy-unstable"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "path"
          name: "fulfillment_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_id"
        - in: "path"
          name: "event_id"
          required: true
          schema:
            type: "string"
          description: "event_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentevent"
        - "shipping-and-fulfillment/fulfillmentevent"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_orders_param_order_id_fulfillments_param_fulfillment_id_events_param_event_id"
  /admin/api/2020-01/orders/{order_id}/fulfillment_orders.json:
    get:
      summary: "Retrieves a list of fulfillment orders for a specific order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#index-2020-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "order_id"
          description: "The ID of the order that is associated with the fulfillment orders."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_orders_param_order_id_fulfillment_orders"
  /admin/api/2020-01/fulfillment_orders/{fulfillment_order_id}.json:
    get:
      summary: "Retrieves a specific fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#show-2020-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_fulfillment_orders_param_fulfillment_order_id"
  /admin/api/2020-01/fulfillment_orders/{fulfillment_order_id}/cancel.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Cancel a fulfillment order"
      summary: "Marks a fulfillment order as cancelled."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#cancel-2020-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_fulfillment_orders_param_fulfillment_order_id_cancel"
  /admin/api/2020-01/fulfillment_orders/{fulfillment_order_id}/close.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_order:
                    message: "Not enough inventory to complete this work."
                summary: "Transition a fulfillment order from in progress to incomplete"
      summary: "Marks an in progress fulfillment order as incomplete, indicating the fulfillment service\n        is unable to ship any remaining items and intends to close the fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#close-2020-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for marking the fulfillment order as incomplete."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_fulfillment_orders_param_fulfillment_order_id_close"
  /admin/api/2020-01/fulfillment_orders/{fulfillment_order_id}/move.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_order:
                    new_location_id: 905684977
                summary: "Move a fulfillment order to a new location"
      summary: "Moves a fulfillment order from one merchant managed location to another merchant managed location."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#move-2020-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "new_location_id"
          description: "The id of the location to which the fulfillment order will be moved."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_fulfillment_orders_param_fulfillment_order_id_move"
  /admin/api/2020-04/orders/{order_id}/fulfillment_orders.json:
    get:
      summary: "Retrieves a list of fulfillment orders for a specific order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#index-2020-04"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "order_id"
          description: "The ID of the order that is associated with the fulfillment orders."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_orders_param_order_id_fulfillment_orders"
  /admin/api/2020-04/fulfillment_orders/{fulfillment_order_id}.json:
    get:
      summary: "Retrieves a specific fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#show-2020-04"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_fulfillment_orders_param_fulfillment_order_id"
  /admin/api/2020-04/fulfillment_orders/{fulfillment_order_id}/cancel.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Cancel a fulfillment order"
      summary: "Marks a fulfillment order as cancelled."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#cancel-2020-04"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_fulfillment_orders_param_fulfillment_order_id_cancel"
  /admin/api/2020-04/fulfillment_orders/{fulfillment_order_id}/close.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_order:
                    message: "Not enough inventory to complete this work."
                summary: "Transition a fulfillment order from in progress to incomplete"
      summary: "Marks an in progress fulfillment order as incomplete, indicating the fulfillment service\n        is unable to ship any remaining items and intends to close the fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#close-2020-04"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for marking the fulfillment order as incomplete."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_fulfillment_orders_param_fulfillment_order_id_close"
  /admin/api/2020-04/fulfillment_orders/{fulfillment_order_id}/move.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_order:
                    new_location_id: 905684977
                summary: "Move a fulfillment order to a new location"
      summary: "Moves a fulfillment order from one merchant managed location to another merchant managed location."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#move-2020-04"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "new_location_id"
          description: "The id of the location to which the fulfillment order will be moved."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_fulfillment_orders_param_fulfillment_order_id_move"
  /admin/api/2020-07/orders/{order_id}/fulfillment_orders.json:
    get:
      summary: "Retrieves a list of fulfillment orders for a specific order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#index-2020-07"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "order_id"
          description: "The ID of the order that is associated with the fulfillment orders."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_orders_param_order_id_fulfillment_orders"
  /admin/api/2020-07/fulfillment_orders/{fulfillment_order_id}.json:
    get:
      summary: "Retrieves a specific fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#show-2020-07"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_fulfillment_orders_param_fulfillment_order_id"
  /admin/api/2020-07/fulfillment_orders/{fulfillment_order_id}/cancel.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Cancel a fulfillment order"
      summary: "Marks a fulfillment order as cancelled."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#cancel-2020-07"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_fulfillment_orders_param_fulfillment_order_id_cancel"
  /admin/api/2020-07/fulfillment_orders/{fulfillment_order_id}/close.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_order:
                    message: "Not enough inventory to complete this work."
                summary: "Transition a fulfillment order from in progress to incomplete"
      summary: "Marks an in progress fulfillment order as incomplete, indicating the fulfillment service\n        is unable to ship any remaining items and intends to close the fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#close-2020-07"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for marking the fulfillment order as incomplete."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_fulfillment_orders_param_fulfillment_order_id_close"
  /admin/api/2020-07/fulfillment_orders/{fulfillment_order_id}/move.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_order:
                    new_location_id: 905684977
                summary: "Move a fulfillment order to a new location"
      summary: "Moves a fulfillment order from one merchant managed location to another merchant managed location."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#move-2020-07"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "new_location_id"
          description: "The id of the location to which the fulfillment order will be moved."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_fulfillment_orders_param_fulfillment_order_id_move"
  /admin/api/2020-10/orders/{order_id}/fulfillment_orders.json:
    get:
      summary: "Retrieves a list of fulfillment orders for a specific order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#index-2020-10"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "order_id"
          description: "The ID of the order that is associated with the fulfillment orders."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_orders_param_order_id_fulfillment_orders"
  /admin/api/2020-10/fulfillment_orders/{fulfillment_order_id}.json:
    get:
      summary: "Retrieves a specific fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#show-2020-10"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_fulfillment_orders_param_fulfillment_order_id"
  /admin/api/2020-10/fulfillment_orders/{fulfillment_order_id}/cancel.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Cancel a fulfillment order"
      summary: "Marks a fulfillment order as cancelled."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#cancel-2020-10"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_fulfillment_orders_param_fulfillment_order_id_cancel"
  /admin/api/2020-10/fulfillment_orders/{fulfillment_order_id}/close.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_order:
                    message: "Not enough inventory to complete this work."
                summary: "Transition a fulfillment order from in progress to incomplete"
      summary: "Marks an in progress fulfillment order as incomplete, indicating the fulfillment service\n        is unable to ship any remaining items and intends to close the fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#close-2020-10"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for marking the fulfillment order as incomplete."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_fulfillment_orders_param_fulfillment_order_id_close"
  /admin/api/2020-10/fulfillment_orders/{fulfillment_order_id}/move.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_order:
                    new_location_id: 905684977
                summary: "Move a fulfillment order to a new location"
      summary: "Moves a fulfillment order from one merchant managed location to another merchant managed location."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#move-2020-10"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "new_location_id"
          description: "The id of the location to which the fulfillment order will be moved."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_fulfillment_orders_param_fulfillment_order_id_move"
  /admin/api/2021-01/orders/{order_id}/fulfillment_orders.json:
    get:
      summary: "Retrieves a list of fulfillment orders for a specific order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#index-2021-01"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "order_id"
          description: "The ID of the order that is associated with the fulfillment orders."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_orders_param_order_id_fulfillment_orders"
  /admin/api/2021-01/fulfillment_orders/{fulfillment_order_id}.json:
    get:
      summary: "Retrieves a specific fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#show-2021-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_fulfillment_orders_param_fulfillment_order_id"
  /admin/api/2021-01/fulfillment_orders/{fulfillment_order_id}/cancel.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Cancel a fulfillment order"
      summary: "Marks a fulfillment order as cancelled."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#cancel-2021-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_fulfillment_orders_param_fulfillment_order_id_cancel"
  /admin/api/2021-01/fulfillment_orders/{fulfillment_order_id}/close.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_order:
                    message: "Not enough inventory to complete this work."
                summary: "Transition a fulfillment order from in progress to incomplete"
      summary: "Marks an in progress fulfillment order as incomplete, indicating the fulfillment service\n        is unable to ship any remaining items and intends to close the fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#close-2021-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for marking the fulfillment order as incomplete."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_fulfillment_orders_param_fulfillment_order_id_close"
  /admin/api/2021-01/fulfillment_orders/{fulfillment_order_id}/move.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_order:
                    new_location_id: 905684977
                summary: "Move a fulfillment order to a new location"
      summary: "Moves a fulfillment order from one merchant managed location to another merchant managed location."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#move-2021-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "new_location_id"
          description: "The id of the location to which the fulfillment order will be moved."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_fulfillment_orders_param_fulfillment_order_id_move"
  /admin/api/2021-01/fulfillment_orders/{fulfillment_order_id}/open.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Transition a fulfillment order from scheduled to open"
      summary: "Marks a scheduled fulfillment order as ready for fulfillment.\n          This endpoint allows merchants to work on a scheduled fulfillment order before its expected fulfill_at datetime."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#open-2021-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_fulfillment_orders_param_fulfillment_order_id_open"
  /admin/api/2021-01/fulfillment_orders/{fulfillment_order_id}/reschedule.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_order:
                    new_fulfill_at: "2021-12-05"
                summary: "Update the fulfill_at time of a scheduled fulfillment order"
      summary: "Updates the fulfill_at time of a scheduled fulfillment order.\n          This endpoint is used to manage the time a scheduled fulfillment order will be marked as ready for fulfillment."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#reschedule-2021-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_fulfillment_orders_param_fulfillment_order_id_reschedule"
  /admin/api/unstable/orders/{order_id}/fulfillment_orders.json:
    get:
      summary: "Retrieves a list of fulfillment orders for a specific order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#index-unstable"
      parameters:
        - in: "path"
          name: "order_id"
          required: true
          schema:
            type: "string"
          description: "order_id"
        - in: "query"
          name: "order_id"
          description: "The ID of the order that is associated with the fulfillment orders."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_orders_param_order_id_fulfillment_orders"
  /admin/api/unstable/fulfillment_orders/{fulfillment_order_id}.json:
    get:
      summary: "Retrieves a specific fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#show-unstable"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_fulfillment_orders_param_fulfillment_order_id"
  /admin/api/unstable/fulfillment_orders/{fulfillment_order_id}/cancel.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Cancel a fulfillment order"
      summary: "Marks a fulfillment order as cancelled."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#cancel-unstable"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_fulfillment_orders_param_fulfillment_order_id_cancel"
  /admin/api/unstable/fulfillment_orders/release_hold.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  order_id: 450789469
                summary: "Release the holds on the fulfillment orders for a specific order"
      summary: "Releases the fulfillment order holds for a specific order. Fulfillment orders are created\n          with an ON_HOLD status if the channel that created the order has a fulfillment hold policy."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#release_hold-unstable"
      parameters:
        - in: "query"
          name: "order_id"
          description: "The ID of the order that is associated to the fulfillment orders."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_fulfillment_orders_release_hold"
  /admin/api/unstable/fulfillment_orders/{fulfillment_order_id}/close.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_order:
                    message: "Not enough inventory to complete this work."
                summary: "Transition a fulfillment order from in progress to incomplete"
      summary: "Marks an in progress fulfillment order as incomplete, indicating the fulfillment service\n        is unable to ship any remaining items and intends to close the fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#close-unstable"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for marking the fulfillment order as incomplete."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_fulfillment_orders_param_fulfillment_order_id_close"
  /admin/api/unstable/fulfillment_orders/{fulfillment_order_id}/move.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_order:
                    new_location_id: 905684977
                summary: "Move a fulfillment order to a new location"
      summary: "Moves a fulfillment order from one merchant managed location to another merchant managed location."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#move-unstable"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "new_location_id"
          description: "The id of the location to which the fulfillment order will be moved."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_fulfillment_orders_param_fulfillment_order_id_move"
  /admin/api/unstable/fulfillment_orders/{fulfillment_order_id}/open.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value: {}
                summary: "Transition a fulfillment order from scheduled to open"
      summary: "Marks a scheduled fulfillment order as ready for fulfillment.\n          This endpoint allows merchants to work on a scheduled fulfillment order before its expected fulfill_at datetime."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#open-unstable"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_fulfillment_orders_param_fulfillment_order_id_open"
  /admin/api/unstable/fulfillment_orders/{fulfillment_order_id}/reschedule.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_order:
                    new_fulfill_at: "2021-12-05"
                summary: "Update the fulfill_at time of a scheduled fulfillment order"
      summary: "Updates the fulfill_at time of a scheduled fulfillment order.\n          This endpoint is used to manage the time a scheduled fulfillment order will be marked as ready for fulfillment."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentorder#reschedule-unstable"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentorder"
        - "shipping-and-fulfillment/fulfillmentorder"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_fulfillment_orders_param_fulfillment_order_id_reschedule"
  /admin/api/2020-01/fulfillment_orders/{fulfillment_order_id}/fulfillment_request.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_request:
                    message: "Fulfill this ASAP please."
                    fulfillment_order_line_items:
                      - id: 1025578671
                        quantity: 1
                      - id: 1025578672
                        quantity: 1
                summary: "Sends a fulfillment request to the fulfillment service of a fulfillment order for the specified line items"
              example2:
                value:
                  fulfillment_request:
                    message: "Fulfill this ASAP please."
                summary: "Sends a fulfillment request to the fulfillment service for all line items on the fulfillment order if fulfillment_order_line_items is left blank"
      summary: "Sends a fulfillment request to the fulfillment service of a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentrequest#create-2020-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional message for the fulfillment request."
          schema: {}
          required: false
        - in: "query"
          name: "fulfillment_order_line_items"
          description: "The fulfillment order line items to be requested for fulfillment. If left blank, all line items of the fulfillment order are requested for fulfillment."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentrequest"
        - "shipping-and-fulfillment/fulfillmentrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_fulfillment_orders_param_fulfillment_order_id_fulfillment_request"
  /admin/api/2020-01/fulfillment_orders/{fulfillment_order_id}/fulfillment_request/accept.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_request:
                    message: "We will start processing your fulfillment on the next business day."
                summary: "Accepts a fulfillment request sent to a fulfillment service and updates the fulfillment order"
      summary: "Accepts a fulfillment request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentrequest#accept-2020-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for accepting the fulfillment request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentrequest"
        - "shipping-and-fulfillment/fulfillmentrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_fulfillment_orders_param_fulfillment_order_id_fulfillment_request_accept"
  /admin/api/2020-01/fulfillment_orders/{fulfillment_order_id}/fulfillment_request/reject.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_request:
                    message: "Not enough inventory on hand to complete the work."
                summary: "Rejects a fulfillment request sent to a fulfillment service and updates the fulfillment order"
      summary: "Rejects a fulfillment request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentrequest#reject-2020-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for rejecting the fulfillment request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentrequest"
        - "shipping-and-fulfillment/fulfillmentrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_fulfillment_orders_param_fulfillment_order_id_fulfillment_request_reject"
  /admin/api/2020-04/fulfillment_orders/{fulfillment_order_id}/fulfillment_request.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_request:
                    message: "Fulfill this ASAP please."
                    fulfillment_order_line_items:
                      - id: 1025578671
                        quantity: 1
                      - id: 1025578672
                        quantity: 1
                summary: "Sends a fulfillment request to the fulfillment service of a fulfillment order for the specified line items"
              example2:
                value:
                  fulfillment_request:
                    message: "Fulfill this ASAP please."
                summary: "Sends a fulfillment request to the fulfillment service for all line items on the fulfillment order if fulfillment_order_line_items is left blank"
      summary: "Sends a fulfillment request to the fulfillment service of a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentrequest#create-2020-04"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional message for the fulfillment request."
          schema: {}
          required: false
        - in: "query"
          name: "fulfillment_order_line_items"
          description: "The fulfillment order line items to be requested for fulfillment. If left blank, all line items of the fulfillment order are requested for fulfillment."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentrequest"
        - "shipping-and-fulfillment/fulfillmentrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_fulfillment_orders_param_fulfillment_order_id_fulfillment_request"
  /admin/api/2020-04/fulfillment_orders/{fulfillment_order_id}/fulfillment_request/accept.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_request:
                    message: "We will start processing your fulfillment on the next business day."
                summary: "Accepts a fulfillment request sent to a fulfillment service and updates the fulfillment order"
      summary: "Accepts a fulfillment request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentrequest#accept-2020-04"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for accepting the fulfillment request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentrequest"
        - "shipping-and-fulfillment/fulfillmentrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_fulfillment_orders_param_fulfillment_order_id_fulfillment_request_accept"
  /admin/api/2020-04/fulfillment_orders/{fulfillment_order_id}/fulfillment_request/reject.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_request:
                    message: "Not enough inventory on hand to complete the work."
                summary: "Rejects a fulfillment request sent to a fulfillment service and updates the fulfillment order"
      summary: "Rejects a fulfillment request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentrequest#reject-2020-04"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for rejecting the fulfillment request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentrequest"
        - "shipping-and-fulfillment/fulfillmentrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_fulfillment_orders_param_fulfillment_order_id_fulfillment_request_reject"
  /admin/api/2020-07/fulfillment_orders/{fulfillment_order_id}/fulfillment_request.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_request:
                    message: "Fulfill this ASAP please."
                    fulfillment_order_line_items:
                      - id: 1025578671
                        quantity: 1
                      - id: 1025578672
                        quantity: 1
                summary: "Sends a fulfillment request to the fulfillment service of a fulfillment order for the specified line items"
              example2:
                value:
                  fulfillment_request:
                    message: "Fulfill this ASAP please."
                summary: "Sends a fulfillment request to the fulfillment service for all line items on the fulfillment order if fulfillment_order_line_items is left blank"
      summary: "Sends a fulfillment request to the fulfillment service of a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentrequest#create-2020-07"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional message for the fulfillment request."
          schema: {}
          required: false
        - in: "query"
          name: "fulfillment_order_line_items"
          description: "The fulfillment order line items to be requested for fulfillment. If left blank, all line items of the fulfillment order are requested for fulfillment."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentrequest"
        - "shipping-and-fulfillment/fulfillmentrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_fulfillment_orders_param_fulfillment_order_id_fulfillment_request"
  /admin/api/2020-07/fulfillment_orders/{fulfillment_order_id}/fulfillment_request/accept.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_request:
                    message: "We will start processing your fulfillment on the next business day."
                summary: "Accepts a fulfillment request sent to a fulfillment service and updates the fulfillment order"
      summary: "Accepts a fulfillment request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentrequest#accept-2020-07"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for accepting the fulfillment request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentrequest"
        - "shipping-and-fulfillment/fulfillmentrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_fulfillment_orders_param_fulfillment_order_id_fulfillment_request_accept"
  /admin/api/2020-07/fulfillment_orders/{fulfillment_order_id}/fulfillment_request/reject.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_request:
                    message: "Not enough inventory on hand to complete the work."
                summary: "Rejects a fulfillment request sent to a fulfillment service and updates the fulfillment order"
      summary: "Rejects a fulfillment request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentrequest#reject-2020-07"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for rejecting the fulfillment request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentrequest"
        - "shipping-and-fulfillment/fulfillmentrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_fulfillment_orders_param_fulfillment_order_id_fulfillment_request_reject"
  /admin/api/2020-10/fulfillment_orders/{fulfillment_order_id}/fulfillment_request.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_request:
                    message: "Fulfill this ASAP please."
                    fulfillment_order_line_items:
                      - id: 1025578671
                        quantity: 1
                      - id: 1025578672
                        quantity: 1
                summary: "Sends a fulfillment request to the fulfillment service of a fulfillment order for the specified line items"
              example2:
                value:
                  fulfillment_request:
                    message: "Fulfill this ASAP please."
                summary: "Sends a fulfillment request to the fulfillment service for all line items on the fulfillment order if fulfillment_order_line_items is left blank"
      summary: "Sends a fulfillment request to the fulfillment service of a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentrequest#create-2020-10"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional message for the fulfillment request."
          schema: {}
          required: false
        - in: "query"
          name: "fulfillment_order_line_items"
          description: "The fulfillment order line items to be requested for fulfillment. If left blank, all line items of the fulfillment order are requested for fulfillment."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentrequest"
        - "shipping-and-fulfillment/fulfillmentrequest"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_fulfillment_orders_param_fulfillment_order_id_fulfillment_request"
  /admin/api/2020-10/fulfillment_orders/{fulfillment_order_id}/fulfillment_request/accept.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_request:
                    message: "We will start processing your fulfillment on the next business day."
                summary: "Accepts a fulfillment request sent to a fulfillment service and updates the fulfillment order"
      summary: "Accepts a fulfillment request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentrequest#accept-2020-10"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for accepting the fulfillment request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentrequest"
        - "shipping-and-fulfillment/fulfillmentrequest"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_fulfillment_orders_param_fulfillment_order_id_fulfillment_request_accept"
  /admin/api/2020-10/fulfillment_orders/{fulfillment_order_id}/fulfillment_request/reject.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_request:
                    message: "Not enough inventory on hand to complete the work."
                summary: "Rejects a fulfillment request sent to a fulfillment service and updates the fulfillment order"
      summary: "Rejects a fulfillment request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentrequest#reject-2020-10"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for rejecting the fulfillment request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentrequest"
        - "shipping-and-fulfillment/fulfillmentrequest"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_fulfillment_orders_param_fulfillment_order_id_fulfillment_request_reject"
  /admin/api/2021-01/fulfillment_orders/{fulfillment_order_id}/fulfillment_request.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_request:
                    message: "Fulfill this ASAP please."
                    fulfillment_order_line_items:
                      - id: 1025578671
                        quantity: 1
                      - id: 1025578672
                        quantity: 1
                summary: "Sends a fulfillment request to the fulfillment service of a fulfillment order for the specified line items"
              example2:
                value:
                  fulfillment_request:
                    message: "Fulfill this ASAP please."
                summary: "Sends a fulfillment request to the fulfillment service for all line items on the fulfillment order if fulfillment_order_line_items is left blank"
      summary: "Sends a fulfillment request to the fulfillment service of a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentrequest#create-2021-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional message for the fulfillment request."
          schema: {}
          required: false
        - in: "query"
          name: "fulfillment_order_line_items"
          description: "The fulfillment order line items to be requested for fulfillment. If left blank, all line items of the fulfillment order are requested for fulfillment."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentrequest"
        - "shipping-and-fulfillment/fulfillmentrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_fulfillment_orders_param_fulfillment_order_id_fulfillment_request"
  /admin/api/2021-01/fulfillment_orders/{fulfillment_order_id}/fulfillment_request/accept.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_request:
                    message: "We will start processing your fulfillment on the next business day."
                summary: "Accepts a fulfillment request sent to a fulfillment service and updates the fulfillment order"
      summary: "Accepts a fulfillment request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentrequest#accept-2021-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for accepting the fulfillment request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentrequest"
        - "shipping-and-fulfillment/fulfillmentrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_fulfillment_orders_param_fulfillment_order_id_fulfillment_request_accept"
  /admin/api/2021-01/fulfillment_orders/{fulfillment_order_id}/fulfillment_request/reject.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_request:
                    message: "Not enough inventory on hand to complete the work."
                summary: "Rejects a fulfillment request sent to a fulfillment service and updates the fulfillment order"
      summary: "Rejects a fulfillment request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentrequest#reject-2021-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for rejecting the fulfillment request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentrequest"
        - "shipping-and-fulfillment/fulfillmentrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_fulfillment_orders_param_fulfillment_order_id_fulfillment_request_reject"
  /admin/api/unstable/fulfillment_orders/{fulfillment_order_id}/fulfillment_request.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_request:
                    message: "Fulfill this ASAP please."
                    fulfillment_order_line_items:
                      - id: 1025578671
                        quantity: 1
                      - id: 1025578672
                        quantity: 1
                summary: "Sends a fulfillment request to the fulfillment service of a fulfillment order for the specified line items"
              example2:
                value:
                  fulfillment_request:
                    message: "Fulfill this ASAP please."
                summary: "Sends a fulfillment request to the fulfillment service for all line items on the fulfillment order if fulfillment_order_line_items is left blank"
      summary: "Sends a fulfillment request to the fulfillment service of a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentrequest#create-unstable"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional message for the fulfillment request."
          schema: {}
          required: false
        - in: "query"
          name: "fulfillment_order_line_items"
          description: "The fulfillment order line items to be requested for fulfillment. If left blank, all line items of the fulfillment order are requested for fulfillment."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentrequest"
        - "shipping-and-fulfillment/fulfillmentrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_fulfillment_orders_param_fulfillment_order_id_fulfillment_request"
  /admin/api/unstable/fulfillment_orders/{fulfillment_order_id}/fulfillment_request/accept.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_request:
                    message: "We will start processing your fulfillment on the next business day."
                summary: "Accepts a fulfillment request sent to a fulfillment service and updates the fulfillment order"
      summary: "Accepts a fulfillment request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentrequest#accept-unstable"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for accepting the fulfillment request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentrequest"
        - "shipping-and-fulfillment/fulfillmentrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_fulfillment_orders_param_fulfillment_order_id_fulfillment_request_accept"
  /admin/api/unstable/fulfillment_orders/{fulfillment_order_id}/fulfillment_request/reject.json:
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_request:
                    message: "Not enough inventory on hand to complete the work."
                summary: "Rejects a fulfillment request sent to a fulfillment service and updates the fulfillment order"
      summary: "Rejects a fulfillment request sent to a fulfillment service for a fulfillment order."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentrequest#reject-unstable"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "message"
          description: "An optional reason for rejecting the fulfillment request."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentrequest"
        - "shipping-and-fulfillment/fulfillmentrequest"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_fulfillment_orders_param_fulfillment_order_id_fulfillment_request_reject"
  /fetch_tracking_numbers:
    get:
      summary: "Get tracking numbers for orders"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#fetch-tracking-numbers"
      parameters:
        - in: "query"
          name: "order_names"
          description: "The fulfillment names we require tracking numbers for (i.e. #1001.1)"
          schema: {}
          required: false
        - in: "query"
          name: "shop"
          description: "The shop's myshopify url"
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_unknown_version_get_fetch_tracking_numbers"
  /fetch_stock:
    get:
      summary: "Get inventory levels"
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#fetch-stock"
      parameters:
        - in: "query"
          name: "max_retries"
          description: "The maximum amount of times Shopify will send the request for inventory levels."
          schema: {}
          required: false
        - in: "query"
          name: "shop"
          description: "The shop's myshopify url."
          schema: {}
          required: false
        - in: "query"
          name: "sku"
          description: "The SKU for the Product Variant we need stock levels for."
          schema: {}
          required: false
        - in: "query"
          name: "timestamp"
          description: "The Unix timestamp from when the inventory request was made."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_unknown_version_get_fetch_stock"
  /admin/api/2020-01/fulfillment_services.json:
    get:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#index-2020-01"
      parameters:
        - in: "query"
          name: "scope"
          description: "current_client: Returns fulfillment providers that have been created by the app sending the request (default)\n                        all: Returns all the fulfillment providers"
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_fulfillment_services"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_service:
                    name: "Jupiter Fulfillment"
                    callback_url: "http://google.com"
                    inventory_management: true
                    tracking_support: true
                    requires_shipping_method: true
                    format: "json"
                summary: "Create a fulfillment service"
      summary: "To create a fulfillment service, you can also use a cURL request that uses that fulfillment_service.json payload:\n          Copy  curl -X POST -d @fulfillment_service.json -H\"Accept:application/json\" -H\"Content-Type:application/json\" -H\"X-Shopify-Access-Token:THE_TOKEN_GOES_HERE\" https://AUTHORIZED_SHOP.myshopify.com/admin/fulfillment_services\n          \n          Where THE_TOKEN_GOES_HERE is replaced by the OAuth token given to you by Shopify and https://AUTHORIZED_SHOP.myshopify.com/admin/fulfillment_services is replaced by the authorized shop's URL."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#create-2020-01"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_fulfillment_services"
  /admin/api/2020-01/fulfillment_services/{fulfillment_service_id}.json:
    get:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#show-2020-01"
      parameters:
        - in: "path"
          name: "fulfillment_service_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_fulfillment_services_param_fulfillment_service_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_service:
                    id: 755357713
                    name: "New Fulfillment Service Name"
                summary: "Update a fulfillment service"
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#update-2020-01"
      parameters:
        - in: "path"
          name: "fulfillment_service_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_fulfillment_services_param_fulfillment_service_id"
    delete:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#destroy-2020-01"
      parameters:
        - in: "path"
          name: "fulfillment_service_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_fulfillment_services_param_fulfillment_service_id"
  /admin/api/2020-04/fulfillment_services.json:
    get:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#index-2020-04"
      parameters:
        - in: "query"
          name: "scope"
          description: "current_client: Returns fulfillment providers that have been created by the app sending the request (default)\n                        all: Returns all the fulfillment providers"
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_fulfillment_services"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_service:
                    name: "Jupiter Fulfillment"
                    callback_url: "http://google.com"
                    inventory_management: true
                    tracking_support: true
                    requires_shipping_method: true
                    format: "json"
                summary: "Create a fulfillment service"
      summary: "To create a fulfillment service, you can also use a cURL request that uses that fulfillment_service.json payload:\n          Copy  curl -X POST -d @fulfillment_service.json -H\"Accept:application/json\" -H\"Content-Type:application/json\" -H\"X-Shopify-Access-Token:THE_TOKEN_GOES_HERE\" https://AUTHORIZED_SHOP.myshopify.com/admin/fulfillment_services\n          \n          Where THE_TOKEN_GOES_HERE is replaced by the OAuth token given to you by Shopify and https://AUTHORIZED_SHOP.myshopify.com/admin/fulfillment_services is replaced by the authorized shop's URL."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#create-2020-04"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_fulfillment_services"
  /admin/api/2020-04/fulfillment_services/{fulfillment_service_id}.json:
    get:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#show-2020-04"
      parameters:
        - in: "path"
          name: "fulfillment_service_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_fulfillment_services_param_fulfillment_service_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_service:
                    id: 755357713
                    name: "New Fulfillment Service Name"
                summary: "Update a fulfillment service"
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#update-2020-04"
      parameters:
        - in: "path"
          name: "fulfillment_service_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_fulfillment_services_param_fulfillment_service_id"
    delete:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#destroy-2020-04"
      parameters:
        - in: "path"
          name: "fulfillment_service_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_fulfillment_services_param_fulfillment_service_id"
  /admin/api/2020-07/fulfillment_services.json:
    get:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#index-2020-07"
      parameters:
        - in: "query"
          name: "scope"
          description: "current_client: Returns fulfillment providers that have been created by the app sending the request (default)\n                        all: Returns all the fulfillment providers"
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_fulfillment_services"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_service:
                    name: "Jupiter Fulfillment"
                    callback_url: "http://google.com"
                    inventory_management: true
                    tracking_support: true
                    requires_shipping_method: true
                    format: "json"
                summary: "Create a fulfillment service"
      summary: "To create a fulfillment service, you can also use a cURL request that uses that fulfillment_service.json payload:\n          Copy  curl -X POST -d @fulfillment_service.json -H\"Accept:application/json\" -H\"Content-Type:application/json\" -H\"X-Shopify-Access-Token:THE_TOKEN_GOES_HERE\" https://AUTHORIZED_SHOP.myshopify.com/admin/fulfillment_services\n          \n          Where THE_TOKEN_GOES_HERE is replaced by the OAuth token given to you by Shopify and https://AUTHORIZED_SHOP.myshopify.com/admin/fulfillment_services is replaced by the authorized shop's URL."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#create-2020-07"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_fulfillment_services"
  /admin/api/2020-07/fulfillment_services/{fulfillment_service_id}.json:
    get:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#show-2020-07"
      parameters:
        - in: "path"
          name: "fulfillment_service_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_fulfillment_services_param_fulfillment_service_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_service:
                    id: 755357713
                    name: "New Fulfillment Service Name"
                summary: "Update a fulfillment service"
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#update-2020-07"
      parameters:
        - in: "path"
          name: "fulfillment_service_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_fulfillment_services_param_fulfillment_service_id"
    delete:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#destroy-2020-07"
      parameters:
        - in: "path"
          name: "fulfillment_service_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_fulfillment_services_param_fulfillment_service_id"
  /admin/api/2020-10/fulfillment_services.json:
    get:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#index-2020-10"
      parameters:
        - in: "query"
          name: "scope"
          description: "current_client: Returns fulfillment providers that have been created by the app sending the request (default)\n                        all: Returns all the fulfillment providers"
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_fulfillment_services"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_service:
                    name: "Jupiter Fulfillment"
                    callback_url: "http://google.com"
                    inventory_management: true
                    tracking_support: true
                    requires_shipping_method: true
                    format: "json"
                summary: "Create a fulfillment service"
      summary: "To create a fulfillment service, you can also use a cURL request that uses that fulfillment_service.json payload:\n          Copy  curl -X POST -d @fulfillment_service.json -H\"Accept:application/json\" -H\"Content-Type:application/json\" -H\"X-Shopify-Access-Token:THE_TOKEN_GOES_HERE\" https://AUTHORIZED_SHOP.myshopify.com/admin/fulfillment_services\n          \n          Where THE_TOKEN_GOES_HERE is replaced by the OAuth token given to you by Shopify and https://AUTHORIZED_SHOP.myshopify.com/admin/fulfillment_services is replaced by the authorized shop's URL."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#create-2020-10"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_fulfillment_services"
  /admin/api/2020-10/fulfillment_services/{fulfillment_service_id}.json:
    get:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#show-2020-10"
      parameters:
        - in: "path"
          name: "fulfillment_service_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_fulfillment_services_param_fulfillment_service_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_service:
                    id: 755357713
                    name: "New Fulfillment Service Name"
                summary: "Update a fulfillment service"
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#update-2020-10"
      parameters:
        - in: "path"
          name: "fulfillment_service_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_fulfillment_services_param_fulfillment_service_id"
    delete:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#destroy-2020-10"
      parameters:
        - in: "path"
          name: "fulfillment_service_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_fulfillment_services_param_fulfillment_service_id"
  /admin/api/2021-01/fulfillment_services.json:
    get:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#index-2021-01"
      parameters:
        - in: "query"
          name: "scope"
          description: "current_client: Returns fulfillment providers that have been created by the app sending the request (default)\n                        all: Returns all the fulfillment providers"
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_fulfillment_services"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_service:
                    name: "Jupiter Fulfillment"
                    callback_url: "http://google.com"
                    inventory_management: true
                    tracking_support: true
                    requires_shipping_method: true
                    format: "json"
                summary: "Create a fulfillment service"
      summary: "To create a fulfillment service, you can also use a cURL request that uses that fulfillment_service.json payload:\n          Copy  curl -X POST -d @fulfillment_service.json -H\"Accept:application/json\" -H\"Content-Type:application/json\" -H\"X-Shopify-Access-Token:THE_TOKEN_GOES_HERE\" https://AUTHORIZED_SHOP.myshopify.com/admin/fulfillment_services\n          \n          Where THE_TOKEN_GOES_HERE is replaced by the OAuth token given to you by Shopify and https://AUTHORIZED_SHOP.myshopify.com/admin/fulfillment_services is replaced by the authorized shop's URL."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#create-2021-01"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_fulfillment_services"
  /admin/api/2021-01/fulfillment_services/{fulfillment_service_id}.json:
    get:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#show-2021-01"
      parameters:
        - in: "path"
          name: "fulfillment_service_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_fulfillment_services_param_fulfillment_service_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_service:
                    id: 755357713
                    name: "New Fulfillment Service Name"
                summary: "Update a fulfillment service"
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#update-2021-01"
      parameters:
        - in: "path"
          name: "fulfillment_service_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_fulfillment_services_param_fulfillment_service_id"
    delete:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#destroy-2021-01"
      parameters:
        - in: "path"
          name: "fulfillment_service_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_fulfillment_services_param_fulfillment_service_id"
  /admin/api/unstable/fulfillment_services.json:
    get:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#index-unstable"
      parameters:
        - in: "query"
          name: "scope"
          description: "current_client: Returns fulfillment providers that have been created by the app sending the request (default)\n                        all: Returns all the fulfillment providers"
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_fulfillment_services"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_service:
                    name: "Jupiter Fulfillment"
                    callback_url: "http://google.com"
                    inventory_management: true
                    tracking_support: true
                    requires_shipping_method: true
                    format: "json"
                summary: "Create a fulfillment service"
      summary: "To create a fulfillment service, you can also use a cURL request that uses that fulfillment_service.json payload:\n          Copy  curl -X POST -d @fulfillment_service.json -H\"Accept:application/json\" -H\"Content-Type:application/json\" -H\"X-Shopify-Access-Token:THE_TOKEN_GOES_HERE\" https://AUTHORIZED_SHOP.myshopify.com/admin/fulfillment_services\n          \n          Where THE_TOKEN_GOES_HERE is replaced by the OAuth token given to you by Shopify and https://AUTHORIZED_SHOP.myshopify.com/admin/fulfillment_services is replaced by the authorized shop's URL."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#create-unstable"
      parameters: []
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_fulfillment_services"
  /admin/api/unstable/fulfillment_services/{fulfillment_service_id}.json:
    get:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#show-unstable"
      parameters:
        - in: "path"
          name: "fulfillment_service_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_fulfillment_services_param_fulfillment_service_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  fulfillment_service:
                    id: 755357713
                    name: "New Fulfillment Service Name"
                summary: "Update a fulfillment service"
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#update-unstable"
      parameters:
        - in: "path"
          name: "fulfillment_service_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_fulfillment_services_param_fulfillment_service_id"
    delete:
      summary: ""
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/fulfillmentservice#destroy-unstable"
      parameters:
        - in: "path"
          name: "fulfillment_service_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_service_id"
      tags:
        - "shipping-and-fulfillment"
        - "fulfillmentservice"
        - "shipping-and-fulfillment/fulfillmentservice"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_fulfillment_services_param_fulfillment_service_id"
  /admin/api/2020-01/fulfillment_orders/{fulfillment_order_id}/locations_for_move.json:
    get:
      summary: "Retrieves a list of locations that a fulfillment order can potentially move to.\n          The resulting list is sorted alphabetically in ascending order by location name."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/locationsformove#index-2020-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "fulfillment_order_id"
          description: "The ID of the fulfillment order."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "locationsformove"
        - "shipping-and-fulfillment/locationsformove"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_fulfillment_orders_param_fulfillment_order_id_locations_for_move"
  /admin/api/2020-04/fulfillment_orders/{fulfillment_order_id}/locations_for_move.json:
    get:
      summary: "Retrieves a list of locations that a fulfillment order can potentially move to.\n          The resulting list is sorted alphabetically in ascending order by location name."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/locationsformove#index-2020-04"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "fulfillment_order_id"
          description: "The ID of the fulfillment order."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "locationsformove"
        - "shipping-and-fulfillment/locationsformove"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_fulfillment_orders_param_fulfillment_order_id_locations_for_move"
  /admin/api/2020-07/fulfillment_orders/{fulfillment_order_id}/locations_for_move.json:
    get:
      summary: "Retrieves a list of locations that a fulfillment order can potentially move to.\n          The resulting list is sorted alphabetically in ascending order by location name."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/locationsformove#index-2020-07"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "fulfillment_order_id"
          description: "The ID of the fulfillment order."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "locationsformove"
        - "shipping-and-fulfillment/locationsformove"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_fulfillment_orders_param_fulfillment_order_id_locations_for_move"
  /admin/api/2020-10/fulfillment_orders/{fulfillment_order_id}/locations_for_move.json:
    get:
      summary: "Retrieves a list of locations that a fulfillment order can potentially move to.\n          The resulting list is sorted alphabetically in ascending order by location name."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/locationsformove#index-2020-10"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "fulfillment_order_id"
          description: "The ID of the fulfillment order."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "locationsformove"
        - "shipping-and-fulfillment/locationsformove"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_fulfillment_orders_param_fulfillment_order_id_locations_for_move"
  /admin/api/2021-01/fulfillment_orders/{fulfillment_order_id}/locations_for_move.json:
    get:
      summary: "Retrieves a list of locations that a fulfillment order can potentially move to.\n          The resulting list is sorted alphabetically in ascending order by location name."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/locationsformove#index-2021-01"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "fulfillment_order_id"
          description: "The ID of the fulfillment order."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "locationsformove"
        - "shipping-and-fulfillment/locationsformove"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_fulfillment_orders_param_fulfillment_order_id_locations_for_move"
  /admin/api/unstable/fulfillment_orders/{fulfillment_order_id}/locations_for_move.json:
    get:
      summary: "Retrieves a list of locations that a fulfillment order can potentially move to.\n          The resulting list is sorted alphabetically in ascending order by location name."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shipping-and-fulfillment/locationsformove#index-unstable"
      parameters:
        - in: "path"
          name: "fulfillment_order_id"
          required: true
          schema:
            type: "string"
          description: "fulfillment_order_id"
        - in: "query"
          name: "fulfillment_order_id"
          description: "The ID of the fulfillment order."
          schema: {}
          required: false
      tags:
        - "shipping-and-fulfillment"
        - "locationsformove"
        - "shipping-and-fulfillment/locationsformove"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_fulfillment_orders_param_fulfillment_order_id_locations_for_move"
  /admin/api/2020-01/shopify_payments/balance.json:
    get:
      summary: "Retrieves the account's current balance."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shopify_payments/balance#show-2020-01"
      parameters: []
      tags:
        - "shopify_payments"
        - "balance"
        - "shopify_payments/balance"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_shopify_payments_balance"
  /admin/api/2020-04/shopify_payments/balance.json:
    get:
      summary: "Retrieves the account's current balance."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shopify_payments/balance#show-2020-04"
      parameters: []
      tags:
        - "shopify_payments"
        - "balance"
        - "shopify_payments/balance"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_shopify_payments_balance"
  /admin/api/2020-07/shopify_payments/balance.json:
    get:
      summary: "Retrieves the account's current balance."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shopify_payments/balance#show-2020-07"
      parameters: []
      tags:
        - "shopify_payments"
        - "balance"
        - "shopify_payments/balance"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_shopify_payments_balance"
  /admin/api/2020-10/shopify_payments/balance.json:
    get:
      summary: "Retrieves the account's current balance."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shopify_payments/balance#show-2020-10"
      parameters: []
      tags:
        - "shopify_payments"
        - "balance"
        - "shopify_payments/balance"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_shopify_payments_balance"
  /admin/api/2021-01/shopify_payments/balance.json:
    get:
      summary: "Retrieves the account's current balance."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shopify_payments/balance#show-2021-01"
      parameters: []
      tags:
        - "shopify_payments"
        - "balance"
        - "shopify_payments/balance"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_shopify_payments_balance"
  /admin/api/unstable/shopify_payments/balance.json:
    get:
      summary: "Retrieves the account's current balance."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shopify_payments/balance#show-unstable"
      parameters: []
      tags:
        - "shopify_payments"
        - "balance"
        - "shopify_payments/balance"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_shopify_payments_balance"
  /admin/api/2020-01/shopify_payments/disputes.json:
    get:
      summary: "Retrieve all disputes ordered by initiated_at date and time (ISO 8601 format), with the most recent being first.\n          Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shopify_payments/dispute#index-2020-01"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Return only disputes after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "last_id"
          description: "Return only disputes before the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Return only disputes with the specified status."
          schema: {}
          required: false
        - in: "query"
          name: "initiated_at"
          description: "Return only disputes with the specified initiated_at date (ISO 8601 format)."
          schema: {}
          required: false
      tags:
        - "shopify_payments"
        - "dispute"
        - "shopify_payments/dispute"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_shopify_payments_disputes"
  /admin/api/2020-01/shopify_payments/disputes/{dispute_id}.json:
    get:
      summary: "Retrieves a single dispute by ID."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shopify_payments/dispute#show-2020-01"
      parameters:
        - in: "path"
          name: "dispute_id"
          required: true
          schema:
            type: "string"
          description: "dispute_id"
      tags:
        - "shopify_payments"
        - "dispute"
        - "shopify_payments/dispute"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_shopify_payments_disputes_param_dispute_id"
  /admin/api/2020-04/shopify_payments/disputes.json:
    get:
      summary: "Retrieve all disputes ordered by initiated_at date and time (ISO 8601 format), with the most recent being first.\n          Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shopify_payments/dispute#index-2020-04"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Return only disputes after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "last_id"
          description: "Return only disputes before the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Return only disputes with the specified status."
          schema: {}
          required: false
        - in: "query"
          name: "initiated_at"
          description: "Return only disputes with the specified initiated_at date (ISO 8601 format)."
          schema: {}
          required: false
      tags:
        - "shopify_payments"
        - "dispute"
        - "shopify_payments/dispute"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_shopify_payments_disputes"
  /admin/api/2020-01/shopify_payments/payouts.json:
    get:
      summary: "Retrieves a list of all payouts ordered by payout date, with the most recent being first.\n          Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shopify_payments/payout#index-2020-01"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Filter the response to payouts made after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "last_id"
          description: "Filter the response to payouts made before the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "date_min"
          description: "Filter the response to payouts made inclusively after the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "date_max"
          description: "Filter the response to payouts made inclusively before the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "date"
          description: "Filter the response to payouts made on the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Filter the response to payouts made with the specified status."
          schema: {}
          required: false
      tags:
        - "shopify_payments"
        - "payout"
        - "shopify_payments/payout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_shopify_payments_payouts"
  /admin/api/2020-01/shopify_payments/payouts/{payout_id}.json:
    get:
      summary: "Retrieves a single payout by id."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shopify_payments/payout#show-2020-01"
      parameters:
        - in: "path"
          name: "payout_id"
          required: true
          schema:
            type: "string"
          description: "payout_id"
      tags:
        - "shopify_payments"
        - "payout"
        - "shopify_payments/payout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_shopify_payments_payouts_param_payout_id"
  /admin/api/2020-04/shopify_payments/payouts.json:
    get:
      summary: "Retrieves a list of all payouts ordered by payout date, with the most recent being first.\n          Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shopify_payments/payout#index-2020-04"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Filter the response to payouts made after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "last_id"
          description: "Filter the response to payouts made before the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "date_min"
          description: "Filter the response to payouts made inclusively after the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "date_max"
          description: "Filter the response to payouts made inclusively before the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "date"
          description: "Filter the response to payouts made on the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Filter the response to payouts made with the specified status."
          schema: {}
          required: false
      tags:
        - "shopify_payments"
        - "payout"
        - "shopify_payments/payout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_shopify_payments_payouts"
  /admin/api/2020-04/shopify_payments/payouts/{payout_id}.json:
    get:
      summary: "Retrieves a single payout by id."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shopify_payments/payout#show-2020-04"
      parameters:
        - in: "path"
          name: "payout_id"
          required: true
          schema:
            type: "string"
          description: "payout_id"
      tags:
        - "shopify_payments"
        - "payout"
        - "shopify_payments/payout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_shopify_payments_payouts_param_payout_id"
  /admin/api/2020-07/shopify_payments/payouts.json:
    get:
      summary: "Retrieves a list of all payouts ordered by payout date, with the most recent being first.\n          Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shopify_payments/payout#index-2020-07"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Filter the response to payouts made after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "last_id"
          description: "Filter the response to payouts made before the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "date_min"
          description: "Filter the response to payouts made inclusively after the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "date_max"
          description: "Filter the response to payouts made inclusively before the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "date"
          description: "Filter the response to payouts made on the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Filter the response to payouts made with the specified status."
          schema: {}
          required: false
      tags:
        - "shopify_payments"
        - "payout"
        - "shopify_payments/payout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_shopify_payments_payouts"
  /admin/api/2020-07/shopify_payments/payouts/{payout_id}.json:
    get:
      summary: "Retrieves a single payout by id."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shopify_payments/payout#show-2020-07"
      parameters:
        - in: "path"
          name: "payout_id"
          required: true
          schema:
            type: "string"
          description: "payout_id"
      tags:
        - "shopify_payments"
        - "payout"
        - "shopify_payments/payout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_shopify_payments_payouts_param_payout_id"
  /admin/api/2020-10/shopify_payments/payouts.json:
    get:
      summary: "Retrieves a list of all payouts ordered by payout date, with the most recent being first.\n          Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shopify_payments/payout#index-2020-10"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Filter the response to payouts made after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "last_id"
          description: "Filter the response to payouts made before the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "date_min"
          description: "Filter the response to payouts made inclusively after the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "date_max"
          description: "Filter the response to payouts made inclusively before the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "date"
          description: "Filter the response to payouts made on the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Filter the response to payouts made with the specified status."
          schema: {}
          required: false
      tags:
        - "shopify_payments"
        - "payout"
        - "shopify_payments/payout"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_shopify_payments_payouts"
  /admin/api/2020-10/shopify_payments/payouts/{payout_id}.json:
    get:
      summary: "Retrieves a single payout by id."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shopify_payments/payout#show-2020-10"
      parameters:
        - in: "path"
          name: "payout_id"
          required: true
          schema:
            type: "string"
          description: "payout_id"
      tags:
        - "shopify_payments"
        - "payout"
        - "shopify_payments/payout"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_shopify_payments_payouts_param_payout_id"
  /admin/api/2021-01/shopify_payments/payouts.json:
    get:
      summary: "Retrieves a list of all payouts ordered by payout date, with the most recent being first.\n          Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shopify_payments/payout#index-2021-01"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Filter the response to payouts made after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "last_id"
          description: "Filter the response to payouts made before the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "date_min"
          description: "Filter the response to payouts made inclusively after the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "date_max"
          description: "Filter the response to payouts made inclusively before the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "date"
          description: "Filter the response to payouts made on the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Filter the response to payouts made with the specified status."
          schema: {}
          required: false
      tags:
        - "shopify_payments"
        - "payout"
        - "shopify_payments/payout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_shopify_payments_payouts"
  /admin/api/2021-01/shopify_payments/payouts/{payout_id}.json:
    get:
      summary: "Retrieves a single payout by id."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shopify_payments/payout#show-2021-01"
      parameters:
        - in: "path"
          name: "payout_id"
          required: true
          schema:
            type: "string"
          description: "payout_id"
      tags:
        - "shopify_payments"
        - "payout"
        - "shopify_payments/payout"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_shopify_payments_payouts_param_payout_id"
  /admin/api/unstable/shopify_payments/payouts.json:
    get:
      summary: "Retrieves a list of all payouts ordered by payout date, with the most recent being first.\n          Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shopify_payments/payout#index-unstable"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Filter the response to payouts made after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "last_id"
          description: "Filter the response to payouts made before the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "date_min"
          description: "Filter the response to payouts made inclusively after the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "date_max"
          description: "Filter the response to payouts made inclusively before the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "date"
          description: "Filter the response to payouts made on the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "status"
          description: "Filter the response to payouts made with the specified status."
          schema: {}
          required: false
      tags:
        - "shopify_payments"
        - "payout"
        - "shopify_payments/payout"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_shopify_payments_payouts"
  /admin/api/unstable/shopify_payments/payouts/{payout_id}.json:
    get:
      summary: "Retrieves a single payout by id."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shopify_payments/payout#show-unstable"
      parameters:
        - in: "path"
          name: "payout_id"
          required: true
          schema:
            type: "string"
          description: "payout_id"
      tags:
        - "shopify_payments"
        - "payout"
        - "shopify_payments/payout"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_shopify_payments_payouts_param_payout_id"
  /admin/api/2020-01/shopify_payments/balance/transactions.json:
    get:
      summary: "Retrieves a list of all balance transactions ordered by processing\ntime, with the most recent being first.\nNote: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. Sending the page parameter will return an error. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/shopify_payments/transaction#index-2020-01"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Filter response to transactions exclusively after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "last_id"
          description: "Filter response to transactions exclusively before the specified ID"
          schema: {}
          required: false
        - in: "query"
          name: "test"
          description: "Filter response to transactions placed in test mode."
          schema: {}
          required: false
        - in: "query"
          name: "payout_id"
          description: "Filter response to transactions paid out in the specified payout."
          schema: {}
          required: false
        - in: "query"
          name: "payout_status"
          description: "Filter response to transactions with the specified payout status"
          schema: {}
          required: false
      tags:
        - "shopify_payments"
        - "transaction"
        - "shopify_payments/transaction"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_shopify_payments_balance_transactions"
  /admin/api/2020-01/countries.json:
    get:
      summary: "Retrieves a list of countries."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#index-2020-01"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_countries"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  country:
                    code: "FR"
                summary: "Create a country using Shopify's tax rate for it"
              example2:
                value:
                  country:
                    code: "FR"
                    tax: 0.2
                summary: "Create a country using a custom tax rate"
      summary: "Caution\n  As of version 2020-10, the tax field is deprecated.\n\nCreates a country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#create-2020-01"
      parameters: []
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_create_countries"
  /admin/api/2020-01/countries/count.json:
    get:
      summary: "Retrieves a count of countries."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#count-2020-01"
      parameters: []
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_countries_count"
  /admin/api/2020-01/countries/{country_id}.json:
    get:
      summary: "Retrieves a specific county."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#show-2020-01"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_countries_param_country_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  country:
                    id: 879921427
                    tax: 0.05
                summary: "Update a country's tax rate"
      summary: "Caution\n  As of version 2020-10, the tax field is deprecated.\n\nUpdates an existing country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#update-2020-01"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_countries_param_country_id"
    delete:
      summary: "Deletes a country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#destroy-2020-01"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_delete_countries_param_country_id"
  /admin/api/2020-04/countries.json:
    get:
      summary: "Retrieves a list of countries."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#index-2020-04"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_countries"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  country:
                    code: "FR"
                summary: "Create a country using Shopify's tax rate for it"
              example2:
                value:
                  country:
                    code: "FR"
                    tax: 0.2
                summary: "Create a country using a custom tax rate"
      summary: "Caution\n  As of version 2020-10, the tax field is deprecated.\n\nCreates a country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#create-2020-04"
      parameters: []
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_create_countries"
  /admin/api/2020-04/countries/count.json:
    get:
      summary: "Retrieves a count of countries."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#count-2020-04"
      parameters: []
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_countries_count"
  /admin/api/2020-04/countries/{country_id}.json:
    get:
      summary: "Retrieves a specific county."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#show-2020-04"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_countries_param_country_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  country:
                    id: 879921427
                    tax: 0.05
                summary: "Update a country's tax rate"
      summary: "Caution\n  As of version 2020-10, the tax field is deprecated.\n\nUpdates an existing country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#update-2020-04"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_countries_param_country_id"
    delete:
      summary: "Deletes a country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#destroy-2020-04"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_delete_countries_param_country_id"
  /admin/api/2020-07/countries.json:
    get:
      summary: "Retrieves a list of countries."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#index-2020-07"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_countries"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  country:
                    code: "FR"
                summary: "Create a country using Shopify's tax rate for it"
              example2:
                value:
                  country:
                    code: "FR"
                    tax: 0.2
                summary: "Create a country using a custom tax rate"
      summary: "Caution\n  As of version 2020-10, the tax field is deprecated.\n\nCreates a country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#create-2020-07"
      parameters: []
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_create_countries"
  /admin/api/2020-07/countries/count.json:
    get:
      summary: "Retrieves a count of countries."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#count-2020-07"
      parameters: []
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_countries_count"
  /admin/api/2020-07/countries/{country_id}.json:
    get:
      summary: "Retrieves a specific county."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#show-2020-07"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_countries_param_country_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  country:
                    id: 879921427
                    tax: 0.05
                summary: "Update a country's tax rate"
      summary: "Caution\n  As of version 2020-10, the tax field is deprecated.\n\nUpdates an existing country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#update-2020-07"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_countries_param_country_id"
    delete:
      summary: "Deletes a country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#destroy-2020-07"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_delete_countries_param_country_id"
  /admin/api/2020-10/countries.json:
    get:
      summary: "Retrieves a list of countries."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#index-2020-10"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_countries"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  country:
                    code: "FR"
                summary: "Create a country using Shopify's tax rate for it"
              example2:
                value:
                  country:
                    code: "FR"
                    tax: 0.2
                summary: "Create a country using a custom tax rate"
      summary: "Caution\n  As of version 2020-10, the tax field is deprecated.\n\nCreates a country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#create-2020-10"
      parameters: []
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "create_countries"
  /admin/api/2020-10/countries/count.json:
    get:
      summary: "Retrieves a count of countries."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#count-2020-10"
      parameters: []
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_countries_count"
  /admin/api/2020-10/countries/{country_id}.json:
    get:
      summary: "Retrieves a specific county."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#show-2020-10"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_countries_param_country_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  country:
                    id: 879921427
                    tax: 0.05
                summary: "Update a country's tax rate"
      summary: "Caution\n  As of version 2020-10, the tax field is deprecated.\n\nUpdates an existing country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#update-2020-10"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_countries_param_country_id"
    delete:
      summary: "Deletes a country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#destroy-2020-10"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "delete_countries_param_country_id"
  /admin/api/2021-01/countries.json:
    get:
      summary: "Retrieves a list of countries."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#index-2021-01"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_countries"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  country:
                    code: "FR"
                summary: "Create a country using Shopify's tax rate for it"
              example2:
                value:
                  country:
                    code: "FR"
                    tax: 0.2
                summary: "Create a country using a custom tax rate"
      summary: "Caution\n  As of version 2020-10, the tax field is deprecated.\n\nCreates a country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#create-2021-01"
      parameters: []
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_create_countries"
  /admin/api/2021-01/countries/count.json:
    get:
      summary: "Retrieves a count of countries."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#count-2021-01"
      parameters: []
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_countries_count"
  /admin/api/2021-01/countries/{country_id}.json:
    get:
      summary: "Retrieves a specific county."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#show-2021-01"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_countries_param_country_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  country:
                    id: 879921427
                    tax: 0.05
                summary: "Update a country's tax rate"
      summary: "Caution\n  As of version 2020-10, the tax field is deprecated.\n\nUpdates an existing country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#update-2021-01"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_countries_param_country_id"
    delete:
      summary: "Deletes a country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#destroy-2021-01"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_delete_countries_param_country_id"
  /admin/api/unstable/countries.json:
    get:
      summary: "Retrieves a list of countries."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#index-unstable"
      parameters:
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_countries"
    post:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  country:
                    code: "FR"
                summary: "Create a country using Shopify's tax rate for it"
              example2:
                value:
                  country:
                    code: "FR"
                    tax: 0.2
                summary: "Create a country using a custom tax rate"
      summary: "Caution\n  As of version 2020-10, the tax field is deprecated.\n\nCreates a country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#create-unstable"
      parameters: []
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_create_countries"
  /admin/api/unstable/countries/count.json:
    get:
      summary: "Retrieves a count of countries."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#count-unstable"
      parameters: []
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_countries_count"
  /admin/api/unstable/countries/{country_id}.json:
    get:
      summary: "Retrieves a specific county."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#show-unstable"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_countries_param_country_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  country:
                    id: 879921427
                    tax: 0.05
                summary: "Update a country's tax rate"
      summary: "Caution\n  As of version 2020-10, the tax field is deprecated.\n\nUpdates an existing country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#update-unstable"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_countries_param_country_id"
    delete:
      summary: "Deletes a country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/country#destroy-unstable"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
      tags:
        - "store-properties"
        - "country"
        - "store-properties/country"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_delete_countries_param_country_id"
  /admin/api/2020-01/currencies.json:
    get:
      summary: "Retrieves a list of currencies enabled on a shop"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/currency#index-2020-01"
      parameters: []
      tags:
        - "store-properties"
        - "currency"
        - "store-properties/currency"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_currencies"
  /admin/api/2020-04/currencies.json:
    get:
      summary: "Retrieves a list of currencies enabled on a shop"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/currency#index-2020-04"
      parameters: []
      tags:
        - "store-properties"
        - "currency"
        - "store-properties/currency"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_currencies"
  /admin/api/2020-07/currencies.json:
    get:
      summary: "Retrieves a list of currencies enabled on a shop"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/currency#index-2020-07"
      parameters: []
      tags:
        - "store-properties"
        - "currency"
        - "store-properties/currency"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_currencies"
  /admin/api/2020-10/currencies.json:
    get:
      summary: "Retrieves a list of currencies enabled on a shop"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/currency#index-2020-10"
      parameters: []
      tags:
        - "store-properties"
        - "currency"
        - "store-properties/currency"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_currencies"
  /admin/api/2021-01/currencies.json:
    get:
      summary: "Retrieves a list of currencies enabled on a shop"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/currency#index-2021-01"
      parameters: []
      tags:
        - "store-properties"
        - "currency"
        - "store-properties/currency"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_currencies"
  /admin/api/unstable/currencies.json:
    get:
      summary: "Retrieves a list of currencies enabled on a shop"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/currency#index-unstable"
      parameters: []
      tags:
        - "store-properties"
        - "currency"
        - "store-properties/currency"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_currencies"
  /admin/api/2020-01/policies.json:
    get:
      summary: "Retrieves a list of the shop's policies"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/policy#index-2020-01"
      parameters: []
      tags:
        - "store-properties"
        - "policy"
        - "store-properties/policy"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_policies"
  /admin/api/2020-04/policies.json:
    get:
      summary: "Retrieves a list of the shop's policies"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/policy#index-2020-04"
      parameters: []
      tags:
        - "store-properties"
        - "policy"
        - "store-properties/policy"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_policies"
  /admin/api/2020-07/policies.json:
    get:
      summary: "Retrieves a list of the shop's policies"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/policy#index-2020-07"
      parameters: []
      tags:
        - "store-properties"
        - "policy"
        - "store-properties/policy"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_policies"
  /admin/api/2020-10/policies.json:
    get:
      summary: "Retrieves a list of the shop's policies"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/policy#index-2020-10"
      parameters: []
      tags:
        - "store-properties"
        - "policy"
        - "store-properties/policy"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_policies"
  /admin/api/2021-01/policies.json:
    get:
      summary: "Retrieves a list of the shop's policies"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/policy#index-2021-01"
      parameters: []
      tags:
        - "store-properties"
        - "policy"
        - "store-properties/policy"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_policies"
  /admin/api/unstable/policies.json:
    get:
      summary: "Retrieves a list of the shop's policies"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/policy#index-unstable"
      parameters: []
      tags:
        - "store-properties"
        - "policy"
        - "store-properties/policy"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_policies"
  /admin/api/2020-01/countries/{country_id}/provinces.json:
    get:
      summary: "Retrieves a list of provinces"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#index-2020-01"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of fields names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_countries_param_country_id_provinces"
  /admin/api/2020-01/countries/{country_id}/provinces/count.json:
    get:
      summary: "Retrieves a count of provinces for a country"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#count-2020-01"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_countries_param_country_id_provinces_count"
  /admin/api/2020-01/countries/{country_id}/provinces/{province_id}.json:
    get:
      summary: "Retrieves a single province for a country"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#show-2020-01"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "path"
          name: "province_id"
          required: true
          schema:
            type: "string"
          description: "province_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_countries_param_country_id_provinces_param_province_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  province:
                    id: 224293623
                    tax: 0.09
                summary: "Update a province's tax rate"
      summary: "Caution\n  As of version 2020-10, the tax field is deprecated.\n\nUpdates an existing province for a country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#update-2020-01"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "path"
          name: "province_id"
          required: true
          schema:
            type: "string"
          description: "province_id"
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_update_countries_param_country_id_provinces_param_province_id"
  /admin/api/2020-04/countries/{country_id}/provinces.json:
    get:
      summary: "Retrieves a list of provinces"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#index-2020-04"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of fields names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_countries_param_country_id_provinces"
  /admin/api/2020-04/countries/{country_id}/provinces/count.json:
    get:
      summary: "Retrieves a count of provinces for a country"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#count-2020-04"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_countries_param_country_id_provinces_count"
  /admin/api/2020-04/countries/{country_id}/provinces/{province_id}.json:
    get:
      summary: "Retrieves a single province for a country"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#show-2020-04"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "path"
          name: "province_id"
          required: true
          schema:
            type: "string"
          description: "province_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_countries_param_country_id_provinces_param_province_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  province:
                    id: 224293623
                    tax: 0.09
                summary: "Update a province's tax rate"
      summary: "Caution\n  As of version 2020-10, the tax field is deprecated.\n\nUpdates an existing province for a country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#update-2020-04"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "path"
          name: "province_id"
          required: true
          schema:
            type: "string"
          description: "province_id"
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_update_countries_param_country_id_provinces_param_province_id"
  /admin/api/2020-07/countries/{country_id}/provinces.json:
    get:
      summary: "Retrieves a list of provinces"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#index-2020-07"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of fields names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_countries_param_country_id_provinces"
  /admin/api/2020-07/countries/{country_id}/provinces/count.json:
    get:
      summary: "Retrieves a count of provinces for a country"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#count-2020-07"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_countries_param_country_id_provinces_count"
  /admin/api/2020-07/countries/{country_id}/provinces/{province_id}.json:
    get:
      summary: "Retrieves a single province for a country"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#show-2020-07"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "path"
          name: "province_id"
          required: true
          schema:
            type: "string"
          description: "province_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_countries_param_country_id_provinces_param_province_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  province:
                    id: 224293623
                    tax: 0.09
                summary: "Update a province's tax rate"
      summary: "Caution\n  As of version 2020-10, the tax field is deprecated.\n\nUpdates an existing province for a country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#update-2020-07"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "path"
          name: "province_id"
          required: true
          schema:
            type: "string"
          description: "province_id"
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_update_countries_param_country_id_provinces_param_province_id"
  /admin/api/2020-10/countries/{country_id}/provinces.json:
    get:
      summary: "Retrieves a list of provinces"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#index-2020-10"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of fields names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_countries_param_country_id_provinces"
  /admin/api/2020-10/countries/{country_id}/provinces/count.json:
    get:
      summary: "Retrieves a count of provinces for a country"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#count-2020-10"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_countries_param_country_id_provinces_count"
  /admin/api/2020-10/countries/{country_id}/provinces/{province_id}.json:
    get:
      summary: "Retrieves a single province for a country"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#show-2020-10"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "path"
          name: "province_id"
          required: true
          schema:
            type: "string"
          description: "province_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_countries_param_country_id_provinces_param_province_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  province:
                    id: 224293623
                    tax: 0.09
                summary: "Update a province's tax rate"
      summary: "Caution\n  As of version 2020-10, the tax field is deprecated.\n\nUpdates an existing province for a country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#update-2020-10"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "path"
          name: "province_id"
          required: true
          schema:
            type: "string"
          description: "province_id"
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "update_countries_param_country_id_provinces_param_province_id"
  /admin/api/2021-01/countries/{country_id}/provinces.json:
    get:
      summary: "Retrieves a list of provinces"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#index-2021-01"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of fields names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_countries_param_country_id_provinces"
  /admin/api/2021-01/countries/{country_id}/provinces/count.json:
    get:
      summary: "Retrieves a count of provinces for a country"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#count-2021-01"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_countries_param_country_id_provinces_count"
  /admin/api/2021-01/countries/{country_id}/provinces/{province_id}.json:
    get:
      summary: "Retrieves a single province for a country"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#show-2021-01"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "path"
          name: "province_id"
          required: true
          schema:
            type: "string"
          description: "province_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_countries_param_country_id_provinces_param_province_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  province:
                    id: 224293623
                    tax: 0.09
                summary: "Update a province's tax rate"
      summary: "Caution\n  As of version 2020-10, the tax field is deprecated.\n\nUpdates an existing province for a country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#update-2021-01"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "path"
          name: "province_id"
          required: true
          schema:
            type: "string"
          description: "province_id"
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_update_countries_param_country_id_provinces_param_province_id"
  /admin/api/unstable/countries/{country_id}/provinces.json:
    get:
      summary: "Retrieves a list of provinces"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#index-unstable"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "query"
          name: "since_id"
          description: "Restrict results to after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of fields names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_countries_param_country_id_provinces"
  /admin/api/unstable/countries/{country_id}/provinces/count.json:
    get:
      summary: "Retrieves a count of provinces for a country"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#count-unstable"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_countries_param_country_id_provinces_count"
  /admin/api/unstable/countries/{country_id}/provinces/{province_id}.json:
    get:
      summary: "Retrieves a single province for a country"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#show-unstable"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "path"
          name: "province_id"
          required: true
          schema:
            type: "string"
          description: "province_id"
        - in: "query"
          name: "fields"
          description: "Show only certain fields, specified by a comma-separated list of field names."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_countries_param_country_id_provinces_param_province_id"
    put:
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              example1:
                value:
                  province:
                    id: 224293623
                    tax: 0.09
                summary: "Update a province's tax rate"
      summary: "Caution\n  As of version 2020-10, the tax field is deprecated.\n\nUpdates an existing province for a country."
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/province#update-unstable"
      parameters:
        - in: "path"
          name: "country_id"
          required: true
          schema:
            type: "string"
          description: "country_id"
        - in: "path"
          name: "province_id"
          required: true
          schema:
            type: "string"
          description: "province_id"
      tags:
        - "store-properties"
        - "province"
        - "store-properties/province"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_update_countries_param_country_id_provinces_param_province_id"
  /admin/api/2020-01/shipping_zones.json:
    get:
      summary: "Get a list of all shipping zones"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/shippingzone#index-2020-01"
      parameters:
        - in: "query"
          name: "fields"
          description: "comma-separated list of fields to include in the response"
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "shippingzone"
        - "store-properties/shippingzone"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_shipping_zones"
  /admin/api/2020-04/shipping_zones.json:
    get:
      summary: "Get a list of all shipping zones"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/shippingzone#index-2020-04"
      parameters:
        - in: "query"
          name: "fields"
          description: "comma-separated list of fields to include in the response"
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "shippingzone"
        - "store-properties/shippingzone"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_shipping_zones"
  /admin/api/2020-07/shipping_zones.json:
    get:
      summary: "Get a list of all shipping zones"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/shippingzone#index-2020-07"
      parameters:
        - in: "query"
          name: "fields"
          description: "comma-separated list of fields to include in the response"
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "shippingzone"
        - "store-properties/shippingzone"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_shipping_zones"
  /admin/api/2020-10/shipping_zones.json:
    get:
      summary: "Get a list of all shipping zones"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/shippingzone#index-2020-10"
      parameters:
        - in: "query"
          name: "fields"
          description: "comma-separated list of fields to include in the response"
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "shippingzone"
        - "store-properties/shippingzone"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_shipping_zones"
  /admin/api/2021-01/shipping_zones.json:
    get:
      summary: "Get a list of all shipping zones"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/shippingzone#index-2021-01"
      parameters:
        - in: "query"
          name: "fields"
          description: "comma-separated list of fields to include in the response"
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "shippingzone"
        - "store-properties/shippingzone"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_shipping_zones"
  /admin/api/unstable/shipping_zones.json:
    get:
      summary: "Get a list of all shipping zones"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/shippingzone#index-unstable"
      parameters:
        - in: "query"
          name: "fields"
          description: "comma-separated list of fields to include in the response"
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "shippingzone"
        - "store-properties/shippingzone"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_shipping_zones"
  /admin/api/2020-01/shop.json:
    get:
      summary: "Retrieves the shop's configuration"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/shop#show-2020-01"
      parameters:
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "shop"
        - "store-properties/shop"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_shop"
  /admin/api/2020-04/shop.json:
    get:
      summary: "Retrieves the shop's configuration"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/shop#show-2020-04"
      parameters:
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "shop"
        - "store-properties/shop"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_shop"
  /admin/api/2020-07/shop.json:
    get:
      summary: "Retrieves the shop's configuration"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/shop#show-2020-07"
      parameters:
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "shop"
        - "store-properties/shop"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_shop"
  /admin/api/2020-10/shop.json:
    get:
      summary: "Retrieves the shop's configuration"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/shop#show-2020-10"
      parameters:
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "shop"
        - "store-properties/shop"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_shop"
  /admin/api/2021-01/shop.json:
    get:
      summary: "Retrieves the shop's configuration"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/shop#show-2021-01"
      parameters:
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "shop"
        - "store-properties/shop"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_shop"
  /admin/api/unstable/shop.json:
    get:
      summary: "Retrieves the shop's configuration"
      description: "https://shopify.dev/docs/admin-api/rest/reference/store-properties/shop#show-unstable"
      parameters:
        - in: "query"
          name: "fields"
          description: "A comma-separated list of fields to include in the response."
          schema: {}
          required: false
      tags:
        - "store-properties"
        - "shop"
        - "store-properties/shop"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_shop"
  /admin/api/2020-01/tender_transactions.json:
    get:
      summary: "Retrieves a list of tender transactions. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/tendertransaction#index-2020-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Retrieve only transactions after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at_min"
          description: "Show tender transactions processed_at or after the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at_max"
          description: "Show tender transactions processed_at or before the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at"
          description: "Show tender transactions processed at the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "order"
          description: "Show tender transactions ordered by processed_at in ascending or descending order."
          schema: {}
          required: false
      tags:
        - "tendertransaction"
      responses:
        200:
          description: ""
      operationId: "deprecated_202001_get_tender_transactions"
  /admin/api/2020-04/tender_transactions.json:
    get:
      summary: "Retrieves a list of tender transactions. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/tendertransaction#index-2020-04"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Retrieve only transactions after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at_min"
          description: "Show tender transactions processed_at or after the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at_max"
          description: "Show tender transactions processed_at or before the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at"
          description: "Show tender transactions processed at the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "order"
          description: "Show tender transactions ordered by processed_at in ascending or descending order."
          schema: {}
          required: false
      tags:
        - "tendertransaction"
      responses:
        200:
          description: ""
      operationId: "deprecated_202004_get_tender_transactions"
  /admin/api/2020-07/tender_transactions.json:
    get:
      summary: "Retrieves a list of tender transactions. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/tendertransaction#index-2020-07"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Retrieve only transactions after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at_min"
          description: "Show tender transactions processed_at or after the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at_max"
          description: "Show tender transactions processed_at or before the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at"
          description: "Show tender transactions processed at the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "order"
          description: "Show tender transactions ordered by processed_at in ascending or descending order."
          schema: {}
          required: false
      tags:
        - "tendertransaction"
      responses:
        200:
          description: ""
      operationId: "deprecated_202007_get_tender_transactions"
  /admin/api/2020-10/tender_transactions.json:
    get:
      summary: "Retrieves a list of tender transactions. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/tendertransaction#index-2020-10"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Retrieve only transactions after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at_min"
          description: "Show tender transactions processed_at or after the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at_max"
          description: "Show tender transactions processed_at or before the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at"
          description: "Show tender transactions processed at the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "order"
          description: "Show tender transactions ordered by processed_at in ascending or descending order."
          schema: {}
          required: false
      tags:
        - "tendertransaction"
        - "latest_api_version"
      responses:
        200:
          description: ""
      operationId: "get_tender_transactions"
  /admin/api/2021-01/tender_transactions.json:
    get:
      summary: "Retrieves a list of tender transactions. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/tendertransaction#index-2021-01"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Retrieve only transactions after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at_min"
          description: "Show tender transactions processed_at or after the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at_max"
          description: "Show tender transactions processed_at or before the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at"
          description: "Show tender transactions processed at the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "order"
          description: "Show tender transactions ordered by processed_at in ascending or descending order."
          schema: {}
          required: false
      tags:
        - "tendertransaction"
      responses:
        200:
          description: ""
      operationId: "deprecated_202101_get_tender_transactions"
  /admin/api/unstable/tender_transactions.json:
    get:
      summary: "Retrieves a list of tender transactions. Note: As of version 2019-10, this endpoint implements pagination by using links that are provided in the response header. To learn more, see Making requests to paginated REST Admin API endpoints."
      description: "https://shopify.dev/docs/admin-api/rest/reference/tendertransaction#index-unstable"
      parameters:
        - in: "query"
          name: "limit"
          description: "The maximum number of results to retrieve.\n                  (default: 50, maximum: 250)"
          schema: {}
          required: false
        - in: "query"
          name: "since_id"
          description: "Retrieve only transactions after the specified ID."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at_min"
          description: "Show tender transactions processed_at or after the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at_max"
          description: "Show tender transactions processed_at or before the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "processed_at"
          description: "Show tender transactions processed at the specified date."
          schema: {}
          required: false
        - in: "query"
          name: "order"
          description: "Show tender transactions ordered by processed_at in ascending or descending order."
          schema: {}
          required: false
      tags:
        - "tendertransaction"
      responses:
        200:
          description: ""
      operationId: "deprecated_unstable_get_tender_transactions"
