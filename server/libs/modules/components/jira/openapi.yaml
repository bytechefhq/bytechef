---
openapi: "3.0.1"
info:
  title: "The Jira Cloud platform REST API"
  description: "Jira Cloud platform REST API documentation"
  termsOfService: "http://atlassian.com/terms/"
  contact:
    email: "ecosystem@atlassian.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  version: "1001.0.0-SNAPSHOT"
externalDocs:
  description: "Find out more about Atlassian products and services."
  url: "http://www.atlassian.com"
servers:
- url: "https://your-domain.atlassian.net"
paths:
  /rest/api/3/issue:
    post:
      tags:
      - "Issues"
      summary: "Create issue"
      description: "Creates an issue or, where the option to create subtasks is enabled\
        \ in Jira, a subtask. A transition may be applied, to move the issue or subtask\
        \ to a workflow step other than the default start step, and issue properties\
        \ set.\n\nThe content of the issue or subtask is defined using `update` and\
        \ `fields`. The fields that can be set in the issue or subtask are determined\
        \ using the [ Get create issue metadata](#api-rest-api-3-issue-createmeta-get).\
        \ These are the same fields that appear on the issue's create screen. Note\
        \ that the `description`, `environment`, and any `textarea` type custom fields\
        \ (multi-line text fields) take Atlassian Document Format content. Single\
        \ line custom fields (`textfield`) accept a string and don't handle Atlassian\
        \ Document Format content.\n\nCreating a subtask differs from creating an\
        \ issue as follows:\n\n *  `issueType` must be set to a subtask issue type\
        \ (use [ Get create issue metadata](#api-rest-api-3-issue-createmeta-get)\
        \ to find subtask issue types).\n *  `parent` must contain the ID or key of\
        \ the parent issue.\n\nIn a next-gen project any issue may be made a child\
        \ providing that the parent and child are members of the same project.\n\n\
        **[Permissions](#permissions) required:** *Browse projects* and *Create issues*\
        \ [project permissions](https://confluence.atlassian.com/x/yodKLg) for the\
        \ project in which the issue or subtask is created."
      operationId: "createIssue"
      parameters:
      - name: "updateHistory"
        in: "query"
        description: "Whether the project in which the issue is created is added to\
          \ the user's **Recently viewed** project list, as shown under **Projects**\
          \ in Jira. When provided, the issue type and request type are added to the\
          \ user's history for a project. These values are then used to provide defaults\
          \ on the issue create screen."
        schema:
          type: "boolean"
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IssueUpdateDetails"
            example:
              update: {}
              fields:
                summary: "Main order flow broken"
                parent:
                  key: "PROJ-123"
                issuetype:
                  id: "10000"
                components:
                - id: "10000"
                customfield_20000: "06/Jul/19 3:25 PM"
                customfield_40000:
                  type: "doc"
                  version: 1
                  content:
                  - type: "paragraph"
                    content:
                    - text: "Occurs on all orders"
                      type: "text"
                customfield_70000:
                - "jira-administrators"
                - "jira-software-users"
                project:
                  id: "10000"
                description:
                  type: "doc"
                  version: 1
                  content:
                  - type: "paragraph"
                    content:
                    - text: "Order entry fails when selecting supplier."
                      type: "text"
                reporter:
                  id: "5b10a2844c20165700ede21g"
                fixVersions:
                - id: "10001"
                customfield_10000: "09/Jun/19"
                priority:
                  id: "20000"
                labels:
                - "bugfix"
                - "blitz_test"
                timetracking:
                  remainingEstimate: "5"
                  originalEstimate: "10"
                customfield_30000:
                - "10000"
                - "10002"
                customfield_80000:
                  value: "red"
                security:
                  id: "10000"
                environment:
                  type: "doc"
                  version: 1
                  content:
                  - type: "paragraph"
                    content:
                    - text: "UAT"
                      type: "text"
                versions:
                - id: "10000"
                duedate: "2019-05-11"
                customfield_60000: "jira-software-users"
                customfield_50000:
                  type: "doc"
                  version: 1
                  content:
                  - type: "paragraph"
                    content:
                    - text: "Could impact day-to-day work."
                      type: "text"
                assignee:
                  id: "5b109f2e9729b51b54dc274d"
        required: true
      responses:
        "201":
          description: "Returned if the request is successful."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatedIssue"
              example: "{\"id\":\"10000\",\"key\":\"ED-24\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10000\"\
                ,\"transition\":{\"status\":200,\"errorCollection\":{\"errorMessages\"\
                :[],\"errors\":{}}}}"
        "400":
          description: "Returned if the request:\n\n *  is missing required fields.\n\
            \ *  contains invalid field values.\n *  contains fields that cannot be\
            \ set for the issue type.\n *  is by a user who does not have the necessary\
            \ permission.\n *  is to create a subtype in a project different that\
            \ of the parent issue.\n *  is for a subtask when the option to create\
            \ subtasks is disabled.\n *  is invalid for any other reason."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorCollection"
              example: "{\"errorMessages\":[\"Field 'priority' is required\"],\"errors\"\
                :{}}"
        "401":
          description: "Returned if the authentication credentials are incorrect or\
            \ missing."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorCollection"
        "403":
          description: "Returned if the user does not have the necessary permission."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorCollection"
      deprecated: false
      security:
      - basicAuth: []
      - OAuth2:
        - "write:jira-work"
      - {}
      x-atlassian-oauth2-scopes:
      - state: "Current"
        scheme: "OAuth2"
        scopes:
        - "write:jira-work"
      - state: "Beta"
        scheme: "OAuth2"
        scopes:
        - "write:issue:jira"
        - "write:comment:jira"
        - "write:comment.property:jira"
        - "write:attachment:jira"
        - "read:issue:jira"
  /rest/api/3/issue/{issueIdOrKey}:
    get:
      tags:
      - "Issues"
      summary: "Get issue"
      description: "Returns the details for an issue.\n\nThe issue is identified by\
        \ its ID or key, however, if the identifier doesn't match an issue, a case-insensitive\
        \ search and check for moved issues is performed. If a matching issue is found\
        \ its details are returned, a 302 or other redirect is **not** returned. The\
        \ issue key returned in the response is the key of the issue found.\n\nThis\
        \ operation can be accessed anonymously.\n\n**[Permissions](#permissions)\
        \ required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg)\
        \ for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg)\
        \ is configured, issue-level security permission to view the issue."
      operationId: "getIssue"
      parameters:
      - name: "issueIdOrKey"
        in: "path"
        description: "The ID or key of the issue."
        required: true
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "A list of fields to return for the issue. This parameter accepts\
          \ a comma-separated list. Use it to retrieve a subset of fields. Allowed\
          \ values:\n\n *  `*all` Returns all fields.\n *  `*navigable` Returns navigable\
          \ fields.\n *  Any issue field, prefixed with a minus to exclude.\n\nExamples:\n\
          \n *  `summary,comment` Returns only the summary and comments fields.\n\
          \ *  `-description` Returns all (default) fields except description.\n *\
          \  `*navigable,-comment` Returns all navigable fields except comment.\n\n\
          This parameter may be specified multiple times. For example, `fields=field1,field2&\
          \ fields=field3`.\n\nNote: All fields are returned by default. This differs\
          \ from [Search for issues using JQL (GET)](#api-rest-api-3-search-get) and\
          \ [Search for issues using JQL (POST)](#api-rest-api-3-search-post) where\
          \ the default is all navigable fields."
        schema:
          type: "array"
          items:
            type: "string"
            default: "*all"
      - name: "fieldsByKeys"
        in: "query"
        description: "Whether fields in `fields` are referenced by keys rather than\
          \ IDs. This parameter is useful where fields have been added by a connect\
          \ app and a field's key may differ from its ID."
        schema:
          type: "boolean"
          default: false
      - name: "expand"
        in: "query"
        description: "Use [expand](#expansion) to include additional information about\
          \ the issues in the response. This parameter accepts a comma-separated list.\
          \ Expand options include:\n\n *  `renderedFields` Returns field values rendered\
          \ in HTML format.\n *  `names` Returns the display name of each field.\n\
          \ *  `schema` Returns the schema describing a field type.\n *  `transitions`\
          \ Returns all possible transitions for the issue.\n *  `editmeta` Returns\
          \ information about how each field can be edited.\n *  `changelog` Returns\
          \ a list of recent updates to an issue, sorted by date, starting from the\
          \ most recent.\n *  `versionedRepresentations` Returns a JSON array for\
          \ each version of a field's value, with the highest number representing\
          \ the most recent version. Note: When included in the request, the `fields`\
          \ parameter is ignored."
        schema:
          type: "string"
      - name: "properties"
        in: "query"
        description: "A list of issue properties to return for the issue. This parameter\
          \ accepts a comma-separated list. Allowed values:\n\n *  `*all` Returns\
          \ all issue properties.\n *  Any issue property key, prefixed with a minus\
          \ to exclude.\n\nExamples:\n\n *  `*all` Returns all properties.\n *  `*all,-prop1`\
          \ Returns all properties except `prop1`.\n *  `prop1,prop2` Returns `prop1`\
          \ and `prop2` properties.\n\nThis parameter may be specified multiple times.\
          \ For example, `properties=prop1,prop2& properties=prop3`."
        schema:
          type: "array"
          items:
            type: "string"
            default: "null"
      - name: "updateHistory"
        in: "query"
        description: "Whether the project in which the issue is created is added to\
          \ the user's **Recently viewed** project list, as shown under **Projects**\
          \ in Jira. This also populates the [JQL issues search](#api-rest-api-3-search-get)\
          \ `lastViewed` field."
        schema:
          type: "boolean"
          default: false
      responses:
        "200":
          description: "Returned if the request is successful."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IssueBean"
              example: "{\"id\":\"10002\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10002\"\
                ,\"key\":\"ED-1\",\"fields\":{\"watcher\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/EX-1/watchers\"\
                ,\"isWatching\":false,\"watchCount\":1,\"watchers\":[{\"self\":\"\
                https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\"\
                ,\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia\
                \ Krystof\",\"active\":false}]},\"attachment\":[{\"id\":10000,\"self\"\
                :\"https://your-domain.atlassian.net/rest/api/3/attachments/10000\"\
                ,\"filename\":\"picture.jpg\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\"\
                ,\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"accountType\"\
                :\"atlassian\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\"\
                ,\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\"\
                ,\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\"\
                ,\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"\
                },\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"\
                2022-11-30T07:18:19.441+0000\",\"size\":23123,\"mimeType\":\"image/jpeg\"\
                ,\"content\":\"https://your-domain.atlassian.net/jira/rest/api/3/attachment/content/10000\"\
                ,\"thumbnail\":\"https://your-domain.atlassian.net/jira/rest/api/3/attachment/thumbnail/10000\"\
                }],\"sub-tasks\":[{\"id\":\"10000\",\"type\":{\"id\":\"10000\",\"\
                name\":\"\",\"inward\":\"Parent\",\"outward\":\"Sub-task\"},\"outwardIssue\"\
                :{\"id\":\"10003\",\"key\":\"ED-2\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/ED-2\"\
                ,\"fields\":{\"status\":{\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/statuses/open.png\"\
                ,\"name\":\"Open\"}}}}],\"description\":{\"type\":\"doc\",\"version\"\
                :1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"\
                text\",\"text\":\"Main order flow broken\"}]}]},\"project\":{\"self\"\
                :\"https://your-domain.atlassian.net/rest/api/3/project/EX\",\"id\"\
                :\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"\
                48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\"\
                ,\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\"\
                ,\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\"\
                ,\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"\
                },\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\"\
                ,\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project\
                \ Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\"\
                :{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2022-11-30T07:18:17.152+0000\"\
                }},\"comment\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000\"\
                ,\"id\":\"10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\"\
                ,\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia\
                \ Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\"\
                :1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"\
                text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing\
                \ elit. Pellentesque eget venenatis elit. Duis eu justo eget augue\
                \ iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere\
                \ augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\"\
                ,\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia\
                \ Krystof\",\"active\":false},\"created\":\"2021-01-17T12:34:00.000+0000\"\
                ,\"updated\":\"2021-01-18T23:45:00.000+0000\",\"visibility\":{\"type\"\
                :\"role\",\"value\":\"Administrators\",\"identifier\":\"Administrators\"\
                }}],\"issuelinks\":[{\"id\":\"10001\",\"type\":{\"id\":\"10000\",\"\
                name\":\"Dependent\",\"inward\":\"depends on\",\"outward\":\"is depended\
                \ by\"},\"outwardIssue\":{\"id\":\"10004L\",\"key\":\"PR-2\",\"self\"\
                :\"https://your-domain.atlassian.net/rest/api/3/issue/PR-2\",\"fields\"\
                :{\"status\":{\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/statuses/open.png\"\
                ,\"name\":\"Open\"}}}},{\"id\":\"10002\",\"type\":{\"id\":\"10000\"\
                ,\"name\":\"Dependent\",\"inward\":\"depends on\",\"outward\":\"is\
                \ depended by\"},\"inwardIssue\":{\"id\":\"10004\",\"key\":\"PR-3\"\
                ,\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/PR-3\"\
                ,\"fields\":{\"status\":{\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/statuses/open.png\"\
                ,\"name\":\"Open\"}}}}],\"worklog\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000\"\
                ,\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\"\
                ,\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia\
                \ Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\"\
                ,\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia\
                \ Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\"\
                :1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"\
                text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2021-01-18T23:45:00.000+0000\"\
                ,\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"\
                ,\"identifier\":\"276f955c-63d7-42c8-9520-92d01dca0625\"},\"started\"\
                :\"2021-01-17T12:34:00.000+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\"\
                :12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"\
                timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\"\
                :\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\"\
                :200,\"timeSpentSeconds\":400}}}"
        "401":
          description: "Returned if the authentication credentials are incorrect or\
            \ missing."
        "404":
          description: "Returned if the issue is not found or the user does not have\
            \ permission to view it."
      deprecated: false
      security:
      - basicAuth: []
      - OAuth2:
        - "read:jira-work"
      - {}
      x-atlassian-oauth2-scopes:
      - state: "Current"
        scheme: "OAuth2"
        scopes:
        - "read:jira-work"
      - state: "Beta"
        scheme: "OAuth2"
        scopes:
        - "read:issue-meta:jira"
        - "read:issue-security-level:jira"
        - "read:issue.vote:jira"
        - "read:issue.changelog:jira"
        - "read:avatar:jira"
        - "read:issue:jira"
        - "read:status:jira"
        - "read:user:jira"
        - "read:field-configuration:jira"
  /rest/api/3/search:
    get:
      tags:
      - "Issue search"
      summary: "Search for issues using JQL (GET)"
      description: "Searches for issues using [JQL](https://confluence.atlassian.com/x/egORLQ).\n\
        \nIf the JQL query expression is too large to be encoded as a query parameter,\
        \ use the [POST](#api-rest-api-3-search-post) version of this resource.\n\n\
        This operation can be accessed anonymously.\n\n**[Permissions](#permissions)\
        \ required:** Issues are included in the response where the user has:\n\n\
        \ *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg)\
        \ for the project containing the issue.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg)\
        \ is configured, issue-level security permission to view the issue."
      operationId: "searchForIssuesUsingJql"
      parameters:
      - name: "jql"
        in: "query"
        description: "The [JQL](https://confluence.atlassian.com/x/egORLQ) that defines\
          \ the search. Note:\n\n *  If no JQL expression is provided, all issues\
          \ are returned.\n *  `username` and `userkey` cannot be used as search terms\
          \ due to privacy reasons. Use `accountId` instead.\n *  If a user has hidden\
          \ their email address in their user profile, partial matches of the email\
          \ address will not find the user. An exact match is required."
        schema:
          type: "string"
          example: "project = HSP"
        x-showInExample: "true"
      - name: "startAt"
        in: "query"
        description: "The index of the first item to return in a page of results (page\
          \ offset)."
        schema:
          type: "integer"
          format: "int32"
          default: 0
      - name: "maxResults"
        in: "query"
        description: "The maximum number of items to return per page. To manage page\
          \ size, Jira may return fewer items per page where a large number of fields\
          \ are requested. The greatest number of items returned per page is achieved\
          \ when requesting `id` or `key` only."
        schema:
          type: "integer"
          format: "int32"
          default: 50
      - name: "validateQuery"
        in: "query"
        description: "Determines how to validate the JQL query and treat the validation\
          \ results. Supported values are:\n\n *  `strict` Returns a 400 response\
          \ code if any errors are found, along with a list of all errors (and warnings).\n\
          \ *  `warn` Returns all errors as warnings.\n *  `none` No validation is\
          \ performed.\n *  `true` *Deprecated* A legacy synonym for `strict`.\n *\
          \  `false` *Deprecated* A legacy synonym for `warn`.\n\nNote: If the JQL\
          \ is not correctly formed a 400 response code is returned, regardless of\
          \ the `validateQuery` value."
        schema:
          type: "string"
          default: "strict"
          enum:
          - "strict"
          - "warn"
          - "none"
          - "true"
          - "false"
      - name: "fields"
        in: "query"
        description: "A list of fields to return for each issue, use it to retrieve\
          \ a subset of fields. This parameter accepts a comma-separated list. Expand\
          \ options include:\n\n *  `*all` Returns all fields.\n *  `*navigable` Returns\
          \ navigable fields.\n *  Any issue field, prefixed with a minus to exclude.\n\
          \nExamples:\n\n *  `summary,comment` Returns only the summary and comments\
          \ fields.\n *  `-description` Returns all navigable (default) fields except\
          \ description.\n *  `*all,-comment` Returns all fields except comments.\n\
          \nThis parameter may be specified multiple times. For example, `fields=field1,field2&fields=field3`.\n\
          \nNote: All navigable fields are returned by default. This differs from\
          \ [GET issue](#api-rest-api-3-issue-issueIdOrKey-get) where the default\
          \ is all fields."
        schema:
          type: "array"
          items:
            type: "string"
            default: "*navigable"
      - name: "expand"
        in: "query"
        description: "Use [expand](#expansion) to include additional information about\
          \ issues in the response. This parameter accepts a comma-separated list.\
          \ Expand options include:\n\n *  `renderedFields` Returns field values rendered\
          \ in HTML format.\n *  `names` Returns the display name of each field.\n\
          \ *  `schema` Returns the schema describing a field type.\n *  `transitions`\
          \ Returns all possible transitions for the issue.\n *  `operations` Returns\
          \ all possible operations for the issue.\n *  `editmeta` Returns information\
          \ about how each field can be edited.\n *  `changelog` Returns a list of\
          \ recent updates to an issue, sorted by date, starting from the most recent.\n\
          \ *  `versionedRepresentations` Instead of `fields`, returns `versionedRepresentations`\
          \ a JSON array containing each version of a field's value, with the highest\
          \ numbered item representing the most recent version."
        schema:
          type: "string"
      - name: "properties"
        in: "query"
        description: "A list of issue property keys for issue properties to include\
          \ in the results. This parameter accepts a comma-separated list. Multiple\
          \ properties can also be provided using an ampersand separated list. For\
          \ example, `properties=prop1,prop2&properties=prop3`. A maximum of 5 issue\
          \ property keys can be specified."
        schema:
          type: "array"
          items:
            type: "string"
      - name: "fieldsByKeys"
        in: "query"
        description: "Reference fields by their key (rather than ID)."
        schema:
          type: "boolean"
          default: false
      responses:
        "200":
          description: "Returned if the request is successful."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResults"
              example: "{\"expand\":\"names,schema\",\"startAt\":0,\"maxResults\"\
                :50,\"total\":1,\"issues\":[{\"expand\":\"\",\"id\":\"10002\",\"self\"\
                :\"https://your-domain.atlassian.net/rest/api/3/issue/10002\",\"key\"\
                :\"ED-1\",\"fields\":{\"watcher\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/EX-1/watchers\"\
                ,\"isWatching\":false,\"watchCount\":1,\"watchers\":[{\"self\":\"\
                https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\"\
                ,\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia\
                \ Krystof\",\"active\":false}]},\"attachment\":[{\"id\":10000,\"self\"\
                :\"https://your-domain.atlassian.net/rest/api/3/attachments/10000\"\
                ,\"filename\":\"picture.jpg\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\"\
                ,\"key\":\"\",\"accountId\":\"5b10a2844c20165700ede21g\",\"accountType\"\
                :\"atlassian\",\"name\":\"\",\"avatarUrls\":{\"48x48\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\"\
                ,\"24x24\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\"\
                ,\"16x16\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\"\
                ,\"32x32\":\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\"\
                },\"displayName\":\"Mia Krystof\",\"active\":false},\"created\":\"\
                2022-11-30T07:18:19.441+0000\",\"size\":23123,\"mimeType\":\"image/jpeg\"\
                ,\"content\":\"https://your-domain.atlassian.net/jira/rest/api/3/attachment/content/10000\"\
                ,\"thumbnail\":\"https://your-domain.atlassian.net/jira/rest/api/3/attachment/thumbnail/10000\"\
                }],\"sub-tasks\":[{\"id\":\"10000\",\"type\":{\"id\":\"10000\",\"\
                name\":\"\",\"inward\":\"Parent\",\"outward\":\"Sub-task\"},\"outwardIssue\"\
                :{\"id\":\"10003\",\"key\":\"ED-2\",\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/ED-2\"\
                ,\"fields\":{\"status\":{\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/statuses/open.png\"\
                ,\"name\":\"Open\"}}}}],\"description\":{\"type\":\"doc\",\"version\"\
                :1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"\
                text\",\"text\":\"Main order flow broken\"}]}]},\"project\":{\"self\"\
                :\"https://your-domain.atlassian.net/rest/api/3/project/EX\",\"id\"\
                :\"10000\",\"key\":\"EX\",\"name\":\"Example\",\"avatarUrls\":{\"\
                48x48\":\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\"\
                ,\"24x24\":\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\"\
                ,\"16x16\":\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\"\
                ,\"32x32\":\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\"\
                },\"projectCategory\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\"\
                ,\"id\":\"10000\",\"name\":\"FIRST\",\"description\":\"First Project\
                \ Category\"},\"simplified\":false,\"style\":\"classic\",\"insight\"\
                :{\"totalIssueCount\":100,\"lastIssueUpdateTime\":\"2022-11-30T07:18:17.152+0000\"\
                }},\"comment\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000\"\
                ,\"id\":\"10000\",\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\"\
                ,\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia\
                \ Krystof\",\"active\":false},\"body\":{\"type\":\"doc\",\"version\"\
                :1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"\
                text\",\"text\":\"Lorem ipsum dolor sit amet, consectetur adipiscing\
                \ elit. Pellentesque eget venenatis elit. Duis eu justo eget augue\
                \ iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere\
                \ augue semper.\"}]}]},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\"\
                ,\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia\
                \ Krystof\",\"active\":false},\"created\":\"2021-01-17T12:34:00.000+0000\"\
                ,\"updated\":\"2021-01-18T23:45:00.000+0000\",\"visibility\":{\"type\"\
                :\"role\",\"value\":\"Administrators\",\"identifier\":\"Administrators\"\
                }}],\"issuelinks\":[{\"id\":\"10001\",\"type\":{\"id\":\"10000\",\"\
                name\":\"Dependent\",\"inward\":\"depends on\",\"outward\":\"is depended\
                \ by\"},\"outwardIssue\":{\"id\":\"10004L\",\"key\":\"PR-2\",\"self\"\
                :\"https://your-domain.atlassian.net/rest/api/3/issue/PR-2\",\"fields\"\
                :{\"status\":{\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/statuses/open.png\"\
                ,\"name\":\"Open\"}}}},{\"id\":\"10002\",\"type\":{\"id\":\"10000\"\
                ,\"name\":\"Dependent\",\"inward\":\"depends on\",\"outward\":\"is\
                \ depended by\"},\"inwardIssue\":{\"id\":\"10004\",\"key\":\"PR-3\"\
                ,\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/PR-3\"\
                ,\"fields\":{\"status\":{\"iconUrl\":\"https://your-domain.atlassian.net/images/icons/statuses/open.png\"\
                ,\"name\":\"Open\"}}}}],\"worklog\":[{\"self\":\"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000\"\
                ,\"author\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\"\
                ,\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia\
                \ Krystof\",\"active\":false},\"updateAuthor\":{\"self\":\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\"\
                ,\"accountId\":\"5b10a2844c20165700ede21g\",\"displayName\":\"Mia\
                \ Krystof\",\"active\":false},\"comment\":{\"type\":\"doc\",\"version\"\
                :1,\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"\
                text\",\"text\":\"I did some work here.\"}]}]},\"updated\":\"2021-01-18T23:45:00.000+0000\"\
                ,\"visibility\":{\"type\":\"group\",\"value\":\"jira-developers\"\
                ,\"identifier\":\"276f955c-63d7-42c8-9520-92d01dca0625\"},\"started\"\
                :\"2021-01-17T12:34:00.000+0000\",\"timeSpent\":\"3h 20m\",\"timeSpentSeconds\"\
                :12000,\"id\":\"100028\",\"issueId\":\"10002\"}],\"updated\":1,\"\
                timetracking\":{\"originalEstimate\":\"10m\",\"remainingEstimate\"\
                :\"3m\",\"timeSpent\":\"6m\",\"originalEstimateSeconds\":600,\"remainingEstimateSeconds\"\
                :200,\"timeSpentSeconds\":400}}}],\"warningMessages\":[\"The value\
                \ 'bar' does not exist for the field 'foo'.\"]}"
        "400":
          description: "Returned if the JQL query is invalid."
        "401":
          description: "Returned if the authentication credentials are incorrect or\
            \ missing."
      deprecated: false
      security:
      - basicAuth: []
      - OAuth2:
        - "read:jira-work"
      - {}
      x-atlassian-oauth2-scopes:
      - state: "Current"
        scheme: "OAuth2"
        scopes:
        - "read:jira-work"
      - state: "Beta"
        scheme: "OAuth2"
        scopes:
        - "read:issue-details:jira"
        - "read:audit-log:jira"
        - "read:avatar:jira"
        - "read:field-configuration:jira"
        - "read:issue-meta:jira"
components:
  schemas:
    IssueUpdateDetails:
      type: "object"
      properties:
        transition:
          description: "Details of a transition. Required when performing a transition,\
            \ optional when creating or editing an issue."
          allOf:
          - $ref: "#/components/schemas/IssueTransition"
        fields:
          type: "object"
          additionalProperties: {}
          description: "List of issue screen fields to update, specifying the sub-field\
            \ to update and its value for each field. This field provides a straightforward\
            \ option when setting a sub-field. When multiple sub-fields or other operations\
            \ are required, use `update`. Fields included in here cannot be included\
            \ in `update`."
        update:
          type: "object"
          additionalProperties:
            type: "array"
            items:
              $ref: "#/components/schemas/FieldUpdateOperation"
          description: "A Map containing the field field name and a list of operations\
            \ to perform on the issue screen field. Note that fields included in here\
            \ cannot be included in `fields`."
        historyMetadata:
          description: "Additional issue history details."
          allOf:
          - $ref: "#/components/schemas/HistoryMetadata"
        properties:
          type: "array"
          description: "Details of issue properties to be add or update."
          items:
            $ref: "#/components/schemas/EntityProperty"
      additionalProperties: true
      description: "Details of an issue update request."
    IssueTransition:
      type: "object"
      properties:
        id:
          type: "string"
          description: "The ID of the issue transition. Required when specifying a\
            \ transition to undertake."
        name:
          type: "string"
          description: "The name of the issue transition."
          readOnly: true
        to:
          description: "Details of the issue status after the transition."
          readOnly: true
          allOf:
          - $ref: "#/components/schemas/StatusDetails"
        hasScreen:
          type: "boolean"
          description: "Whether there is a screen associated with the issue transition."
          readOnly: true
        isGlobal:
          type: "boolean"
          description: "Whether the issue transition is global, that is, the transition\
            \ is applied to issues regardless of their status."
          readOnly: true
        isInitial:
          type: "boolean"
          description: "Whether this is the initial issue transition for the workflow."
          readOnly: true
        isAvailable:
          type: "boolean"
          description: "Whether the transition is available to be performed."
          readOnly: true
        isConditional:
          type: "boolean"
          description: "Whether the issue has to meet criteria before the issue transition\
            \ is applied."
          readOnly: true
        fields:
          type: "object"
          additionalProperties:
            $ref: "#/components/schemas/FieldMetadata"
          description: "Details of the fields associated with the issue transition\
            \ screen. Use this information to populate `fields` and `update` in a\
            \ transition request."
          readOnly: true
        expand:
          type: "string"
          description: "Expand options that include additional transition details\
            \ in the response."
          readOnly: true
        looped:
          type: "boolean"
      additionalProperties: true
      description: "Details of an issue transition."
    FieldUpdateOperation:
      type: "object"
      properties:
        add:
          description: "The value to add to the field."
          example: "triaged"
        set:
          description: "The value to set in the field."
          example: "A new summary"
        remove:
          description: "The value to removed from the field."
          example: "blocker"
        edit:
          description: "The value to edit in the field."
          example:
            remainingEstimate: "4d"
            originalEstimate: "1w 1d"
        copy:
          description: "The field value to copy from another issue."
          example:
            issuelinks:
              sourceIssues:
              - key: "FP-5"
      additionalProperties: false
      description: "Details of an operation to perform on a field."
    HistoryMetadata:
      type: "object"
      properties:
        type:
          type: "string"
          description: "The type of the history record."
        description:
          type: "string"
          description: "The description of the history record."
        descriptionKey:
          type: "string"
          description: "The description key of the history record."
        activityDescription:
          type: "string"
          description: "The activity described in the history record."
        activityDescriptionKey:
          type: "string"
          description: "The key of the activity described in the history record."
        emailDescription:
          type: "string"
          description: "The description of the email address associated the history\
            \ record."
        emailDescriptionKey:
          type: "string"
          description: "The description key of the email address associated the history\
            \ record."
        actor:
          description: "Details of the user whose action created the history record."
          allOf:
          - $ref: "#/components/schemas/HistoryMetadataParticipant"
        generator:
          description: "Details of the system that generated the history record."
          allOf:
          - $ref: "#/components/schemas/HistoryMetadataParticipant"
        cause:
          description: "Details of the cause that triggered the creation the history\
            \ record."
          allOf:
          - $ref: "#/components/schemas/HistoryMetadataParticipant"
        extraData:
          type: "object"
          additionalProperties:
            type: "string"
          description: "Additional arbitrary information about the history record."
      additionalProperties: true
      description: "Details of issue history metadata."
    HistoryMetadataParticipant:
      type: "object"
      properties:
        id:
          type: "string"
          description: "The ID of the user or system associated with a history record."
        displayName:
          type: "string"
          description: "The display name of the user or system associated with a history\
            \ record."
        displayNameKey:
          type: "string"
          description: "The key of the display name of the user or system associated\
            \ with a history record."
        type:
          type: "string"
          description: "The type of the user or system associated with a history record."
        avatarUrl:
          type: "string"
          description: "The URL to an avatar for the user or system associated with\
            \ a history record."
        url:
          type: "string"
          description: "The URL of the user or system associated with a history record."
      additionalProperties: true
      description: "Details of user or system associated with a issue history metadata\
        \ item."
    EntityProperty:
      type: "object"
      properties:
        key:
          type: "string"
          description: "The key of the property. Required on create and update."
        value:
          description: "The value of the property. Required on create and update."
      additionalProperties: false
      description: "An entity property, for more information see [Entity properties](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/)."
    StatusDetails:
      type: "object"
      properties:
        self:
          type: "string"
          description: "The URL of the status."
          readOnly: true
        description:
          type: "string"
          description: "The description of the status."
          readOnly: true
        iconUrl:
          type: "string"
          description: "The URL of the icon used to represent the status."
          readOnly: true
        name:
          type: "string"
          description: "The name of the status."
          readOnly: true
        id:
          type: "string"
          description: "The ID of the status."
          readOnly: true
        statusCategory:
          description: "The category assigned to the status."
          readOnly: true
          allOf:
          - $ref: "#/components/schemas/StatusCategory"
      additionalProperties: true
      description: "A status."
    FieldMetadata:
      required:
      - "key"
      - "name"
      - "operations"
      - "required"
      - "schema"
      type: "object"
      properties:
        required:
          type: "boolean"
          description: "Whether the field is required."
          readOnly: true
        schema:
          description: "The data type of the field."
          readOnly: true
          allOf:
          - $ref: "#/components/schemas/JsonTypeBean"
        name:
          type: "string"
          description: "The name of the field."
          readOnly: true
        key:
          type: "string"
          description: "The key of the field."
          readOnly: true
        autoCompleteUrl:
          type: "string"
          description: "The URL that can be used to automatically complete the field."
          readOnly: true
        hasDefaultValue:
          type: "boolean"
          description: "Whether the field has a default value."
          readOnly: true
        operations:
          type: "array"
          description: "The list of operations that can be performed on the field."
          readOnly: true
          items:
            type: "string"
            readOnly: true
        allowedValues:
          type: "array"
          description: "The list of values allowed in the field."
          readOnly: true
          items:
            readOnly: true
        defaultValue:
          description: "The default value of the field."
          readOnly: true
        configuration:
          type: "object"
          additionalProperties:
            readOnly: true
          description: "The configuration properties."
          readOnly: true
      additionalProperties: false
      description: "The metadata describing an issue field."
      xml:
        name: "availableField"
    StatusCategory:
      type: "object"
      properties:
        self:
          type: "string"
          description: "The URL of the status category."
          readOnly: true
        id:
          type: "integer"
          description: "The ID of the status category."
          format: "int64"
          readOnly: true
        key:
          type: "string"
          description: "The key of the status category."
          readOnly: true
        colorName:
          type: "string"
          description: "The name of the color used to represent the status category."
          readOnly: true
        name:
          type: "string"
          description: "The name of the status category."
          readOnly: true
      additionalProperties: true
      description: "A status category."
    JsonTypeBean:
      required:
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "The data type of the field."
          readOnly: true
        items:
          type: "string"
          description: "When the data type is an array, the name of the field items\
            \ within the array."
          readOnly: true
        system:
          type: "string"
          description: "If the field is a system field, the name of the field."
          readOnly: true
        custom:
          type: "string"
          description: "If the field is a custom field, the URI of the field."
          readOnly: true
        customId:
          type: "integer"
          description: "If the field is a custom field, the custom ID of the field."
          format: "int64"
          readOnly: true
        configuration:
          type: "object"
          additionalProperties:
            readOnly: true
          description: "If the field is a custom field, the configuration of the field."
          readOnly: true
      additionalProperties: false
      description: "The schema of a field."
    CreatedIssue:
      type: "object"
      properties:
        id:
          type: "string"
          description: "The ID of the created issue or subtask."
          readOnly: true
        key:
          type: "string"
          description: "The key of the created issue or subtask."
          readOnly: true
        self:
          type: "string"
          description: "The URL of the created issue or subtask."
          readOnly: true
        transition:
          description: "The response code and messages related to any requested transition."
          readOnly: true
          allOf:
          - $ref: "#/components/schemas/NestedResponse"
      additionalProperties: false
      description: "Details about a created issue or subtask."
    NestedResponse:
      type: "object"
      properties:
        status:
          type: "integer"
          format: "int32"
        errorCollection:
          $ref: "#/components/schemas/ErrorCollection"
      additionalProperties: false
    ErrorCollection:
      type: "object"
      properties:
        errorMessages:
          type: "array"
          description: "The list of error messages produced by this operation. For\
            \ example, \"input parameter 'key' must be provided\""
          items:
            type: "string"
        errors:
          type: "object"
          additionalProperties:
            type: "string"
          description: "The list of errors by parameter returned by the operation.\
            \ For example,\"projectKey\": \"Project keys must start with an uppercase\
            \ letter, followed by one or more uppercase alphanumeric characters.\""
        status:
          type: "integer"
          format: "int32"
      additionalProperties: false
      description: "Error messages from an operation."
    IssueBean:
      type: "object"
      properties:
        expand:
          type: "string"
          description: "Expand options that include additional issue details in the\
            \ response."
          readOnly: true
          xml:
            attribute: true
        id:
          type: "string"
          description: "The ID of the issue."
          readOnly: true
        self:
          type: "string"
          description: "The URL of the issue details."
          format: "uri"
          readOnly: true
        key:
          type: "string"
          description: "The key of the issue."
          readOnly: true
        renderedFields:
          type: "object"
          additionalProperties:
            readOnly: true
          description: "The rendered value of each field present on the issue."
          readOnly: true
        properties:
          type: "object"
          additionalProperties:
            readOnly: true
          description: "Details of the issue properties identified in the request."
          readOnly: true
        names:
          type: "object"
          additionalProperties:
            type: "string"
            readOnly: true
          description: "The ID and name of each field present on the issue."
          readOnly: true
        schema:
          type: "object"
          additionalProperties:
            $ref: "#/components/schemas/JsonTypeBean"
          description: "The schema describing each field present on the issue."
          readOnly: true
        transitions:
          type: "array"
          description: "The transitions that can be performed on the issue."
          readOnly: true
          items:
            $ref: "#/components/schemas/IssueTransition"
        operations:
          description: "The operations that can be performed on the issue."
          readOnly: true
          allOf:
          - $ref: "#/components/schemas/Operations"
        editmeta:
          description: "The metadata for the fields on the issue that can be amended."
          readOnly: true
          allOf:
          - $ref: "#/components/schemas/IssueUpdateMetadata"
        changelog:
          description: "Details of changelogs associated with the issue."
          readOnly: true
          allOf:
          - $ref: "#/components/schemas/PageOfChangelogs"
        versionedRepresentations:
          type: "object"
          additionalProperties:
            type: "object"
            additionalProperties:
              readOnly: true
            readOnly: true
          description: "The versions of each field on the issue."
          readOnly: true
        fieldsToInclude:
          $ref: "#/components/schemas/IncludedFields"
        fields:
          type: "object"
          additionalProperties: {}
      additionalProperties: false
      description: "Details about an issue."
      xml:
        name: "issue"
    Operations:
      type: "object"
      properties:
        linkGroups:
          type: "array"
          description: "Details of the link groups defining issue operations."
          readOnly: true
          items:
            $ref: "#/components/schemas/LinkGroup"
      additionalProperties: true
      description: "Details of the operations that can be performed on the issue."
    LinkGroup:
      type: "object"
      properties:
        id:
          type: "string"
        styleClass:
          type: "string"
        header:
          $ref: "#/components/schemas/SimpleLink"
        weight:
          type: "integer"
          format: "int32"
        links:
          type: "array"
          items:
            $ref: "#/components/schemas/SimpleLink"
      additionalProperties: false
      description: "Details a link group, which defines issue operations."
    SimpleLink:
      type: "object"
      properties:
        id:
          type: "string"
        styleClass:
          type: "string"
        iconClass:
          type: "string"
        label:
          type: "string"
        title:
          type: "string"
        href:
          type: "string"
        weight:
          type: "integer"
          format: "int32"
      additionalProperties: false
      description: "Details about the operations available in this version."
      xml:
        name: "link"
    IssueUpdateMetadata:
      type: "object"
      properties:
        fields:
          type: "object"
          additionalProperties:
            $ref: "#/components/schemas/FieldMetadata"
          readOnly: true
      description: "A list of editable field details."
    PageOfChangelogs:
      type: "object"
      properties:
        startAt:
          type: "integer"
          description: "The index of the first item returned on the page."
          format: "int32"
          readOnly: true
        maxResults:
          type: "integer"
          description: "The maximum number of results that could be on the page."
          format: "int32"
          readOnly: true
        total:
          type: "integer"
          description: "The number of results on the page."
          format: "int32"
          readOnly: true
        histories:
          type: "array"
          description: "The list of changelogs."
          readOnly: true
          items:
            $ref: "#/components/schemas/Changelog"
      additionalProperties: false
      description: "A page of changelogs."
    Changelog:
      type: "object"
      properties:
        id:
          type: "string"
          description: "The ID of the changelog."
          readOnly: true
        author:
          description: "The user who made the change."
          readOnly: true
          allOf:
          - $ref: "#/components/schemas/UserDetails"
        created:
          type: "string"
          description: "The date on which the change took place."
          format: "date-time"
          readOnly: true
        items:
          type: "array"
          description: "The list of items changed."
          readOnly: true
          items:
            $ref: "#/components/schemas/ChangeDetails"
        historyMetadata:
          description: "The history metadata associated with the changed."
          readOnly: true
          allOf:
          - $ref: "#/components/schemas/HistoryMetadata"
      additionalProperties: false
      description: "A changelog."
    IncludedFields:
      type: "object"
      properties:
        actuallyIncluded:
          uniqueItems: true
          type: "array"
          items:
            type: "string"
        excluded:
          uniqueItems: true
          type: "array"
          items:
            type: "string"
        included:
          uniqueItems: true
          type: "array"
          items:
            type: "string"
      additionalProperties: false
    UserDetails:
      type: "object"
      properties:
        self:
          type: "string"
          description: "The URL of the user."
          readOnly: true
        name:
          type: "string"
          description: "This property is no longer available and will be removed from\
            \ the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)\
            \ for details."
          readOnly: true
        key:
          type: "string"
          description: "This property is no longer available and will be removed from\
            \ the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)\
            \ for details."
          readOnly: true
        accountId:
          maxLength: 128
          type: "string"
          description: "The account ID of the user, which uniquely identifies the\
            \ user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*."
        emailAddress:
          type: "string"
          description: "The email address of the user. Depending on the user’s privacy\
            \ settings, this may be returned as null."
          readOnly: true
        avatarUrls:
          description: "The avatars of the user."
          readOnly: true
          allOf:
          - $ref: "#/components/schemas/AvatarUrlsBean"
        displayName:
          type: "string"
          description: "The display name of the user. Depending on the user’s privacy\
            \ settings, this may return an alternative value."
          readOnly: true
        active:
          type: "boolean"
          description: "Whether the user is active."
          readOnly: true
        timeZone:
          type: "string"
          description: "The time zone specified in the user's profile. Depending on\
            \ the user’s privacy settings, this may be returned as null."
          readOnly: true
        accountType:
          type: "string"
          description: "The type of account represented by this user. This will be\
            \ one of 'atlassian' (normal users), 'app' (application user) or 'customer'\
            \ (Jira Service Desk customer user)"
          readOnly: true
      additionalProperties: false
      description: "User details permitted by the user's Atlassian Account privacy\
        \ settings. However, be aware of these exceptions:\n\n *  User record deleted\
        \ from Atlassian: This occurs as the result of a right to be forgotten request.\
        \ In this case, `displayName` provides an indication and other parameters\
        \ have default values or are blank (for example, email is blank).\n *  User\
        \ record corrupted: This occurs as a results of events such as a server import\
        \ and can only happen to deleted users. In this case, `accountId` returns\
        \ *unknown* and all other parameters have fallback values.\n *  User record\
        \ unavailable: This usually occurs due to an internal service outage. In this\
        \ case, all parameters have fallback values."
    AvatarUrlsBean:
      type: "object"
      properties:
        "16x16":
          type: "string"
          description: "The URL of the item's 16x16 pixel avatar."
          format: "uri"
        "24x24":
          type: "string"
          description: "The URL of the item's 24x24 pixel avatar."
          format: "uri"
        "32x32":
          type: "string"
          description: "The URL of the item's 32x32 pixel avatar."
          format: "uri"
        "48x48":
          type: "string"
          description: "The URL of the item's 48x48 pixel avatar."
          format: "uri"
      additionalProperties: false
    ChangeDetails:
      type: "object"
      properties:
        field:
          type: "string"
          description: "The name of the field changed."
          readOnly: true
        fieldtype:
          type: "string"
          description: "The type of the field changed."
          readOnly: true
        fieldId:
          type: "string"
          description: "The ID of the field changed."
          readOnly: true
        from:
          type: "string"
          description: "The details of the original value."
          readOnly: true
        fromString:
          type: "string"
          description: "The details of the original value as a string."
          readOnly: true
        to:
          type: "string"
          description: "The details of the new value."
          readOnly: true
        toString:
          type: "string"
          description: "The details of the new value as a string."
          readOnly: true
      additionalProperties: false
      description: "A change item."
    SearchResults:
      type: "object"
      properties:
        expand:
          type: "string"
          description: "Expand options that include additional search result details\
            \ in the response."
          readOnly: true
        startAt:
          type: "integer"
          description: "The index of the first item returned on the page."
          format: "int32"
          readOnly: true
        maxResults:
          type: "integer"
          description: "The maximum number of results that could be on the page."
          format: "int32"
          readOnly: true
        total:
          type: "integer"
          description: "The number of results on the page."
          format: "int32"
          readOnly: true
        issues:
          type: "array"
          description: "The list of issues found by the search."
          readOnly: true
          items:
            $ref: "#/components/schemas/IssueBean"
        warningMessages:
          type: "array"
          description: "Any warnings related to the JQL query."
          readOnly: true
          items:
            type: "string"
            readOnly: true
        names:
          type: "object"
          additionalProperties:
            type: "string"
            readOnly: true
          description: "The ID and name of each field in the search results."
          readOnly: true
        schema:
          type: "object"
          additionalProperties:
            $ref: "#/components/schemas/JsonTypeBean"
          description: "The schema describing the field types in the search results."
          readOnly: true
      additionalProperties: false
      description: "The result of a JQL search."
  securitySchemes:
    basicAuth:
      type: "http"
      description: "You can access this resource via basic auth."
      scheme: "basic"
    OAuth2:
      type: "oauth2"
      description: "OAuth2 scopes for Jira"
      flows:
        authorizationCode:
          authorizationUrl: "https://auth.atlassian.com/authorize"
          tokenUrl: "https://auth.atlassian.com/oauth/token"
          scopes:
            read:jira-user: "View user information in Jira that you have access to,\
              \ including usernames, email addresses, and avatars."
            read:jira-work: "Read project and issue data. Search for issues and objects\
              \ associated with issues (such as attachments and worklogs)."
            write:jira-work: "Create and edit issues in Jira, post comments, create\
              \ worklogs, and delete issues."
            manage:jira-project: "Create and edit project settings and create new\
              \ project-level objects, for example, versions, components."
            manage:jira-configuration: "Configure Jira settings that require the Jira\
              \ administrators permission, for example, create projects and custom\
              \ fields, view workflows, manage issue link types."
            manage:jira-webhook: "Manage Jira webhooks. Enables an OAuth app to register\
              \ and unregister dynamic webhooks in Jira. It also provides for fetching\
              \ of registered webhooks."
            read:application-role:jira: "View application roles."
            read:audit-log:jira: "View audit logs."
            read:avatar:jira: "View system and custom avatars."
            write:avatar:jira: "Create and update system and custom avatars."
            delete:avatar:jira: "Delete system and custom avatars."
            read:project.avatar:jira: "Read project avatars."
            write:project.avatar:jira: "Create and update project avatars."
            delete:project.avatar:jira: "Delete project avatars."
            read:dashboard:jira: "View dashboards."
            write:dashboard:jira: "Create and update dashboards."
            delete:dashboard:jira: "Delete dashboards."
            read:dashboard.property:jira: "View dashboard properties."
            write:dashboard.property:jira: "Create and update dashboard properties."
            delete:dashboard.property:jira: "Delete dashboard properties."
            read:filter:jira: "View filters."
            write:filter:jira: "Create and update filters."
            delete:filter:jira: "Delete filters."
            read:filter.column:jira: "View filter columns."
            write:filter.column:jira: "Create and update filter columns."
            delete:filter.column:jira: "Delete filter columns."
            read:filter.default-share-scope:jira: "View filter default share scopes."
            write:filter.default-share-scope:jira: "Create and update filter default\
              \ share scopes."
            read:group:jira: "View user groups."
            write:group:jira: "Create and update user groups."
            delete:group:jira: "Delete user groups."
            read:license:jira: "View licenses."
            read:issue:jira: "View issues."
            write:issue:jira: "Create and update issues."
            delete:issue:jira: "Delete issues."
            read:issue-meta:jira: "View issue meta."
            send:notification:jira: "Send notifications."
            read:attachment:jira: "View issue attachments."
            write:attachment:jira: "Create and update issue attachments."
            delete:attachment:jira: "Delete issue attachments."
            read:comment:jira: "View issue comments."
            write:comment:jira: "Create and update issue comments."
            delete:comment:jira: "Delete issue comments."
            read:comment.property:jira: "View issue comment properties."
            write:comment.property:jira: "Create and update issue comment properties."
            delete:comment.property:jira: "Delete issue comment properties."
            read:field:jira: "View fields."
            write:field:jira: "Create and update fields."
            delete:field:jira: "Delete fields."
            read:field.default-value:jira: "View field default values."
            write:field.default-value:jira: "Create and update field default values."
            read:field.option:jira: "View field options."
            write:field.option:jira: "Create and update field options."
            delete:field.option:jira: "Delete field options."
            read:field-configuration-scheme:jira: "View field configuration schemes."
            write:field-configuration-scheme:jira: "Create and update field configuration\
              \ schemes."
            delete:field-configuration-scheme:jira: "Delete field configuration schemes."
            read:custom-field-contextual-configuration:jira: "Read custom field contextual\
              \ configurations."
            write:custom-field-contextual-configuration:jira: "Save custom field contextual\
              \ configurations."
            read:field-configuration:jira: "Read field configurations."
            write:field-configuration:jira: "Save field configurations."
            delete:field-configuration:jira: "Delete field configurations."
            read:field.options:jira: "Read field options."
            read:issue-link:jira: "View issue links."
            write:issue-link:jira: "Create and update issue links."
            delete:issue-link:jira: "Delete issue links."
            read:issue-link-type:jira: "View issue link types."
            write:issue-link-type:jira: "Create and update issue link types."
            delete:issue-link-type:jira: "Delete issue link types."
            read:notification-scheme:jira: "View notification schemes."
            read:priority:jira: "View priorities."
            read:issue.property:jira: "View issue properties."
            write:issue.property:jira: "Create and update issue properties."
            delete:issue.property:jira: "Delete issue properties."
            read:issue.remote-link:jira: "View issue remote links."
            write:issue.remote-link:jira: "Create and update issue remote links."
            delete:issue.remote-link:jira: "Delete issue remote links."
            read:resolution:jira: "View resolutions."
            read:issue-details:jira: "View issue details."
            read:issue-security-scheme:jira: "View issue security schemes."
            read:issue-type:jira: "View issue types."
            write:issue-type:jira: "Create and update issue types."
            delete:issue-type:jira: "Delete issue types."
            read:issue-type-scheme:jira: "View issue type schemes."
            write:issue-type-scheme:jira: "Create and update issue type schemes."
            delete:issue-type-scheme:jira: "Delete issue type schemes."
            read:issue-type-screen-scheme:jira: "View issue type screen schemes."
            write:issue-type-screen-scheme:jira: "Create and update issue type screen\
              \ schemes."
            delete:issue-type-screen-scheme:jira: "Delete issue type screen schemes."
            read:issue-type.property:jira: "View issue type properties."
            write:issue-type.property:jira: "Create and update issue type properties."
            delete:issue-type.property:jira: "Delete issue type properties."
            read:issue.watcher:jira: "View issue watchers."
            write:issue.watcher:jira: "Create and update issue watchers."
            read:issue-worklog:jira: "View issue worklogs."
            write:issue-worklog:jira: "Create and update issue worklogs."
            delete:issue-worklog:jira: "Delete issue worklogs."
            read:issue-worklog.property:jira: "View issue worklog properties."
            write:issue-worklog.property:jira: "Create and update issue worklog properties."
            delete:issue-worklog.property:jira: "Delete issue worklog properties."
            read:issue-field-values:jira: "View issue field valueses."
            read:issue-security-level:jira: "View issue security levels."
            read:issue-status:jira: "View issue statuses."
            read:issue-type-hierarchy:jira: "Read issue type hierarchies."
            read:issue.changelog:jira: "View issue changelogs."
            read:issue.transition:jira: "View issue transitions."
            read:issue.vote:jira: "View issue votes."
            write:issue.vote:jira: "Create and update issue votes."
            read:issue.votes:jira: "View issue voteses."
            read:issue-event:jira: "Read issue events."
            read:jira-expressions:jira: "View jira expressions."
            read:user:jira: "View users."
            read:user.columns:jira: "View user columnses."
            read:label:jira: "View labels."
            read:permission:jira: "View permissions."
            write:permission:jira: "Create and update permissions."
            delete:permission:jira: "Delete permissions."
            read:permission-scheme:jira: "View permission schemes."
            write:permission-scheme:jira: "Create and update permission schemes."
            delete:permission-scheme:jira: "Delete permission schemes."
            read:project:jira: "View projects."
            write:project:jira: "Create and update projects."
            delete:project:jira: "Delete projects and their details, such as issue\
              \ types, project lead, and avatars."
            read:project-category:jira: "View project categories."
            write:project-category:jira: "Create and update project categories."
            delete:project-category:jira: "Delete project categories."
            read:project.component:jira: "View project components."
            write:project.component:jira: "Create and update project components."
            delete:project.component:jira: "Delete project components."
            read:project.property:jira: "View project properties."
            write:project.property:jira: "Create and update project properties."
            delete:project.property:jira: "Delete project properties."
            read:project-role:jira: "View project roles."
            write:project-role:jira: "Create and update project roles."
            delete:project-role:jira: "Delete project roles."
            read:project-version:jira: "View project versions."
            write:project-version:jira: "Create and update project versions."
            delete:project-version:jira: "Delete project versions."
            read:project.feature:jira: "Read project features."
            write:project.feature:jira: "Save project features."
            read:screen:jira: "View screens."
            write:screen:jira: "Create and update screens."
            delete:screen:jira: "Delete screens."
            read:screen-scheme:jira: "View screen schemes."
            write:screen-scheme:jira: "Create and update screen schemes."
            delete:screen-scheme:jira: "Delete screen schemes."
            read:screen-field:jira: "View screen fields."
            read:screen-tab:jira: "View screen tabs."
            write:screen-tab:jira: "Create and update screen tabs."
            delete:screen-tab:jira: "Delete screen tabs."
            read:screenable-field:jira: "View screenable fields."
            write:screenable-field:jira: "Create and update screenable fields."
            delete:screenable-field:jira: "Delete screenable fields."
            read:issue.time-tracking:jira: "View issue time trackings."
            write:issue.time-tracking:jira: "Create and update issue time trackings."
            read:user.property:jira: "View user properties."
            write:user.property:jira: "Create and update user properties."
            delete:user.property:jira: "Delete user properties."
            read:webhook:jira: "View webhooks."
            write:webhook:jira: "Create and update webhooks."
            delete:webhook:jira: "Delete webhooks."
            read:workflow:jira: "View workflows."
            write:workflow:jira: "Create and update workflows."
            delete:workflow:jira: "Delete workflows."
            read:workflow-scheme:jira: "View workflow schemes."
            write:workflow-scheme:jira: "Create and update workflow schemes."
            delete:workflow-scheme:jira: "Delete workflow schemes."
            read:status:jira: "View statuses."
            read:workflow.property:jira: "View workflow properties."
            write:workflow.property:jira: "Create and update workflow properties."
            delete:workflow.property:jira: "Delete workflow properties."
            delete:async-task:jira: "Delete asynchronous task."
            read:instance-configuration:jira: "View instance configurations."
            write:instance-configuration:jira: "Create and update instance configurations."
            read:jql:jira: "View JQL."
            validate:jql:jira: "Validate JQL."
            read:project-type:jira: "View project types."
            read:project.email:jira: "View project emails."
            write:project.email:jira: "Create and update project emails."
            read:role:jira: "View roles."
            read:user-configuration:jira: "View user configurations."
            write:user-configuration:jira: "Create and update user configurations."
            delete:user-configuration:jira: "Delete user configurations."
