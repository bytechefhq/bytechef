---
openapi: "3.0.2"
info:
  title: "ScrapeGraphAI"
  description: "ScrapeGraphAI is a web scraping python library that uses LLM and direct graph logic to create scraping pipelines for websites and local documents."
  version: "v1"
servers:
  - url: "https://api.scrapegraphai.com/v1"
paths:
  /searchscraper:
    post:
      summary: "Search Scraper"
      description: "Start a AI-powered web search request."
      operationId: "searchScraper"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              required:
                - "user_prompt"
              properties:
                user_prompt:
                  type: "string"
                  description: "The search query or question you want to ask."
                  title: "User Prompt"
      responses:
        200:
          description: "Successful operation."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  request_id:
                    type: "string"
                    description: "Unique identifier for the search request."
                  status:
                    type: "string"
                    description: "Status of the request. One of: “queued”, “processing”, “completed”, “failed”."
                  user_prompt:
                    type: "string"
                    description: "The original search query that was submitted."
                  result:
                    type: "object"
                    description: "The search results."
                  reference_urls:
                    type: "array"
                    description: "List of URLs that were used as references for the answer."
                    items:
                      type: "string"
                  error:
                    type: "string"
                    description: "Error message if the request failed. Empty string if successful."
  /markdownify:
    post:
      summary: "Markdownify"
      description: "Convert any webpage into clean, readable Markdown format."
      operationId: "markdownify"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              required:
                - "website_url"
              properties:
                website_url:
                  type: "string"
                  description: "Website URL."
                  title: "Website URL"
      responses:
        200:
          description: "Successful operation."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  request_id:
                    type: "string"
                    description: "Unique identifier for the request."
                  status:
                    type: "string"
                    description: "Status of the request. One of: “queued”, “processing”, “completed”, “failed”."
                  website_url:
                    type: "string"
                    description: "The original website URL that was submitted."
                  result:
                    type: "string"
                    description: "The search results."
                  error:
                    type: "string"
                    description: "Error message if the request failed. Empty string if successful."
  /smartscraper:
    post:
      summary: "Smart Scraper"
      description: "Extract content from a webpage using AI by providing a natural language prompt and a URL."
      operationId: "smartScraper"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              required:
                - "user_prompt"
                - "website_url"
              properties:
                user_prompt:
                  type: "string"
                  description: "The search query or question you want to ask."
                  title: "User Prompt"
                website_url:
                  type: "string"
                  description: "Website URL."
                  title: "Website URL"
      responses:
        200:
          description: "Successful operation."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  request_id:
                    type: "string"
                    description: "Unique identifier for the search request."
                  status:
                    type: "string"
                    description: "Status of the request. One of: “queued”, “processing”, “completed”, “failed”."
                  website_url:
                    type: "string"
                    description: "The original website URL that was submitted."
                  user_prompt:
                    type: "string"
                    description: "The original search query that was submitted."
                  result:
                    type: "object"
                    description: "The search results."
                  error:
                    type: "string"
                    description: "Error message if the request failed. Empty string if successful."
components:
  securitySchemes:
    api_key:
      type: "apiKey"
      in: "header"
      name: "SGAI-APIKEY"
