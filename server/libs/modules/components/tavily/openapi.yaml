---
openapi: "3.0.1"
info:
  title: "Tavily"
  description: "Tavily is an AI-powered search tool designed to help users quickly find accurate, relevant, and up-to-date information from the web."
  version: "v1"
servers:
  - url: "https://api.tavily.com"
paths:
  /search:
    post:
      summary: "Search"
      description: "Execute a search query."
      operationId: "search"
      x-ai-agent-tool: true
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              required:
                - "query"
              properties:
                query:
                  type: "string"
                  description: "The search query to execute."
                topic:
                  type: "string"
                  description: "The category of the search."
                  default: "general"
                search_depth:
                  type: "string"
                  description: "The depth of the search."
                  default: "basic"
                time_range:
                  type: "string"
                  description: "The time range back from the current date to filter results."
                max_results:
                  type: "integer"
                  description: "The maximum number of search results to return."
                  default: "5"
                include_answer:
                  type: "boolean"
                  description: "Include an LLM-generated answer to the provided query."
                  default: "false"
                include_images:
                  type: "boolean"
                  description: "Perform an image search and include the results in the response."
                  default: "false"
      responses:
        200:
          description: "Successful operation."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  query:
                    type: "string"
                    description: "The search query that was executed."
                  answer:
                    type: "string"
                    description: "A short answer to the user's query, generated by an LLM. Included in the response only if include_answer is requested."
                  images:
                    type: "array"
                    description: "List of query-related images."
                    items:
                      type: "object"
                  results:
                    type: "array"
                    description: "A list of sorted search results, ranked by relevancy."
                    items:
                      type: "object"
                      properties:
                        title:
                          type: "string"
                          description: "The title of the search result."
                        url:
                          type: "string"
                          description: "The URL of the search result."
                        content:
                          type: "string"
                          description: "A short description of the search result."
                        score:
                          type: "number"
                          description: "The relevance score of the search result."
                  response_time:
                    type: "number"
                    description: "Time in seconds it took to complete the request."
  /extract:
    post:
      summary: "Extract"
      description: "Extract web page content from one or more specified URLs."
      operationId: "extract"
      x-ai-agent-tool: true
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              required:
                - "urls"
              properties:
                urls:
                  type: "array"
                  description: "A list of URLs to extract content from."
                  title: "URLs"
                  items:
                    type: "string"
                include_images:
                  type: "boolean"
                  description: "Include a list of images extracted from the URLs in the response."
                  default: "false"
                extract_depth:
                  type: "string"
                  description: "The depth of the extraction process."
                  default: "basic"
      responses:
        200:
          description: "Successful operation."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  results:
                    type: "array"
                    description: "A list of extracted content from the provided URLs."
                    items:
                      type: "object"
                      properties:
                        url:
                          type: "string"
                          description: "The URL from which the content was extracted."
                        raw_content:
                          type: "string"
                          description: "The full content extracted from the page."
                        images:
                          type: "array"
                          description: "This is only available if include_images is set to true. A list of image URLs extracted from the page."
                          items:
                            type: "string"
                  failed_results:
                    type: "array"
                    description: "A list of URLs that could not be processed."
                    items:
                      type: "object"
                      properties:
                        url:
                          type: "string"
                          description: "The URL that failed to be processed."
                        error:
                          type: "string"
                          description: "An error message describing why the URL couldn't be processed."
                  response_time:
                    type: "number"
                    description: "Time in seconds it took to complete the request."
components:
  securitySchemes:
    bearerAuth:
      scheme: "bearer"
      type: "http"
