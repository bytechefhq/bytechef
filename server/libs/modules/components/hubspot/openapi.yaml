---
openapi: "3.0.1"
info:
  title: "The HubSpot platform REST API"
  description: "HubSpot is a CRM platform with all the software, integrations, and\
    \ resources you need to connect marketing, sales, content management, and customer\
    \ service."
  version: "v3"
servers:
- url: "https://api.hubapi.com/"
tags:
- name: "Associations"
- name: "Basic"
- name: "Batch"
- name: "GDPR"
- name: "Search"
- name: "Public_Object"
paths:
  /crm/v3/objects/contacts:
    post:
      tags:
      - "Basic"
      summary: "Create"
      description: "Create a contact with the given properties and return a copy of\
        \ the object, including the ID. Documentation and examples for creating standard\
        \ contacts is provided."
      operationId: "createContact"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SimplePublicObjectInputForCreate"
        required: true
      responses:
        "201":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimplePublicObject"
        default:
          $ref: "#/components/responses/Error"
      security:
      - hapikey: []
      - oauth2:
        - "crm.objects.contacts.read"
        - "crm.objects.contacts.write"
  /crm/v3/objects/contacts/{contactId}:
    patch:
      tags:
      - "Basic"
      summary: "Update"
      description: "Perform a partial update of an Object identified by `{contactId}`.\
        \ `{contactId}` refers to the internal object ID. Provided property values\
        \ will be overwritten. Read-only and non-existent properties will be ignored.\
        \ Properties values can be cleared by passing an empty string."
      operationId: "updateContact"
      parameters:
      - name: "contactId"
        in: "path"
        required: true
        style: "simple"
        explode: false
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SimplePublicObjectInput"
        required: true
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimplePublicObject"
        default:
          $ref: "#/components/responses/Error"
      security:
      - hapikey: []
      - oauth2:
        - "crm.objects.contacts.read"
        - "crm.objects.contacts.write"
components:
  schemas:
    StandardError:
      required:
      - "category"
      - "context"
      - "errors"
      - "links"
      - "message"
      - "status"
      type: "object"
      properties:
        status:
          type: "string"
        id:
          type: "string"
        category:
          $ref: "#/components/schemas/ErrorCategory"
        subCategory:
          type: "object"
          properties: {}
        message:
          type: "string"
        errors:
          type: "array"
          items:
            $ref: "#/components/schemas/ErrorDetail"
        context:
          type: "object"
          additionalProperties:
            type: "array"
            items:
              type: "string"
        links:
          type: "object"
          additionalProperties:
            type: "string"
    CollectionResponseAssociatedId:
      required:
      - "results"
      type: "object"
      properties:
        results:
          type: "array"
          items:
            $ref: "#/components/schemas/AssociatedId"
        paging:
          $ref: "#/components/schemas/Paging"
    PublicAssociationsForObject:
      required:
      - "to"
      - "types"
      type: "object"
      properties:
        to:
          $ref: "#/components/schemas/PublicObjectId"
        types:
          type: "array"
          items:
            $ref: "#/components/schemas/AssociationSpec"
    BatchResponseSimplePublicObject:
      required:
      - "completedAt"
      - "results"
      - "startedAt"
      - "status"
      type: "object"
      properties:
        status:
          type: "string"
          enum:
          - "PENDING"
          - "PROCESSING"
          - "CANCELED"
          - "COMPLETE"
        results:
          type: "array"
          items:
            $ref: "#/components/schemas/SimplePublicObject"
        requestedAt:
          type: "string"
          format: "date-time"
        startedAt:
          type: "string"
          format: "date-time"
        completedAt:
          type: "string"
          format: "date-time"
        links:
          type: "object"
          additionalProperties:
            type: "string"
    FilterGroup:
      required:
      - "filters"
      type: "object"
      properties:
        filters:
          type: "array"
          items:
            $ref: "#/components/schemas/Filter"
    ErrorDetail:
      required:
      - "message"
      type: "object"
      properties:
        message:
          type: "string"
          description: "A human readable message describing the error along with remediation\
            \ steps where appropriate"
        in:
          type: "string"
          description: "The name of the field or parameter in which the error was\
            \ found."
        code:
          type: "string"
          description: "The status code associated with the error detail"
        subCategory:
          type: "string"
          description: "A specific category that contains more specific detail about\
            \ the error"
        context:
          type: "object"
          additionalProperties:
            type: "array"
            items:
              type: "string"
          description: "Context about the error condition"
          example:
            missingScopes:
            - "scope1"
            - "scope2"
    ForwardPaging:
      type: "object"
      properties:
        next:
          $ref: "#/components/schemas/NextPage"
    SimplePublicObjectId:
      required:
      - "id"
      type: "object"
      properties:
        id:
          type: "string"
    BatchReadInputSimplePublicObjectId:
      required:
      - "inputs"
      - "properties"
      - "propertiesWithHistory"
      type: "object"
      properties:
        properties:
          type: "array"
          items:
            type: "string"
        propertiesWithHistory:
          type: "array"
          items:
            type: "string"
        idProperty:
          type: "string"
        inputs:
          type: "array"
          items:
            $ref: "#/components/schemas/SimplePublicObjectId"
    BatchInputSimplePublicObjectId:
      required:
      - "inputs"
      type: "object"
      properties:
        inputs:
          type: "array"
          items:
            $ref: "#/components/schemas/SimplePublicObjectId"
    ValueWithTimestamp:
      required:
      - "sourceType"
      - "timestamp"
      - "value"
      type: "object"
      properties:
        value:
          type: "string"
        timestamp:
          type: "string"
          format: "date-time"
        sourceType:
          type: "string"
        sourceId:
          type: "string"
        sourceLabel:
          type: "string"
        updatedByUserId:
          type: "integer"
          format: "int32"
    CollectionResponseWithTotalSimplePublicObjectForwardPaging:
      required:
      - "results"
      - "total"
      type: "object"
      properties:
        total:
          type: "integer"
          format: "int32"
        results:
          type: "array"
          items:
            $ref: "#/components/schemas/SimplePublicObject"
        paging:
          $ref: "#/components/schemas/ForwardPaging"
    SimplePublicObject:
      required:
      - "createdAt"
      - "id"
      - "properties"
      - "updatedAt"
      type: "object"
      properties:
        id:
          type: "string"
        properties:
          type: "object"
          additionalProperties:
            type: "string"
        propertiesWithHistory:
          type: "object"
          additionalProperties:
            type: "array"
            items:
              $ref: "#/components/schemas/ValueWithTimestamp"
        createdAt:
          type: "string"
          format: "date-time"
        updatedAt:
          type: "string"
          format: "date-time"
        archived:
          type: "boolean"
        archivedAt:
          type: "string"
          format: "date-time"
    PublicObjectId:
      required:
      - "id"
      type: "object"
      properties:
        id:
          type: "string"
    Paging:
      type: "object"
      properties:
        next:
          $ref: "#/components/schemas/NextPage"
        prev:
          $ref: "#/components/schemas/PreviousPage"
    PublicObjectSearchRequest:
      required:
      - "after"
      - "filterGroups"
      - "limit"
      - "properties"
      - "sorts"
      type: "object"
      properties:
        filterGroups:
          type: "array"
          items:
            $ref: "#/components/schemas/FilterGroup"
        sorts:
          type: "array"
          items:
            type: "string"
        query:
          type: "string"
        properties:
          type: "array"
          items:
            type: "string"
        limit:
          type: "integer"
          format: "int32"
        after:
          type: "integer"
          format: "int32"
    Error:
      required:
      - "category"
      - "correlationId"
      - "message"
      type: "object"
      properties:
        message:
          type: "string"
          description: "A human readable message describing the error along with remediation\
            \ steps where appropriate"
          example: "An error occurred"
        correlationId:
          type: "string"
          description: "A unique identifier for the request. Include this value with\
            \ any error reports or support tickets"
          format: "uuid"
          example: "aeb5f871-7f07-4993-9211-075dc63e7cbf"
        category:
          type: "string"
          description: "The error category"
        subCategory:
          type: "string"
          description: "A specific category that contains more specific detail about\
            \ the error"
        errors:
          type: "array"
          description: "further information about the error"
          items:
            $ref: "#/components/schemas/ErrorDetail"
        context:
          type: "object"
          additionalProperties:
            type: "array"
            items:
              type: "string"
          description: "Context about the error condition"
          example:
            invalidPropertyName:
            - "propertyValue"
            missingScopes:
            - "scope1"
            - "scope2"
        links:
          type: "object"
          additionalProperties:
            type: "string"
          description: "A map of link names to associated URIs containing documentation\
            \ about the error or recommended remediation steps"
      example:
        message: "Invalid input (details will vary based on the error)"
        correlationId: "aeb5f871-7f07-4993-9211-075dc63e7cbf"
        category: "VALIDATION_ERROR"
        links:
          knowledge-base: "https://www.hubspot.com/products/service/knowledge-base"
    BatchResponseSimplePublicObjectWithErrors:
      required:
      - "completedAt"
      - "results"
      - "startedAt"
      - "status"
      type: "object"
      properties:
        status:
          type: "string"
          enum:
          - "PENDING"
          - "PROCESSING"
          - "CANCELED"
          - "COMPLETE"
        results:
          type: "array"
          items:
            $ref: "#/components/schemas/SimplePublicObject"
        numErrors:
          type: "integer"
          format: "int32"
        errors:
          type: "array"
          items:
            $ref: "#/components/schemas/StandardError"
        requestedAt:
          type: "string"
          format: "date-time"
        startedAt:
          type: "string"
          format: "date-time"
        completedAt:
          type: "string"
          format: "date-time"
        links:
          type: "object"
          additionalProperties:
            type: "string"
    PublicGdprDeleteInput:
      required:
      - "objectId"
      type: "object"
      properties:
        objectId:
          type: "string"
        idProperty:
          type: "string"
    SimplePublicObjectInput:
      required:
      - "properties"
      type: "object"
      properties:
        properties:
          type: "object"
          properties:
            company:
              type: "string"
            email:
              type: "string"
            firstname:
              type: "string"
            lastname:
              type: "string"
            phone:
              type: "string"
            website:
              type: "string"
          additionalProperties:
            type: "string"
    CollectionResponseSimplePublicObjectWithAssociationsForwardPaging:
      required:
      - "results"
      type: "object"
      properties:
        results:
          type: "array"
          items:
            $ref: "#/components/schemas/SimplePublicObjectWithAssociations"
        paging:
          $ref: "#/components/schemas/ForwardPaging"
    AssociationSpec:
      required:
      - "associationCategory"
      - "associationTypeId"
      type: "object"
      properties:
        associationCategory:
          type: "string"
          enum:
          - "HUBSPOT_DEFINED"
          - "USER_DEFINED"
          - "INTEGRATOR_DEFINED"
        associationTypeId:
          type: "integer"
          format: "int32"
    PublicMergeInput:
      required:
      - "objectIdToMerge"
      - "primaryObjectId"
      type: "object"
      properties:
        primaryObjectId:
          type: "string"
        objectIdToMerge:
          type: "string"
    ErrorCategory:
      required:
      - "httpStatus"
      - "name"
      type: "object"
      properties:
        name:
          type: "string"
        httpStatus:
          type: "string"
          enum:
          - "CONTINUE"
          - "SWITCHING_PROTOCOLS"
          - "PROCESSING"
          - "OK"
          - "CREATED"
          - "ACCEPTED"
          - "NON_AUTHORITATIVE_INFORMATION"
          - "NO_CONTENT"
          - "RESET_CONTENT"
          - "PARTIAL_CONTENT"
          - "MULTI_STATUS"
          - "ALREADY_REPORTED"
          - "IM_USED"
          - "MULTIPLE_CHOICES"
          - "MOVED_PERMANENTLY"
          - "FOUND"
          - "SEE_OTHER"
          - "NOT_MODIFIED"
          - "USE_PROXY"
          - "TEMPORARY_REDIRECT"
          - "PERMANENT_REDIRECT"
          - "BAD_REQUEST"
          - "UNAUTHORIZED"
          - "PAYMENT_REQUIRED"
          - "FORBIDDEN"
          - "NOT_FOUND"
          - "METHOD_NOT_ALLOWED"
          - "NOT_ACCEPTABLE"
          - "PROXY_AUTHENTICATION_REQUIRED"
          - "REQUEST_TIMEOUT"
          - "CONFLICT"
          - "GONE"
          - "LENGTH_REQUIRED"
          - "PRECONDITION_FAILED"
          - "REQUEST_ENTITY_TOO_LARGE"
          - "REQUEST_URI_TOO_LONG"
          - "UNSUPPORTED_MEDIA_TYPE"
          - "REQUESTED_RANGE_NOT_SATISFIABLE"
          - "EXPECTATION_FAILED"
          - "IM_A_TEAPOT"
          - "MISDIRECTED_REQUEST"
          - "UNPROCESSABLE_ENTITY"
          - "LOCKED"
          - "FAILED_DEPENDENCY"
          - "UPGRADE_REQUIRED"
          - "PRECONDITION_REQUIRED"
          - "TOO_MANY_REQUESTS"
          - "REQUEST_HEADERS_FIELDS_TOO_LARGE"
          - "INTERNAL_STALE_SERVICE_DISCOVERY"
          - "UNAVAILABLE_FOR_LEGAL_REASONS"
          - "MIGRATION_IN_PROGRESS"
          - "INTERNAL_SERVER_ERROR"
          - "NOT_IMPLEMENTED"
          - "BAD_GATEWAY"
          - "SERVICE_UNAVAILABLE"
          - "GATEWAY_TIMEOUT"
          - "HTTP_VERSION_NOT_SUPPORTED"
          - "VARIANT_ALSO_NEGOTIATES"
          - "INSUFFICIENT_STORAGE"
          - "LOOP_DETECTED"
          - "NOT_EXTENDED"
          - "NETWORK_AUTHENTICATION_REQUIRED"
    SimplePublicObjectWithAssociations:
      required:
      - "createdAt"
      - "id"
      - "properties"
      - "updatedAt"
      type: "object"
      properties:
        id:
          type: "string"
        properties:
          type: "object"
          additionalProperties:
            type: "string"
        propertiesWithHistory:
          type: "object"
          additionalProperties:
            type: "array"
            items:
              $ref: "#/components/schemas/ValueWithTimestamp"
        createdAt:
          type: "string"
          format: "date-time"
        updatedAt:
          type: "string"
          format: "date-time"
        archived:
          type: "boolean"
        archivedAt:
          type: "string"
          format: "date-time"
        associations:
          type: "object"
          additionalProperties:
            $ref: "#/components/schemas/CollectionResponseAssociatedId"
    Filter:
      required:
      - "operator"
      - "propertyName"
      type: "object"
      properties:
        value:
          type: "string"
        highValue:
          type: "string"
        values:
          type: "array"
          items:
            type: "string"
        propertyName:
          type: "string"
        operator:
          type: "string"
          description: "null"
          enum:
          - "EQ"
          - "NEQ"
          - "LT"
          - "LTE"
          - "GT"
          - "GTE"
          - "BETWEEN"
          - "IN"
          - "NOT_IN"
          - "HAS_PROPERTY"
          - "NOT_HAS_PROPERTY"
          - "CONTAINS_TOKEN"
          - "NOT_CONTAINS_TOKEN"
    BatchInputSimplePublicObjectBatchInput:
      required:
      - "inputs"
      type: "object"
      properties:
        inputs:
          type: "array"
          items:
            $ref: "#/components/schemas/SimplePublicObjectBatchInput"
    BatchInputSimplePublicObjectInputForCreate:
      required:
      - "inputs"
      type: "object"
      properties:
        inputs:
          type: "array"
          items:
            $ref: "#/components/schemas/SimplePublicObjectInputForCreate"
    PreviousPage:
      required:
      - "before"
      type: "object"
      properties:
        before:
          type: "string"
        link:
          type: "string"
    SimplePublicObjectBatchInput:
      required:
      - "id"
      - "properties"
      type: "object"
      properties:
        properties:
          type: "object"
          additionalProperties:
            type: "string"
        id:
          type: "string"
    AssociatedId:
      required:
      - "id"
      - "type"
      type: "object"
      properties:
        id:
          type: "string"
        type:
          type: "string"
    NextPage:
      required:
      - "after"
      type: "object"
      properties:
        after:
          type: "string"
        link:
          type: "string"
      example:
        after: "NTI1Cg%3D%3D"
        link: "?after=NTI1Cg%3D%3D"
    SimplePublicObjectInputForCreate:
      required:
      - "associations"
      - "properties"
      type: "object"
      properties:
        properties:
          type: "object"
          properties:
            company:
              type: "string"
            email:
              type: "string"
            firstname:
              type: "string"
            lastname:
              type: "string"
            phone:
              type: "string"
            website:
              type: "string"
          additionalProperties:
            type: "string"
        associations:
          type: "array"
          items:
            $ref: "#/components/schemas/PublicAssociationsForObject"
  responses:
    Error:
      description: "An error occurred."
      content:
        '*/*':
          schema:
            $ref: "#/components/schemas/Error"
  securitySchemes:
    oauth2:
      type: "oauth2"
      flows:
        authorizationCode:
          authorizationUrl: "https://app.hubspot.com/oauth/authorize"
          tokenUrl: "https://api.hubapi.com/oauth/v1/token"
          scopes:
            crm.objects.contacts.read: " "
            crm.objects.contacts.write: " "
