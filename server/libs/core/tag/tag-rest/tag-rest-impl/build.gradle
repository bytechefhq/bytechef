plugins {
    alias(libs.plugins.org.openapi.generator)
}

task generateOpenAPISpring(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    apiPackage = "com.bytechef.tag.web.rest"
    configOptions = [
        "dateLibrary": "java8-localdatetime",
        "interfaceOnly": "true",

        "useSpringBoot3": "true"
    ]
    generatorName = "spring"
    inputSpec = "$projectDir/openapi.yaml".toString()
    modelNameSuffix = "Model"
    modelPackage = "com.bytechef.tag.web.rest.model"
    outputDir = "$projectDir/../tag-rest-api/generated".toString()
}

task generateOpenAPITypeScriptFetch(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    generatorName = "typescript-fetch"
    inputSpec = "$projectDir/openapi.yaml".toString()
    modelNameSuffix = "Model"
    outputDir = "$rootDir/client/src/middleware/core/tag".toString()
    typeMappings = [
        DateTime: "Date"
    ]
}

tasks.register("generateOpenAPI") {
    dependsOn tasks.generateOpenAPISpring, tasks.generateOpenAPITypeScriptFetch
}

dependencies {
    api project(":server:libs:core:tag:tag-rest:tag-rest-api")

    implementation "org.slf4j:slf4j-api"
    implementation "org.springframework:spring-context"
    implementation "org.springframework:spring-web"
    implementation libs.io.swagger.core.v3.swagger.annotations

    testImplementation "org.springframework.boot:spring-boot-starter-web"
}
