extend type Query {
    mcpComponent(id: ID): McpComponent
    mcpComponents: [McpComponent]
    mcpComponentsByServerId(mcpServerId: ID): [McpComponent]
}

extend type Mutation {
    createMcpComponent(input: McpComponentInput!): McpComponent
    createMcpComponentWithTools(input: McpComponentWithToolsInput!): McpComponent
    updateMcpComponentWithTools(id: ID!, input: McpComponentWithToolsInput!): McpComponent
    deleteMcpComponent(id: ID!): Boolean
}

type McpComponent {
    id: ID!
    componentName: String!
    componentVersion: Int!
    mcpServerId: ID!
    connectionId: ID
    mcpTools: [McpTool]
    createdBy: String
    createdDate: Long
    lastModifiedBy: String
    lastModifiedDate: Long
    version: Int
}

input McpComponentInput {
    componentName: String!
    componentVersion: Int!
    mcpServerId: ID!
    connectionId: ID
}

input McpComponentWithToolsInput {
    componentName: String!
    componentVersion: Int!
    mcpServerId: ID!
    connectionId: ID
    tools: [McpToolInputForComponent!]!
    version: Int
}

input McpToolInputForComponent {
    name: String!
    parameters: Map
}
