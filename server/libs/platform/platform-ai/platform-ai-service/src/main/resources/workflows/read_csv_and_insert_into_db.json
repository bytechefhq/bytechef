{
    "label" : "Read CSV and send to DB",
    "description" : "Read a CSV file called 'cities.csv' and iterate through it. If a line contains both 'City' and 'Country' values, log them and insert them into PostgreSQL table 'CITY', otherwise just log a warning. After that, make a query counting the number of records inside table 'CITY' and log it.",
    "inputs" : [ ],
    "triggers" : [ ],
    "tasks" : [ {
        "label" : "Load a csv file from local machine",
        "name" : "filesystem_1",
        "parameters" : {
            "filename" : "/absolute/path/to/cities.csv"
        },
        "type" : "filesystem/v1/readFile",
        "description" : "Files at local machine where ByteChef Self Hosted docker image is running. Folder is configured with environment variable. The file is put into a data pill.",
        "metadata" : {
            "ui" : {
                "dynamicPropertyTypes" : { }
            }
        }
    }, {
        "label" : "Read from CSV file data pill",
        "name" : "csvFile_1",
        "parameters" : {
            "delimiter" : ",",
            "headerRow" : true,
            "includeEmptyCells" : false,
            "readAsString" : false,
            "fileEntry" : "${filesystem_1}",
            "enclosingCharacter" : "\""
        },
        "type" : "csvFile/v1/read",
        "description" : "Interface to physical file configured by Filesystem component.",
        "metadata" : {
            "ui" : {
                "dynamicPropertyTypes" : { }
            }
        }
    }, {
        "label" : "Loop through CSV rows",
        "type" : "loop/v1",
        "name" : "loop_1",
        "parameters" : {
            "items" : "${csvFile_1}",
            "iteratee" : [ {
                "label" : "If 'City' and 'State' are present",
                "name" : "condition_1",
                "type" : "condition/v1",
                "parameters" : {
                    "rawExpression" : true,
                    "expression" : "${loop_1.item['City'] != null and loop_1.item['State'] != null}",
                    "caseTrue" : [ {
                        "label" : "Log",
                        "name" : "logEntry1",
                        "parameters" : {
                            "text" : "Line> ${loop_1.item} city: ${loop_1.item['City']}"
                        },
                        "type" : "logger/v1/info"
                    }, {
                        "label" : "Store columns into a database",
                        "name" : "postgresql_1",
                        "type" : "postgresql/v1/insert",
                        "parameters" : {
                            "schema" : "public",
                            "table" : "CITY",
                            "rows" : [ {
                                "name" : "${loop_1.item['City']}",
                                "country" : "${loop_1.item['State']}"
                            } ],
                            "columns" : [ "name", "country" ]
                        },
                        "description" : "Store columns 'City' and 'State' into a PostgreSQL database under a table 'CITY'",
                        "metadata" : {
                            "ui" : {
                                "dynamicPropertyTypes" : {
                                    "columns[0]" : "STRING",
                                    "columns[1]" : "STRING"
                                }
                            }
                        }
                    } ],
                    "caseFalse" : [ {
                        "label" : "Log Warning",
                        "name" : "logEntryWarn1",
                        "parameters" : {
                            "text" : "Missing data: ${loop_1.item}"
                        },
                        "type" : "logger/v1/warn"
                    } ]
                }
            } ]
        }
    }, {
        "label" : "Query a database",
        "name" : "postgresql_2",
        "type" : "postgresql/v1/query",
        "description" : "Query a PostgreSQL database to count all rows from table 'CITY'",
        "parameters" : {
            "query" : "SELECT count(*) from CITY"
        },
        "metadata" : {
            "ui" : {
                "dynamicPropertyTypes" : { }
            }
        }
    }, {
        "label" : "Logger",
        "name" : "logger_1",
        "type" : "logger/v1/info",
        "parameters" : {
            "text" : "Total records: ${postgresql_2.[0].count}"
        },
        "metadata" : {
            "ui" : {
                "dynamicPropertyTypes" : { }
            }
        }
    } ]
}