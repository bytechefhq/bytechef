{
  "label": "CV Scanning",
  "description": "When somebody fills in our Google Forms, download the pdf from the question 3, summarize it and score the candidate on how well they match our requirements. Insert the first 2 questions, the pdf summary, and the score into a Google Sheets document. If the score equals 0, upload the pdf file into 'Rejected candidates' Google Drive, otherwise to 'Potential Candidates' Google Drive.",
  "inputs": [],
  "triggers": [
    {
      "label": "A Google Forms is filled",
      "name": "trigger_1",
      "type": "googleForms/v1/newResponse",
      "parameters": {
        "formId": "1r1K_4veQT2BMsapn9ZQ7pbrDSbPGXSISt32elk41dY8"
      },
      "metadata": {
        "ui": {
          "dynamicPropertyTypes": {}
        }
      }
    }
  ],
  "tasks": [
    {
      "label": "Download CV",
      "name": "googleDrive_1",
      "parameters": {
        "fileId": "${trigger_1.question_3.fileId}"
      },
      "type": "googleDrive/v1/downloadFile",
      "metadata": {
        "ui": {
          "dynamicPropertyTypes": {}
        }
      },
      "description": "Retrieves the CV file from Google Drive using the file ID from the form response."
    },
    {
      "label": "PDF Helper",
      "name": "pdfHelper_1",
      "parameters": {
        "file": "${googleDrive_1}"
      },
      "type": "pdfHelper/v1/extractText",
      "metadata": {},
      "description": "Extracts text from the downloaded CV file."
    },
    {
      "label": "Summarize CV",
      "name": "aiText_1",
      "parameters": {
        "temperature": 1,
        "text": "${pdfHelper_1}",
        "format": "STRUCTURED_SUMMARY",
        "model": "gpt-4"
      },
      "type": "aiText/v1/summarizeText",
      "metadata": {
        "ui": {
          "dynamicPropertyTypes": {}
        }
      },
      "description": "Use AI to summarize the extracted text."
    },
    {
      "label": "Score Candidate",
      "name": "openAi_1",
      "parameters": {
        "response": {
          "responseFormat": "JSON",
          "responseSchema": "{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"properties\":{\"score\":{\"type\":\"integer\",\"title\":\"score\"}},\"required\":[],\"type\":\"object\",\"title\":\"candidate\"}"
        },
        "n": 1,
        "temperature": 1,
        "topP": 1,
        "frequencyPenalty": 0,
        "presencePenalty": 0,
        "model": "gpt-4",
        "messages": [
          {
            "role": "USER",
            "content": "Read the following text from a candidate CV:${pdfHelper_1} and compare it against the following job description then score it:\n\n\"We are looking for a Senior Java Developer to join our team. If you are looking to give your career a real boost with a global leader in digital transformation, we are perfect choice. If you’d like to learn more about this position and project, apply now!\"\n\nResponsibilities\n- Being part of an Agile development team\n- Contributing to the success of our customer projects\n- Development of new product functionality, technical analysis, effort estimation\n- Design and implementation of new business requirements\n- Working in close cooperation with customer’s representatives\n- Leveraging your deep understanding of Java Enterprise Technology (including experience with open source proprietary technology\n\nRequirements\n- 5+ years of hands-on Java development experience\n- Strong Java EE and/or Spring knowledge\n- Good command of English both written and spoken\n- Good understanding of design patterns\n- Hands-on experience in Cloud technologies is an advantage\n- Dedication to high-quality software development through conventions, maintainability, and testing\n\nNice to have\n- Experience with Big Data technologies\n\n\nGive a score from 1-10 on how compatible this candidate is for the job. 1 means not a good fit, 10 means a perfect fit. If the candidate doesn't have at least 3 year of hands-on Java development experience please give it a score 0."
          }
        ]
      },
      "type": "openAi/v1/ask",
      "metadata": {
        "ui": {
          "dynamicPropertyTypes": {}
        }
      },
      "description": "Uses OpenAI to compare the CV against a job description and assigns a compatibility score."
    },
    {
      "label": "Record Results",
      "name": "googleSheets_1",
      "parameters": {
        "includeItemsFromAllDrives": false,
        "isTheFirstRowHeader": true,
        "spreadsheetId": "1RgKUE1FEL0M2lZZ3jJpe1Grlt1PWPgQ0Fda_0XrHJyg",
        "sheetName": "prijave",
        "valueInputOption": "RAW",
        "row": {
          "values": {
            "Name": "${trigger_1.question_1.answers[0]}",
            "Email": "${trigger_1.question_2.answers[0]}",
            "Summary": "${aiText_1}",
            "Score": "${openAi_1.score}"
          }
        }
      },
      "type": "googleSheets/v1/insertRow",
      "metadata": {
        "ui": {
          "dynamicPropertyTypes": {}
        }
      },
      "description": "Inserts the candidate's name, email, summary, and score into a Google Sheets document."
    },
    {
      "description": "Directs a stream based on true/false results of comparisons.",
      "label": "Condition",
      "name": "condition_1",
      "parameters": {
        "rawExpression": true,
        "caseFalse": [
          {
            "label": "Potential Candidates",
            "name": "googleDrive_3",
            "parameters": {
              "fileEntry": "${googleDrive_1}",
              "parentFolder": "1DmUfAS20QtQARjHXAptbJ3JBS5RvgAcL"
            },
            "type": "googleDrive/v1/uploadFile",
            "metadata": {
              "ui": {
                "dynamicPropertyTypes": {}
              }
            }
          }
        ],
        "caseTrue": [
          {
            "label": "Rejected Candidates",
            "name": "googleDrive_2",
            "parameters": {
              "fileEntry": "${googleDrive_1}",
              "parentFolder": "1tcVn1cpDpuIYAsQY2BCBZqS0kplwBq6V"
            },
            "type": "googleDrive/v1/uploadFile",
            "metadata": {
              "ui": {
                "dynamicPropertyTypes": {}
              }
            }
          }
        ],
        "expression": "${openAi_1.score}==0"
      },
      "type": "condition/v1",
      "metadata": {
        "ui": {
          "dynamicPropertyTypes": {}
        }
      }
    }
  ]
}