---
label: "Hello Script Demo"
inputs:
- name: "yourName"
  label: "Your Name"
  type: "string"
  required: true
tasks:
- name: "randomNumber"
  label: "Generate a random number"
  type: "randomHelper/v1/randomInt"
  parameters:
    startInclusive: 0
    endInclusive: 5000
- name: "script1"
  type: "script/v1/javascript"
  parameters:
    input:
      randomNum: "${randomNumber}"
      randomInput: "${yourName}"
    script: "function perform(input) {\n  print('My random number ' + input.randomNum);\n\
      \  print('My random input ' + input.randomInput);\n  print('My random input\
      \ x ' + input.randomInputX);\n\n  return 2 * input.randomNum;\n}\n"
- name: "printJavaScriptResult"
  label: "Print result from the JavaScript script"
  type: "logger/v1/info"
  parameters:
    text: "Result from script1: ${script1}"
- name: "script2"
  type: "script/v1/python"
  parameters:
    input:
      randomNum: "${randomNumber}"
      randomInput: "${yourName}"
    script: "def perform(input):\n  print('My random number ' + str(input.randomNum))\n\
      \  print('My random input ' + input.randomInput)\n  print('My random input x\
      \ ' + ('undefined' if hasattr(input, 'randomInputX') == False else input.randomInputX))\n\
      \n  return 2 * input.randomNum\n"
- name: "printPythonResult"
  label: "Print result from the Python script"
  type: "logger/v1/info"
  parameters:
    text: "Result from script2: ${script2}"
- name: "script3"
  type: "script/v1/r"
  parameters:
    input:
      randomNum: "${randomNumber}"
      randomInput: "${yourName}"
    script: "perform <- function(input) {\n  return (2 * input$randomNum)\n}\n"
- name: "printRResult"
  label: "Print result from the R script"
  type: "logger/v1/info"
  parameters:
    text: "Result from script3: ${script3}"
- name: "script4"
  type: "script/v1/ruby"
  parameters:
    input:
      randomNum: "${randomNumber}"
      randomInput: "${yourName}"
    script: "def perform(input)\n  return 2 * input.randomNum;\nend\n"
- name: "printRubyResult"
  label: "Print result from the Ruby script"
  type: "logger/v1/info"
  parameters:
    text: "Result from script4: ${script4}"
