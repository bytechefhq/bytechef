plugins {
    id "org.openapi.generator"
}

task generateOpenAPISpring(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    apiPackage = "com.bytechef.hermes.task.dispatcher.web.rest"
    configOptions = [
        "dateLibrary": "java8-localdatetime",
        "interfaceOnly": "true",
        "reactive": "true",
        "useTags": "true"
    ]
    generatorName = "spring"
    inputSpec = "$projectDir/openapi.yaml".toString()
    modelNameSuffix = "Model"
    modelPackage = "com.bytechef.hermes.task.dispatcher.web.rest.model"
    outputDir = "$projectDir/generated".toString()
}

sourceSets.main.java.srcDir "${projectDir}/generated/src/main/java"

task generateOpenAPITypeScriptFetch(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    configOptions = [
        "useTags": "true"
    ]
    generatorName = "typescript-fetch"
    inputSpec = "$projectDir/openapi.yaml".toString()
    outputDir = "$rootDir/client/src/_generated/data-access/task-dispatcher-definition".toString()
    typeMappings = [
        DateTime: "Date"
    ]
}

tasks.register('generateOpenAPI') {
    dependsOn tasks.generateOpenAPISpring, tasks.generateOpenAPITypeScriptFetch
}

dependencies {
    annotationProcessor libs.mapstruct.processor
    annotationProcessor libs.mapstruct.spring.extensions

    api project(":server:libs:hermes:hermes-task-dispatcher:hermes-task-dispatcher-api")

    implementation libs.jackson.databind.nullable
    implementation "jakarta.annotation:jakarta.annotation-api"
    implementation "javax.validation:validation-api"
    implementation libs.mapstruct
    implementation libs.mapstruct.spring.annotations
    implementation "org.slf4j:slf4j-api"
    implementation "org.springframework:spring-webflux"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation libs.swagger.annotations
    implementation project(":server:libs:core:autoconfigure:autoconfigure-annotations")

    testImplementation "org.springframework.boot:spring-boot-starter-webflux"
    testImplementation project(":server:libs:test-support")
}
