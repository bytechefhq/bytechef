plugins {
    alias(libs.plugins.org.openapi.generator)
}

task generateOpenAPISpring(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    apiPackage = "com.bytechef.hermes.test.web.rest"
    configOptions = [
        "dateLibrary": "java8-localdatetime",
        "interfaceOnly": "true",
        "useSpringBoot3": "true"
    ]
    generatorName = "spring"
    inputSpec = "$projectDir/openapi.yaml".toString()
    modelNameSuffix = "Model"
    modelPackage = "com.bytechef.hermes.test.web.rest.model"
    outputDir = "$projectDir/generated".toString()
    schemaMappings = [
        Page: "org.springframework.data.domain.Page",
    ]
}

task generateOpenAPITypeScriptFetch(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    generatorName = "typescript-fetch"
    inputSpec = "$projectDir/openapi.yaml".toString()
    modelNameSuffix = "Model"
    outputDir = "$rootDir/client/src/middleware/core/workflow/test".toString()
    typeMappings = [
        DateTime: "Date"
    ]
}

tasks.register("generateOpenAPI") {
    dependsOn tasks.generateOpenAPISpring, tasks.generateOpenAPITypeScriptFetch
}

sourceSets.main.java.srcDir "${projectDir}/generated/src/main/java"

dependencies {
    annotationProcessor libs.org.mapstruct.mapstruct.processor
    annotationProcessor libs.org.mapstruct.extensions.spring.mapstruct.spring.extensions

    api "org.springframework.data:spring-data-commons"
    api project(":server:libs:hermes:hermes-test:hermes-test-api")
    api project(":server:libs:hermes:hermes-configuration:hermes-configuration-rest:hermes-configuration-rest-api")

    compileOnly "jakarta.servlet:jakarta.servlet-api:6.0.0"

    implementation libs.io.swagger.core.v3.swagger.annotations
    implementation "jakarta.annotation:jakarta.annotation-api"
    implementation "jakarta.validation:jakarta.validation-api"
    implementation libs.org.openapitools.jackson.databind.nullable
    implementation libs.org.mapstruct
    implementation libs.org.mapstruct.extensions.spring.mapstruct.spring.annotations
    implementation "org.springframework:spring-context"
    implementation "org.springframework:spring-web"
    implementation project(":server:libs:core:commons:commons-util")

    testImplementation "org.springframework:spring-webflux"
    testImplementation "org.springframework.boot:spring-boot-starter-web"
}
