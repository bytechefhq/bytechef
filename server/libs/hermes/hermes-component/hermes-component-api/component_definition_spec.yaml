info:
  title: Component Definition Specification
  description: Component Definition structs.
  version: v1
schemas:
  ActionDefinition:
    description: An action is a portion of reusable code that accomplish a specific task. When building a workflow, each action is represented as a task inside the workflow. The task 'type' property is defined as [component name]/v[component version]/[action name]. Action properties are used to set properties of the task inside the workflow.
    type: object
    properties:
      display:
        $ref: '../../hermes-definition-api/definition_spec.yaml#/schemas/Display'
      exampleOutput:
        description: The example of the action's output.
        type: object
#      metadata:
#        description: The additional data that can be used during processing.
#        type: object
#        additionalProperties:
#          type: object
      name:
        description: The action name.
        type: string
      output:
        description: The output schema of an execution result.
        type: array
        items:
          $ref: '../../hermes-definition-api/definition_spec.yaml#/schemas/Property'
      properties:
        description: The list of action properties.
        type: array
        items:
          $ref: '../../hermes-definition-api/definition_spec.yaml#/schemas/Property'
      performFunction:
        description: Contains information required for a connection's authorization.
        type: object
  Authorization:
    description: Contains information required for a connection's authorization.
    type: object
    properties:
      display:
        $ref: '../../hermes-definition-api/definition_spec.yaml#/schemas/Display'
      name:
        description: The authorization name.
        type: string
      properties:
        description: Properties of the connection.
        type: array
        items:
          $ref: '../../hermes-definition-api/definition_spec.yaml#/schemas/ValueProperty'
      type:
        $ref: '#/schemas/AuthorizationType'
  AuthorizationType:
    description: Authorization type.
    type: string
    enum:
      - API_KEY
      - BASIC_AUTH
      - BEARER_TOKEN
      - CUSTOM
      - DIGEST_AUTH
      - OAUTH2_AUTHORIZATION_CODE
      - OAUTH2_CLIENT_CREDENTIALS
      - OAUTH2_IMPLICIT_CODE
      - OAUTH2_RESOURCE_OWNER_PASSWORD
  ComponentDefinition:
    description: A component contains a set of reusable code(actions) that accomplish specific tasks, triggers and connections if there is a need for a connection to an outside service.
    type: object
    properties:
      actions:
        description: The list of all available actions the component can perform.
        type: array
        items:
          $ref: '#/schemas/ActionDefinition'
      connection:
        $ref: '#/schemas/ConnectionDefinition'
      display:
        $ref: '../../hermes-definition-api/definition_spec.yaml#/schemas/Display'
#      metadata:
#        description: The additional data that can be used during processing.
#        type: object
#        additionalProperties:
#          type: object
      name:
        description: The component name.
        type: string
      resources:
        $ref: '../../hermes-definition-api/definition_spec.yaml#/schemas/Resources'
      version:
        description: The component version.
        type: number
        format: double
  ConnectionDefinition:
    description: Definition of a connection to an outside service.
    type: object
    properties:
      authorizations:
        type: array
        items:
          $ref: '#/schemas/Authorization'
      componentName:
        description: The name of a component this connection can be used for.
        type: string
#      componentVersion:
#        description: The version of a component this connection can be used for.
#        type: string
      display:
        $ref: '../../hermes-definition-api/definition_spec.yaml#/schemas/Display'
      properties:
        description: The properties of the connection.
        type: array
        items:
          $ref: '../../hermes-definition-api/definition_spec.yaml#/schemas/ValueProperty'
      resources:
        $ref: '../../hermes-definition-api/definition_spec.yaml#/schemas/Resources'
      version:
        description: The connection version.
        type: number
        format: double
  JdbcComponentDefinition:
    description: A definition of component used for building JDBC based components. The definition is transformed into fully component definition.
    type: object
    properties:
      databaseJdbcName:
        description: The connection name.
        type: string
      jdbcDriverClassName:
        description: Database type name used when defining a jdbc url.
        type: string
      display:
        $ref: '../../hermes-definition-api/definition_spec.yaml#/schemas/Display'
      name:
        description: The connection name.
        type: string
      resources:
        $ref: '../../hermes-definition-api/definition_spec.yaml#/schemas/Resources'
      version:
        type: number
        format: double
