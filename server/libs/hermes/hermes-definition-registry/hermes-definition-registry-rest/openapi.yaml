openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v1
servers:
  - url: http://localhost:5173/api
paths:
  /component-definitions:
    get:
      description: Get all component definitions.
      summary: Get all component definitions.
      tags:
        - component-definitions
      operationId: getComponentDefinitions
      parameters:
        - name: connectionDefinitions
          description: Use for filtering components which define connection definitions.
          in: query
          required: false
          schema:
            type: boolean
        - name: connectionInstances
          description: Use for filtering components which have connection instances created.
          in: query
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComponentDefinitionBasic'
  /component-definitions/{name}:
    get:
      description: Get all component definition versions of a component definition.
      summary: Get all component definition versions of a component definition.
      tags:
        - component-definitions
      operationId: getComponentDefinitionVersions
      parameters:
        - name: name
          description: The name of the component to get.
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComponentDefinitionBasic'
  /component-definitions/{name}/{version}:
    get:
      description: Get a component definition.
      summary: Get a component definition.
      tags:
        - component-definitions
      operationId: getComponentDefinition
      parameters:
        - name: name
          description: The name of the component to get.
          required: true
          in: path
          schema:
            type: string
        - name: version
          description: The version of the component to get.
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentDefinitionWithBasicActions'
  /component-definitions/{componentName}/{componentVersion}/actions/{actionName}:
    get:
      description: Get an action of a component definition.
      summary: Get an action of a component definition.
      tags:
        - action-definitions
      operationId: getActionDefinition
      parameters:
        - name: componentName
          description: The name of the component.
          required: true
          in: path
          schema:
            type: string
        - name: componentVersion
          description: The version of the component to get.
          required: true
          in: path
          schema:
            type: integer
        - name: actionName
          description: The name of the action to get.
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionDefinition'
  /connection-definitions:
    get:
      description: Get all connection definitions.
      summary: Get all connection definitions.
      tags:
        - connection-definitions
      operationId: getConnectionDefinitions
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectionDefinitionBasic'
  /connection-definitions/{componentName}:
    get:
      description: Get all connection definitions for a component.
      summary: Get all connection definitions for a component.
      tags:
        - connection-definitions
      operationId: getComponentConnectionDefinitions
      parameters:
        - name: componentName
          description: The name of the component.
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectionDefinitionBasic'
  /connection-definitions/{componentName}/{componentVersion}:
    get:
      description: Get a connection definition of a component definition.
      summary: Get a connection definition of a component definition.
      tags:
        - connection-definitions
      operationId: getConnectionDefinition
      parameters:
        - name: componentName
          description: The name of the component.
          required: true
          in: path
          schema:
            type: string
        - name: componentVersion
          description: The version of the component to get.
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionDefinition'
  /task-dispatcher-definitions:
    get:
      description: Get all task dispatcher definitions.
      summary: Get all task dispatcher definitions.
      tags:
        - task-dispatcher-definitions
      operationId: getTaskDispatcherDefinitions
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskDispatcherDefinition'
components:
  schemas:
    ActionDefinition:
      $ref: '../../hermes-component/hermes-component-api/component_definition_spec.yaml#/schemas/ActionDefinition'
    ActionDefinitionBasic:
      description: An action is a portion of reusable code that accomplish a specific task. When building a workflow, each action is represented as a task inside the workflow. The task 'type' property is defined as [component name]/v[component version]/[action name]. Action properties are used to set properties of the task inside the workflow.
      type: object
      required:
        - name
        - display
      properties:
        name:
          description: The action name.
          type: string
        display:
          $ref: '../../hermes-definition-api/definition_spec.yaml#/schemas/Display'
    ComponentDefinitionBasic:
      description: A component contains a set of reusable code(actions) that accomplish specific tasks, triggers and connections if there is a need for a connection to an outside service.
      type: object
      required:
        - display
        - name
        - version
      properties:
        display:
          $ref: '../../hermes-definition-api/definition_spec.yaml#/schemas/Display'
        name:
          description: The component name.
          type: string
        version:
          description: The component version.
          type: integer
    ComponentDefinitionWithBasicActions:
      description: A component contains a set of reusable code(actions) that accomplish specific tasks, triggers(TODO) and connections if there is a need for a connection to an outside service.
      type: object
      required:
        - actions
        - display
        - name
        - resources
        - version
      properties:
        actions:
          description: The list of all available actions the component can perform.
          type: array
          items:
            $ref: '#/components/schemas/ActionDefinitionBasic'
        connection:
          $ref: '../../hermes-component/hermes-component-api/component_definition_spec.yaml#/schemas/ConnectionDefinition'
        display:
          $ref: '../../hermes-definition-api/definition_spec.yaml#/schemas/Display'
        name:
          description: The component name.
          type: string
        resources:
          $ref: '../../hermes-definition-api/definition_spec.yaml#/schemas/Resources'
        version:
          description: The component version.
          type: integer
    ConnectionDefinition:
      $ref: '../../hermes-component/hermes-component-api/component_definition_spec.yaml#/schemas/ConnectionDefinition'
    ConnectionDefinitionBasic:
      description: Definition of a connection to an outside service.
      type: object
      required:
        - componentName
        - display
        - version
      properties:
        componentName:
          description: The name of a component this connection can be used for.
          type: string
        display:
          $ref: '../../hermes-definition-api/definition_spec.yaml#/schemas/Display'
        version:
          description: The component version.
          type: integer
    TaskDispatcherDefinition:
      $ref: '../../hermes-task-dispatcher/hermes-task-dispatcher-api/task_dispatcher_definition_spec.yaml#/schemas/TaskDispatcherDefinition'
