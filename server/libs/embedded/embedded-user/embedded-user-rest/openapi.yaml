---
openapi: "3.0.1"
info:
  title: "The Embedded User API"
  version: "1"
servers:
- url: "/api/embedded"
tags:
  - name: "api-key"
    description: "The Embedded API Key API"
  - name: "signing-key"
    description: "The Embedded Signing Key API"
paths:
  /api-keys:
    get:
      description: "Get API keys."
      summary: "Get API keys"
      tags:
        - "api-key"
      operationId: "getApiKeys"
      responses:
        "200":
          description: "A list of API keys."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ApiKey"
    post:
      description: "Create a new API key."
      summary: "Create a new API key"
      tags:
        - "api-key"
      operationId: "createApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiKey"
        required: true
      responses:
        "200":
          description: "The secret API key object."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  secretKey:
                    description: "The secret API key."
                    type: "string"
  /api-keys/{id}:
    delete:
      description: "Delete an API key."
      summary: "Delete an API key"
      tags:
        - "api-key"
      operationId: "deleteApiKey"
      parameters:
        - name: "id"
          description: "The id of an API key."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "Successful operation."
    get:
      description: "Get an API key by id."
      summary: "Get an API key by id"
      tags:
        - "api-key"
      operationId: "getApiKey"
      parameters:
        - name: "id"
          description: "The id of an API key."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "The API key object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKey"
    put:
      description: "Update an existing API key."
      summary: "Update an existing API key"
      tags:
        - "api-key"
      operationId: "updateApiKey"
      parameters:
        - name: "id"
          description: "The id of an API key."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiKey"
        required: true
      responses:
        "200":
          description: "The updated API key object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKey"
  /signing-keys:
    get:
      description: "Get Signing keys."
      summary: "Get Signing keys"
      tags:
        - "signing-key"
      operationId: "getSigningKeys"
      responses:
        "200":
          description: "A list of Signing keys."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/SigningKey"
    post:
      description: "Create a new Signing key."
      summary: "Create a new Signing key"
      tags:
        - "signing-key"
      operationId: "createSigningKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SigningKey"
        required: true
      responses:
        "200":
          description: "The Signing key object."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  privateKey:
                    description: "The private key."
                    type: "string"
  /signing-keys/{id}:
    delete:
      description: "Delete an Signing key."
      summary: "Delete an Signing key"
      tags:
        - "signing-key"
      operationId: "deleteSigningKey"
      parameters:
        - name: "id"
          description: "The id of an Signing key."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "Successful operation."
    get:
      description: "Get an Signing key by id."
      summary: "Get an Signing key by id"
      tags:
        - "signing-key"
      operationId: "getSigningKey"
      parameters:
        - name: "id"
          description: "The id of an Signing key."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "The Signing key object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SigningKey"
    put:
      description: "Update an existing Signing key."
      summary: "Update an existing Signing key"
      tags:
        - "signing-key"
      operationId: "updateSigningKey"
      parameters:
        - name: "id"
          description: "The id of an Signing key."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SigningKey"
        required: true
      responses:
        "200":
          description: "The updated Signing key object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SigningKey"
components:
  schemas:
    ApiKey:
      description: "Contains generated key required for calling API."
      type: "object"
      required:
        - name
        - secretKey
      properties:
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        environment:
          $ref: '#/components/schemas/Environment'
        id:
          description: "The id of an API key."
          type: "integer"
          format: "int64"
          readOnly: true
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        lastUsedDate:
          description: "The last used date."
          type: "string"
          format: "date-time"
          readOnly: true
        name:
          description: "The name of an API key."
          type: "string"
        secretKey:
          description: "The preview of secret API key."
          type: "string"
          readOnly: true
    SigningKey:
      description: "Contains generated public key used for signing JWT tokens."
      type: "object"
      required:
        - name
      properties:
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        environment:
          $ref: '#/components/schemas/Environment'
        id:
          description: "The id of a public key."
          type: "integer"
          format: "int64"
          readOnly: true
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        lastUsedDate:
          description: "The last used date."
          type: "string"
          format: "date-time"
          readOnly: true
        name:
          description: "The name of a public key."
          type: "string"
    Environment:
      description: "The environment of a project."
      type: "string"
      enum:
        - "TEST"
        - "PRODUCTION"
