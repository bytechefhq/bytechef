---
openapi: "3.0.1"
info:
  title: "Automation Project API"
  version: "1"
servers:
- url: "http://localhost:5173/api/automation"
paths:
  /connection-tags:
    get:
        description: "Get connection tags."
        summary: "Get connection tags."
        tags:
            - "connection-tags"
        operationId: "getConnectionTags"
        responses:
            "200":
                description: "A list of connection tags."
                content:
                    application/json:
                        schema:
                            description: "The response object that contains the array of tags."
                            type: "array"
                            items:
                                $ref: "../../../core/tag/tag-rest/tag-rest-impl/openapi.yaml#/components/schemas/Tag"
  /connections:
    get:
        description: "Get connections."
        summary: "Get connections."
        tags:
            - "connections"
        operationId: "getConnections"
        parameters:
            - name: "componentNames"
              description: "The list of component names used for filtering connections."
              in: "query"
              required: false
              schema:
                  type: "array"
                  items:
                      type: "string"
            - name: "tagIds"
              description: "The list of tag ids of used for filtering connections."
              in: "query"
              required: false
              schema:
                  type: "array"
                  items:
                      type: "integer"
                      format: "int64"
        responses:
            "200":
                description: "A list of connections."
                content:
                    application/json:
                        schema:
                            type: "array"
                            items:
                                $ref: "#/components/schemas/Connection"
    post:
        description: "Create a new connection."
        summary: "Create a new connection."
        tags:
            - "connections"
        operationId: "createConnection"
        requestBody:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Connection"
            required: true
        responses:
            "200":
                description: "The connection object."
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Connection"
  /connections/oauth2:
    post:
        description: "Retrieves oauth2 authorization parameters."
        summary: "Retrieves oauth2 authorization parameters."
        tags:
            - "connections"
        operationId: "getConnectionOAuth2AuthorizationParameters"
        requestBody:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Connection"
            required: true
        responses:
            "200":
                description: "The object with oauth2 authorization parameters."
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/OAuth2AuthorizationParameters"
  /connections/{id}:
    delete:
        description: "Delete a connection."
        summary: "Delete a connection."
        tags:
            - "connections"
        operationId: "deleteConnection"
        parameters:
            - name: "id"
              description: "The id of a connection."
              in: "path"
              required: true
              schema:
                  type: "integer"
                  format: "int64"
        responses:
            "200":
                description: "Successful operation."
    get:
        description: "Get a connection by id."
        summary: "Get a connection by id."
        tags:
            - "connections"
        operationId: "getConnection"
        parameters:
            - name: "id"
              description: "The id of a connection."
              in: "path"
              required: true
              schema:
                  type: "integer"
                  format: "int64"
        responses:
            "200":
                description: "The connection object."
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Connection"
    put:
        description: "Update an existing connection."
        summary: "Update an existing connection."
        tags:
            - "connections"
        operationId: "updateConnection"
        parameters:
            - name: "id"
              description: "The id of a connection."
              in: "path"
              required: true
              schema:
                  type: "integer"
                  format: "int64"
        requestBody:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Connection"
            required: true
        responses:
            "200":
                description: "The updated connection object."
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Connection"
  /connections/{id}/tags:
    put:
        description: "Updates tags of an existing connection."
        summary: "Updates tags of an existing connection."
        tags:
            - "connections"
        operationId: "updateConnectionTags"
        parameters:
            - name: "id"
              description: "The id of the connection."
              in: "path"
              required: true
              schema:
                  type: "integer"
                  format: "int64"
        requestBody:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/UpdateTagsRequest"
            required: true
        responses:
            "200":
                description: "Successful operation."
  /project-categories:
    get:
      description: "Get categories."
      summary: "Get categories."
      tags:
      - "project-categories"
      operationId: "getProjectCategories"
      responses:
        "200":
          description: "A list of categories."
          content:
            application/json:
              schema:
                description: "The response object that contains the array of categories."
                type: "array"
                items:
                  $ref: "../../../core/category/category-rest/category-rest-impl/openapi.yaml#/components/schemas/Category"
  /project-executions:
    get:
      description: "Get project executions."
      summary: "Get project executions."
      tags:
      - "project-executions"
      operationId: "getProjectExecutions"
      parameters:
      - name: "jobStatus"
        description: "The status of an executed job"
        in: "query"
        required: false
        schema:
          type: "string"
          enum:
          - "CREATED"
          - "STARTED"
          - "STOPPED"
          - "FAILED"
          - "COMPLETED"
      - name: "jobStartDate"
        description: "The start date of a job."
        in: "query"
        required: false
        schema:
          type: "string"
          format: "date-time"
      - name: "jobEndDate"
        description: "The end date of a job."
        in: "query"
        required: false
        schema:
          type: "string"
          format: "date-time"
      - name: "projectId"
        description: "The id of a project."
        in: "query"
        required: false
        schema:
          type: "integer"
          format: "int64"
      - name: "projectInstanceId"
        description: "The id of a project instance."
        in: "query"
        required: false
        schema:
          type: "integer"
          format: "int64"
      - name: "workflowId"
        description: "The id of a workflow."
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "pageNumber"
        description: "The number of the page to return."
        in: "query"
        required: false
        schema:
          type: "integer"
          format: "int32"
          default: 0
      responses:
        "200":
          description: "The page of project executions."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Page"
  /project-executions/{id}:
    get:
      description: "Get project execution by id."
      summary: "Get project executions by id."
      tags:
      - "project-executions"
      operationId: "getProjectExecution"
      parameters:
      - name: "id"
        description: "The id of a project execution."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "The of project execution object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectExecution"
  /project-instance-tags:
    get:
      description: "Get project instance tags."
      summary: "Get project instance tags."
      tags:
      - "project-instance-tags"
      operationId: "getProjectInstanceTags"
      responses:
        "200":
          description: "A list of project tags."
          content:
            application/json:
              schema:
                description: "The response object that contains the array of tags."
                type: "array"
                items:
                  $ref: "../../../core/tag/tag-rest/tag-rest-impl/openapi.yaml#/components/schemas/Tag"
  /project-instances/{id}:
    delete:
      description: "Delete a project instance."
      summary: "Delete a project instance."
      tags:
      - "project-instances"
      operationId: "deleteProjectInstance"
      parameters:
      - name: "id"
        description: "The id of a project instance."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "Successful operation."
    get:
      description: "Get a project instance by id."
      summary: "Get a project instance by id."
      tags:
      - "project-instances"
      operationId: "getProjectInstance"
      parameters:
      - name: "id"
        description: "The id of a project instance."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "The project object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectInstance"
    put:
      description: "Update an existing project instance."
      summary: "Update an existing project instance."
      tags:
      - "project-instances"
      operationId: "updateProjectInstance"
      parameters:
      - name: "id"
        description: "The id of a project instance."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectInstance"
        required: true
      responses:
        "200":
          description: "The updated project instnce object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectInstance"
  /project-instances/{id}/enable/{enable}:
    post:
      description: "Enable/disable a project instance."
      summary: "Enable/disable a project instance."
      tags:
      - "project-instances"
      operationId: "enableProjectInstance"
      parameters:
      - name: "id"
        description: "The id of a project instance."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "enable"
        description: "Enable/disable the project instance."
        in: "path"
        required: true
        schema:
          type: "boolean"
      responses:
        "200":
          description: "Successful operation."
  /project-instances/{id}/workflows/{workflowId}/enable/{enable}:
    post:
      description: "Enable/disable a workflow of a project instance."
      summary: "Enable/disable a workflow of a project instance."
      tags:
      - "project-instances"
      operationId: "enableProjectInstanceWorkflow"
      parameters:
      - name: "id"
        description: "The id of a project instance."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "workflowId"
        description: "The id of a project workflow."
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "enable"
        description: "Enable/disable the workflow of a project instance."
        in: "path"
        required: true
        schema:
          type: "boolean"
      responses:
        "200":
          description: "Successful operation."
  /project-instances/{id}/jobs:
    post:
      description: "Create a request for running a new job."
      summary: "Create a request for running a new job."
      tags:
      - "project-instances"
      operationId: "createProjectInstanceJob"
      parameters:
      - name: "id"
        description: "The id of a project instance."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                workflowId:
                  description: "The id of the workflow to execute."
                  type: "string"
        required: true
      responses:
        "200":
          description: "The id of a created job."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  jobId:
                    description: "The id of an executed job."
                    type: "integer"
                    format: "int64"
  /project-instances/{id}/tags:
    put:
      description: "Updates tags of an existing project instance."
      summary: "Updates tags of an existing project instance."
      tags:
      - "project-instances"
      operationId: "updateProjectInstanceTags"
      parameters:
      - name: "id"
        description: "The id of a project instance."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTagsRequest"
        required: true
      responses:
        "200":
          description: "Successful operation."
  /project-instances:
    get:
      description: "Get project instances."
      summary: "Get project instances."
      tags:
      - "project-instances"
      operationId: "getProjectInstances"
      parameters:
      - name: "projectIds"
        description: "The list of the project ids used for filtering project instances."
        in: "query"
        required: false
        schema:
          type: "array"
          items:
            type: "integer"
            format: "int64"
      - name: "tagIds"
        description: "The list of tag ids of used for filtering project instances."
        in: "query"
        required: false
        schema:
          type: "array"
          items:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "A list of project instances."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ProjectInstance"
    post:
      description: "Create a new project instance."
      summary: "Create a new project instance."
      tags:
      - "project-instances"
      operationId: "createProjectInstance"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectInstance"
        required: true
      responses:
        "200":
          description: "The project instance object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectInstance"
  /project-tags:
    get:
      description: "Get project tags."
      summary: "Get project tags."
      tags:
      - "project-tags"
      operationId: "getProjectTags"
      responses:
        "200":
          description: "A list of project tags."
          content:
            application/json:
              schema:
                description: "The response object that contains the array of tags."
                type: "array"
                items:
                  $ref: "../../../core/tag/tag-rest/tag-rest-impl/openapi.yaml#/components/schemas/Tag"
  /projects:
    get:
      description: "Get projects."
      summary: "Get projects."
      tags:
      - "projects"
      operationId: "getProjects"
      parameters:
      - name: "categoryIds"
        description: "The list of the category ids used for filtering projects."
        in: "query"
        required: false
        schema:
          type: "array"
          items:
            type: "integer"
            format: "int64"
      - name: "projectInstances"
        description: "Use for filtering projects for which project instances exist."
        in: "query"
        required: false
        schema:
          type: "boolean"
      - name: "tagIds"
        description: "The list of tag ids of used for filtering projects."
        in: "query"
        required: false
        schema:
          type: "array"
          items:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "A list of projects."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Project"
    post:
      description: "Create a new project."
      summary: "Create a new project."
      tags:
      - "projects"
      operationId: "createProject"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
        required: true
      responses:
        "200":
          description: "The project object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
  /projects/{id}:
    delete:
      description: "Delete a project."
      summary: "Delete a project."
      tags:
      - "projects"
      operationId: "deleteProject"
      parameters:
      - name: "id"
        description: "The id of a project."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "Successful operation."
    get:
      description: "Get a project by id."
      summary: "Get a project by id."
      tags:
      - "projects"
      operationId: "getProject"
      parameters:
      - name: "id"
        description: "The id of a project."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "The project object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
    put:
      description: "Update an existing project."
      summary: "Update an existing project."
      tags:
      - "projects"
      operationId: "updateProject"
      parameters:
      - name: "id"
        description: "The id of a project."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
        required: true
      responses:
        "200":
          description: "The updated project object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
  /projects/{id}/duplicate:
    post:
      description: "Duplicates existing project."
      summary: "Duplicates existing project."
      tags:
      - "projects"
      operationId: "duplicateProject"
      parameters:
      - name: "id"
        description: "The id of a project."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "The duplicated project object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
  /projects/{id}/workflows:
    get:
      description: "Get workflows for particular project."
      summary: "Get workflows for particular project."
      tags:
      - "projects"
      operationId: "getProjectWorkflows"
      parameters:
      - name: "id"
        description: "The id of a project."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "The updated project object."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "../../../../libs/hermes/hermes-workflow/hermes-workflow-rest/hermes-workflow-rest-impl/openapi.yaml#/components/schemas/Workflow"
    post:
      description: "Create new workflow and adds it to an existing project."
      summary: "Create new workflow and adds it to an existing project."
      tags:
      - "projects"
      operationId: "createProjectWorkflow"
      parameters:
      - name: "id"
        description: "The id of a project."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              required:
              - "label"
              properties:
                label:
                  description: "The descriptive name for a workflow."
                  type: "string"
                description:
                  description: "The workflow description."
                  type: "string"
                definition:
                  description: "The workflow definition."
                  type: "string"
        required: true
      responses:
        "200":
          description: "The updated project object."
          content:
            application/json:
              schema:
                $ref: "../../../../libs/hermes/hermes-workflow/hermes-workflow-rest/hermes-workflow-rest-impl/openapi.yaml#/components/schemas/Workflow"
  /projects/{id}/tags:
    put:
      description: "Updates tags of an existing project."
      summary: "Updates tags of an existing project."
      tags:
      - "projects"
      operationId: "updateProjectTags"
      parameters:
      - name: "id"
        description: "The id of a project."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTagsRequest"
        required: true
      responses:
        "200":
          description: "Successful operation."
components:
  schemas:
    Connection:
      description: "Contains all required information to open a connection to a service\
    \ defined by componentName parameter."
      type: "object"
      required:
          - "name"
          - "componentName"
          - "componentVersion"
          - "parameters"
      properties:
          active:
              description: "If a connection is used in any of active workflows."
              type: "boolean"
              readOnly: true
          authorizationName:
              description: "The name of an authorization used by this connection. Used\
        \ for HTTP based services."
              type: "string"
          componentName:
              description: "The name of a component that uses this connection."
              type: "string"
          connectionVersion:
              description: "The version of a component that uses this connection."
              type: "integer"
          createdBy:
              description: "The created by."
              type: "string"
              readOnly: true
          createdDate:
              description: "The created date."
              type: "string"
              format: "date-time"
              readOnly: true
          name:
              description: "The name of a connection."
              type: "string"
          id:
              description: "The id of a connection."
              type: "integer"
              format: "int64"
              readOnly: true
          lastModifiedBy:
              description: "The last modified by."
              type: "string"
              readOnly: true
          lastModifiedDate:
              description: "The last modified date."
              type: "string"
              format: "date-time"
              readOnly: true
          parameters:
              description: "The parameters of a connection."
              type: "object"
              additionalProperties:
                  type: "object"
              writeOnly: true
          tags:
              type: "array"
              items:
                  $ref: "../../../core/tag/tag-rest/tag-rest-impl/openapi.yaml#/components/schemas/Tag"
          __version:
              type: "integer"
              format: "int32"
    JobBasic:
      description: "Represents an execution of a workflow."
      type: "object"
      required:
      - "priority"
      - "status"
      properties:
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        endDate:
          description: "The time execution entered end status COMPLETED, STOPPED,\
            \ FAILED"
          type: "string"
          format: "date-time"
        id:
          description: "Id of the job."
          type: "string"
          readOnly: true
        label:
          description: "The job's human-readable name."
          type: "string"
          readOnly: true
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        startDate:
          description: "The time of when the job began."
          type: "string"
          format: "date-time"
          readOnly: true
        status:
          description: "The job's status."
          type: "string"
          enum:
          - "CREATED"
          - "STARTED"
          - "STOPPED"
          - "FAILED"
          - "COMPLETED"
          readOnly: true
    OAuth2AuthorizationParameters:
        properties:
            authorizationUrl:
                type: "string"
            clientId:
                type: "string"
            scopes:
                type: "array"
                items:
                    type: "string"
    Page:
      description: "A sublist of a list of objects. It allows gain information about\
        \ the position of it in the containing entire list."
      type: "object"
      properties:
        number:
          description: "The current page."
          type: "integer"
        size:
          description: "The size of the page."
          type: "integer"
        numberOfElements:
          description: "The number of elements."
          type: "integer"
        totalPages:
          description: "The total number of pages."
          type: "integer"
        totalElements:
          description: "The total number of elements."
          type: "integer"
        content:
          description: "The list of elements."
          type: "array"
          items:
            type: "object"
    Project:
      description: "A group of workflows that make one logical project."
      type: "object"
      required:
      - "name"
      properties:
        category:
          $ref: "../../../core/category/category-rest/category-rest-impl/openapi.yaml#/components/schemas/Category"
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        description:
          description: "The description of a project."
          type: "string"
        id:
          description: "The id of a project."
          type: "integer"
          format: "int64"
          readOnly: true
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        name:
          description: "The name of a project."
          type: "string"
        publishedDate:
          description: "The published date."
          type: "string"
          format: "date-time"
        projectVersion:
          description: "The version of a project."
          type: "integer"
        status:
          description: "The status of a project."
          type: "string"
          enum:
          - "PUBLISHED"
          - "UNPUBLISHED"
        tags:
          type: "array"
          items:
            $ref: "../../../core/tag/tag-rest/tag-rest-impl/openapi.yaml#/components/schemas/Tag"
        workflowIds:
          description: "The workflow ids belonging to this project."
          type: "array"
          items:
            type: "string"
            readOnly: true
        __version:
          type: "integer"
    ProjectBasic:
      description: "A group of workflows that make one logical project."
      type: "object"
      required:
      - "name"
      properties:
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        description:
          description: "The description of a project."
          type: "string"
        id:
          description: "The id of a project."
          type: "integer"
          format: "int64"
          readOnly: true
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        name:
          description: "The name of a project."
          type: "string"
        publishedDate:
          description: "The published date."
          type: "string"
          format: "date-time"
        projectVersion:
          description: "The version of a project."
          type: "integer"
        status:
          description: "The status of a project."
          type: "string"
          enum:
          - "PUBLISHED"
          - "UNPUBLISHED"
    ProjectExecution:
      description: "Contains information about execution of one of project workflows."
      type: "object"
      properties:
        id:
          description: "The id of a project execution."
          type: "integer"
          format: "int64"
          readOnly: true
        instance:
          $ref: "#/components/schemas/ProjectInstance"
        job:
          $ref: "../../../../libs/hermes/hermes-workflow/hermes-workflow-rest/hermes-workflow-rest-impl/openapi.yaml#/components/schemas/Job"
        project:
          $ref: "#/components/schemas/Project"
        taskExecutions:
          type: "array"
          items:
            $ref: "../../../../libs/hermes/hermes-workflow/hermes-workflow-rest/hermes-workflow-rest-impl/openapi.yaml#/components/schemas/TaskExecution"
        workflow:
          $ref: "../../../../libs/hermes/hermes-workflow/hermes-workflow-rest/hermes-workflow-rest-impl/openapi.yaml#/components/schemas/Workflow"
    ProjectExecutionBasic:
      description: "Contains information about execution of one of project workflows."
      type: "object"
      properties:
        id:
          description: "The id of a project execution."
          type: "integer"
          format: "int64"
          readOnly: true
        instance:
          $ref: "#/components/schemas/ProjectInstanceBasic"
        job:
          $ref: "#/components/schemas/JobBasic"
        project:
          $ref: "#/components/schemas/ProjectBasic"
        workflow:
          $ref: "#/components/schemas/WorkflowBasic"
    ProjectInstance:
      description: "Contains configurations and connections required for the execution\
        \ of project workflows."
      type: "object"
      required:
      - "name"
      properties:
        description:
          description: "The description of a project instance."
          type: "string"
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        id:
          description: "The id of a project instance."
          type: "integer"
          format: "int64"
          readOnly: true
        lastExecutionDate:
          description: "The last execution date."
          type: "string"
          format: "date-time"
          readOnly: true
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        name:
          description: "The name of a project instance."
          type: "string"
        project:
          $ref: "#/components/schemas/ProjectBasic"
        projectId:
          description: "Th id of a project."
          type: "integer"
          format: "int64"
          writeOnly: true
        projectInstanceWorkflows:
          type: "array"
          items:
            $ref: "#/components/schemas/ProjectInstanceWorkflow"
        status:
          description: "The status of a project instance."
          type: "string"
          enum:
          - "DISABLED"
          - "ENABLED"
        tags:
          type: "array"
          items:
            $ref: "../../../core/tag/tag-rest/tag-rest-impl/openapi.yaml#/components/schemas/Tag"
        __version:
          type: "integer"
    ProjectInstanceBasic:
      description: "Contains configurations and connections required for the execution\
        \ of project workflows."
      type: "object"
      required:
      - "name"
      properties:
        description:
          description: "The description of a project instance."
          type: "string"
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        id:
          description: "The id of a project instance."
          type: "integer"
          format: "int64"
          readOnly: true
        lastExecutionDate:
          description: "The last execution date."
          type: "string"
          readOnly: true
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        name:
          description: "The name of a project instance."
          type: "string"
        projectId:
          description: "Th id of a project."
          type: "integer"
          format: "int64"
          writeOnly: true
        status:
          description: "The status of a project instance."
          type: "string"
          enum:
          - "DISABLED"
          - "ENABLED"
    ProjectInstanceWorkflow:
      description: "Contains configuration and connections required for the execution\
        \ of a particular project workflow."
      type: "object"
      required:
      - "name"
      properties:
        inputs:
          description: "The input parameters of an project instance used as workflow\
            \ input values."
          type: "object"
          additionalProperties:
            type: "object"
        connections:
          description: "The connections used by a project instance."
          type: "array"
          items:
            $ref: "#/components/schemas/ProjectInstanceWorkflowConnection"
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        enabled:
          description: "If a workflow is enabled or not in the project instance."
          type: "boolean"
        id:
          description: "The id of a project instance."
          type: "integer"
          format: "int64"
          readOnly: true
        lastExecutionDate:
          description: "The last execution date of a project instance."
          type: "string"
          format: "date-time"
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        projectInstance:
          $ref: "#/components/schemas/ProjectInstanceBasic"
        projectInstanceId:
          description: "Th id of a project instance."
          type: "integer"
          format: "int64"
          writeOnly: true
        workflowId:
          description: "The id of a workflow."
          type: "integer"
        __version:
          type: "integer"
    ProjectInstanceWorkflowConnection:
      description: "The connection used in particular task."
      type: "object"
      properties:
        connectionId:
          description: "The connection id"
          type: "integer"
          format: "int64"
        key:
          description: "The connection key under which a connection is defined in\
            \ a workflow definition."
          type: "string"
        taskName:
          description: "The task name to which a connection belongs."
          type: "string"
    UpdateTagsRequest:
      description: "The request object that contains the array of tags."
      type: "object"
      properties:
        tags:
          type: "array"
          items:
            $ref: "../../../core/tag/tag-rest/tag-rest-impl/openapi.yaml#/components/schemas/Tag"
    WorkflowBasic:
      description: "The blueprint that describe the execution of a job."
      type: "object"
      properties:
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        description:
          description: "The description of a workflow."
          type: "string"
          writeOnly: true
        id:
          description: "The id of the workflow."
          type: "string"
          readOnly: true
        label:
          description: "The descriptive name for the workflow"
          type: "string"
          readOnly: true
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
