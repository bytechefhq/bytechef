---
openapi: "3.0.1"
info:
  title: "Project Configuration API"
  version: "1"
servers:
- url: "http://localhost:5173/api/automation"
tags:
- name: "category"
  description: "The Automation Category API"
- name: "project-instance-tag"
  description: "The Automation Project Instance Tag API"
- name: "project-instance"
  description: "The Automation Project Instance API"
- name: "project-tag"
  description: "The Automation Project Tag API"
- name: "project"
  description: "The Project API"
- name: "workflow"
  description: "The Automation Workflow API"
paths:
  /project-instances:
    get:
      description: "Get project instances."
      summary: "Get project instances"
      tags:
      - "project-instance"
      operationId: "getProjectInstances"
      parameters:
      - name: "projectId"
        description: "The project ids used for filtering project instances."
        in: "query"
        required: false
        schema:
          type: "integer"
          format: "int64"
      - name: "tagId"
        description: "The tag id of used for filtering project instances."
        in: "query"
        required: false
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "A list of project instances."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ProjectInstance"
    post:
      description: "Create a new project instance."
      summary: "Create a new project instance"
      tags:
      - "project-instance"
      operationId: "createProjectInstance"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectInstance"
        required: true
      responses:
        "200":
          description: "The project instance object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectInstance"
  /project-instances/tags:
    get:
      description: "Get project instance tags."
      summary: "Get project instance tags"
      tags:
      - "project-instance-tag"
      operationId: "getProjectInstanceTags"
      responses:
        "200":
          description: "A list of project tags."
          content:
            application/json:
              schema:
                description: "The response object that contains the array of tags."
                type: "array"
                items:
                  $ref: "#/components/schemas/Tag"
  /project-instances/{id}:
    delete:
      description: "Delete a project instance."
      summary: "Delete a project instance"
      tags:
      - "project-instance"
      operationId: "deleteProjectInstance"
      parameters:
      - name: "id"
        description: "The id of a project instance."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "Successful operation."
    get:
      description: "Get a project instance by id."
      summary: "Get a project instance by id"
      tags:
      - "project-instance"
      operationId: "getProjectInstance"
      parameters:
      - name: "id"
        description: "The id of a project instance."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "The project object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectInstance"
    put:
      description: "Update an existing project instance."
      summary: "Update an existing project instance"
      tags:
      - "project-instance"
      operationId: "updateProjectInstance"
      parameters:
      - name: "id"
        description: "The id of a project instance."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectInstance"
        required: true
      responses:
        "200":
          description: "The updated project instnce object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectInstance"
  /project-instances/{id}/enable/{enable}:
    post:
      description: "Enable/disable a project instance."
      summary: "Enable/disable a project instance"
      tags:
      - "project-instance"
      operationId: "enableProjectInstance"
      parameters:
      - name: "id"
        description: "The id of a project instance."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "enable"
        description: "Enable/disable the project instance."
        in: "path"
        required: true
        schema:
          type: "boolean"
      responses:
        "200":
          description: "Successful operation."
  /project-instances/{id}/tags:
    put:
      description: "Updates tags of an existing project instance."
      summary: "Updates tags of an existing project instance"
      tags:
      - "project-instance-tag"
      operationId: "updateProjectInstanceTags"
      parameters:
      - name: "id"
        description: "The id of a project instance."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTagsRequest"
        required: true
      responses:
        "200":
          description: "Successful operation."
  /project-instances/{id}/workflows/{workflowId}/enable/{enable}:
    post:
      description: "Enable/disable a workflow of a project instance."
      summary: "Enable/disable a workflow of a project instance"
      tags:
      - "project-instance"
      operationId: "enableProjectInstanceWorkflow"
      parameters:
      - name: "id"
        description: "The id of a project instance."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "workflowId"
        description: "The id of a project workflow."
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "enable"
        description: "Enable/disable the workflow of a project instance."
        in: "path"
        required: true
        schema:
          type: "boolean"
      responses:
        "200":
          description: "Successful operation."
  /project-instances/{id}/workflows/{workflowId}/jobs:
    post:
      description: "Create a request for running a new job."
      summary: "Create a request for running a new job"
      tags:
      - "project-instance"
      operationId: "createProjectInstanceWorkflowJob"
      parameters:
      - name: "id"
        description: "The id of a project instance."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "workflowId"
        description: "The id of the workflow to execute."
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "The id of a created job."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  jobId:
                    description: "The id of an executed job."
                    type: "integer"
                    format: "int64"
  /projects:
    get:
      description: "Get projects."
      summary: "Get projects."
      tags:
      - "project"
      operationId: "getProjects"
      parameters:
      - name: "categoryId"
        description: "The category id used for filtering projects."
        in: "query"
        required: false
        schema:
          type: "integer"
          format: "int64"
      - name: "projectInstances"
        description: "Use for filtering projects for which project instances exist."
        in: "query"
        required: false
        schema:
          type: "boolean"
      - name: "tagId"
        description: "The tag id of used for filtering projects."
        in: "query"
        required: false
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "A list of projects."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Project"
    post:
      description: "Create a new project."
      summary: "Create a new project."
      tags:
      - "project"
      operationId: "createProject"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
        required: true
      responses:
        "200":
          description: "The project object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
  /projects/categories:
    get:
      description: "Get categories."
      summary: "Get categories"
      tags:
      - "category"
      operationId: "getProjectCategories"
      responses:
        "200":
          description: "A list of categories."
          content:
            application/json:
              schema:
                description: "The response object that contains the array of categories."
                type: "array"
                items:
                  $ref: "#/components/schemas/Category"
  /projects/tags:
    get:
      description: "Get project tags."
      summary: "Get project tags."
      tags:
      - "project-tag"
      operationId: "getProjectTags"
      responses:
        "200":
          description: "A list of project tags."
          content:
            application/json:
              schema:
                description: "The response object that contains the array of tags."
                type: "array"
                items:
                  $ref: "#/components/schemas/Tag"
  /projects/{id}:
    delete:
      description: "Delete a project."
      summary: "Delete a project."
      tags:
      - "project"
      operationId: "deleteProject"
      parameters:
      - name: "id"
        description: "The id of a project."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "Successful operation."
    get:
      description: "Get a project by id."
      summary: "Get a project by id."
      tags:
      - "project"
      operationId: "getProject"
      parameters:
      - name: "id"
        description: "The id of a project."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "The project object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
    put:
      description: "Update an existing project."
      summary: "Update an existing project."
      tags:
      - "project"
      operationId: "updateProject"
      parameters:
      - name: "id"
        description: "The id of a project."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
        required: true
      responses:
        "200":
          description: "The updated project object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
  /projects/{id}/duplicate:
    post:
      description: "Duplicates existing project."
      summary: "Duplicates existing project."
      tags:
      - "project"
      operationId: "duplicateProject"
      parameters:
      - name: "id"
        description: "The id of a project."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "The duplicated project object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
  /projects/{id}/tags:
    put:
      description: "Updates tags of an existing project."
      summary: "Updates tags of an existing project."
      tags:
      - "project-tag"
      operationId: "updateProjectTags"
      parameters:
      - name: "id"
        description: "The id of a project."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTagsRequest"
        required: true
      responses:
        "200":
          description: "Successful operation."
  /projects/{id}/workflows:
    get:
      description: "Get workflows for particular project."
      summary: "Get workflows for particular project."
      tags:
      - "workflow"
      operationId: "getProjectWorkflows"
      parameters:
      - name: "id"
        description: "The id of a project."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "The updated project object."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Workflow"
    post:
      description: "Create new workflow and adds it to an existing project."
      summary: "Create new workflow and adds it to an existing project."
      tags:
      - "project"
      operationId: "createProjectWorkflow"
      parameters:
      - name: "id"
        description: "The id of a project."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              required:
              - "label"
              properties:
                label:
                  description: "The descriptive name for a workflow."
                  type: "string"
                description:
                  description: "The workflow description."
                  type: "string"
                definition:
                  description: "The workflow definition."
                  type: "string"
        required: true
      responses:
        "200":
          description: "The updated project object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workflow"
  /workflows:
    get:
      description: "Get workflow definitions."
      summary: "Get workflow definitions"
      tags:
      - "workflow"
      operationId: "getWorkflows"
      responses:
        "200":
          description: "A list of workflows."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Workflow"
  /workflows/{id}:
    delete:
      description: "Delete a workflow."
      summary: "Delete a workflow"
      tags:
      - "workflow"
      operationId: "deleteWorkflow"
      parameters:
      - name: "id"
        description: "The id of the workflow to delete."
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful operation."
    get:
      description: "Get a workflow by id."
      summary: "Get a workflow by id"
      tags:
      - "workflow"
      operationId: "getWorkflow"
      parameters:
      - name: "id"
        description: "The id of the workflow to get."
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "The workflow object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workflow"
    put:
      description: "Update an existing workflow."
      summary: "Update an existing workflow"
      tags:
      - "workflow"
      operationId: "updateWorkflow"
      parameters:
      - name: "id"
        description: "The id of the workflow to update."
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "The workflow object that needs to updated."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Workflow"
        required: true
      responses:
        "200":
          description: "The updated workflow object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workflow"
  /workflows/{id}/duplicate:
    post:
      description: "Duplicates existing workflow."
      summary: "Duplicates existing workflow."
      tags:
        - "workflow"
      operationId: "duplicateWorkflow"
      parameters:
        - name: "id"
          description: "The id of a workflow."
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "The duplicated workflow object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workflow"
components:
  schemas:
    Category:
      description: "A category."
      required:
      - "name"
      properties:
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        id:
          description: "The id of the category."
          type: "integer"
          format: "int64"
        name:
          description: "The name of the category."
          type: "string"
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        __version:
          type: "integer"
          format: "int32"
    Input:
      type: "object"
      required:
      - "name"
      - "value"
      properties:
        label:
          description: "The descriptive name of an input"
          type: "string"
        name:
          description: "The name of an input"
          type: "string"
        required:
          description: "If an input is required, or not"
          type: "boolean"
          default: false
        type:
          description: "The type of an input, for example \\\"string\\\""
          type: "string"
    Output:
      type: "object"
      required:
      - "name"
      - "value"
      properties:
        name:
          description: "The name of an output"
          type: "string"
        value:
          description: "The value of an output"
          type: "object"
    Page:
      description: "A sublist of a list of objects. It allows gain information about\
        \ the position of it in the containing entire list."
      type: "object"
      properties:
        number:
          description: "The current page."
          type: "integer"
        size:
          description: "The size of the page."
          type: "integer"
        numberOfElements:
          description: "The number of elements."
          type: "integer"
        totalPages:
          description: "The total number of pages."
          type: "integer"
        totalElements:
          description: "The total number of elements."
          type: "integer"
        content:
          description: "The list of elements."
          type: "array"
          items:
            type: "object"
    Project:
      description: "A group of workflows that make one logical project."
      type: "object"
      required:
      - "name"
      properties:
        category:
          $ref: "#/components/schemas/Category"
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        description:
          description: "The description of a project."
          type: "string"
        id:
          description: "The id of a project."
          type: "integer"
          format: "int64"
          readOnly: true
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        name:
          description: "The name of a project."
          type: "string"
        publishedDate:
          description: "The published date."
          type: "string"
          format: "date-time"
        projectVersion:
          description: "The version of a project."
          type: "integer"
        status:
          description: "The status of a project."
          type: "string"
          enum:
          - "PUBLISHED"
          - "UNPUBLISHED"
        tags:
          type: "array"
          items:
            $ref: "#/components/schemas/Tag"
        workflowIds:
          description: "The workflow ids belonging to this project."
          type: "array"
          items:
            type: "string"
            readOnly: true
        __version:
          type: "integer"
    ProjectBasic:
      description: "A group of workflows that make one logical project."
      type: "object"
      required:
      - "name"
      properties:
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        description:
          description: "The description of a project."
          type: "string"
        id:
          description: "The id of a project."
          type: "integer"
          format: "int64"
          readOnly: true
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        name:
          description: "The name of a project."
          type: "string"
        publishedDate:
          description: "The published date."
          type: "string"
          format: "date-time"
        projectVersion:
          description: "The version of a project."
          type: "integer"
        status:
          description: "The status of a project."
          type: "string"
          enum:
          - "PUBLISHED"
          - "UNPUBLISHED"
    ProjectInstance:
      description: "Contains configurations and connections required for the execution\
        \ of project workflows."
      type: "object"
      required:
      - "name"
      properties:
        description:
          description: "The description of a project instance."
          type: "string"
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        id:
          description: "The id of a project instance."
          type: "integer"
          format: "int64"
          readOnly: true
        lastExecutionDate:
          description: "The last execution date."
          type: "string"
          format: "date-time"
          readOnly: true
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        name:
          description: "The name of a project instance."
          type: "string"
        project:
          type: "object"
          allOf:
          - $ref: "#/components/schemas/ProjectBasic"
          readOnly: true
        projectId:
          description: "Th id of a project."
          type: "integer"
          format: "int64"
          writeOnly: true
        projectInstanceWorkflows:
          type: "array"
          items:
            $ref: "#/components/schemas/ProjectInstanceWorkflow"
        enabled:
          description: "If a workflow is enabled or not in the project instance."
          type: "boolean"
        tags:
          type: "array"
          items:
            $ref: "#/components/schemas/Tag"
        __version:
          type: "integer"
    ProjectInstanceBasic:
      description: "Contains configurations and connections required for the execution\
        \ of project workflows."
      type: "object"
      required:
      - "name"
      properties:
        description:
          description: "The description of a project instance."
          type: "string"
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        id:
          description: "The id of a project instance."
          type: "integer"
          format: "int64"
          readOnly: true
        lastExecutionDate:
          description: "The last execution date."
          type: "string"
          readOnly: true
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        name:
          description: "The name of a project instance."
          type: "string"
        projectId:
          description: "Th id of a project."
          type: "integer"
          format: "int64"
          writeOnly: true
        enabled:
          description: "If a workflow is enabled or not in the project instance."
          type: "boolean"
    ProjectInstanceWorkflow:
      description: "Contains configuration and connections required for the execution\
        \ of a particular project workflow."
      type: "object"
      required:
      - "name"
      properties:
        inputs:
          description: "The input parameters of an project instance used as workflow\
            \ input values."
          type: "object"
          additionalProperties:
            type: "object"
        connections:
          description: "The connections used by a project instance."
          type: "array"
          items:
            $ref: "#/components/schemas/ProjectInstanceWorkflowConnection"
        enabled:
          description: "If a workflow is enabled or not in the project instance workflow."
          type: "boolean"
        id:
          description: "The id of a project instance."
          type: "integer"
          format: "int64"
          readOnly: true
        lastExecutionDate:
          description: "The last execution date of a project instance."
          type: "string"
          format: "date-time"
        projectInstanceId:
          description: "The id of a project instance."
          type: "integer"
        workflowId:
          description: "The id of a workflow."
          type: "string"
        __version:
          type: "integer"
    ProjectInstanceWorkflowConnection:
      description: "The connection used in a particular task."
      type: "object"
      properties:
        connectionId:
          description: "The connection id"
          type: "integer"
          format: "int64"
        key:
          description: "The connection key under which a connection is defined in\
            \ a workflow definition."
          type: "string"
        operationName:
          description: "The action/trigger name to which a connection belongs."
          type: "string"
    Tag:
      description: "A tag."
      required:
      - "name"
      properties:
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        id:
          description: "The id of the tag."
          type: "integer"
          format: "int64"
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        name:
          description: "The name of the tag."
          type: "string"
        __version:
          type: "integer"
    UpdateTagsRequest:
      description: "The request object that contains the array of tags."
      type: "object"
      properties:
        tags:
          type: "array"
          items:
            $ref: "#/components/schemas/Tag"
    Workflow:
      description: "The blueprint that describe the execution of a job."
      type: "object"
      properties:
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        definition:
          description: "The definition of a workflow."
          type: "string"
          writeOnly: true
        description:
          description: "The description of a workflow."
          type: "string"
          writeOnly: true
        format:
          $ref: "#/components/schemas/WorkflowFormat"
        id:
          description: "The id of the workflow."
          type: "string"
          readOnly: true
        inputs:
          description: "The workflow's expected list of inputs."
          type: "array"
          items:
            $ref: "#/components/schemas/Input"
          readOnly: true
        label:
          description: "The descriptive name for the workflow"
          type: "string"
          readOnly: true
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        outputs:
          description: "The workflow's list of expected outputs."
          type: "array"
          items:
            $ref: "#/components/schemas/Output"
          readOnly: true
        sourceType:
          description: "The type of the source which stores the workflow definition."
          type: "string"
          enum:
          - "CLASSPATH"
          - "FILESYSTEM"
          - "GIT"
          - "JDBC"
        maxRetries:
          description: "The maximum number of times a task may retry."
          type: "integer"
          format: "int32"
          readOnly: true
        tasks:
          description: "The steps that make up the workflow."
          type: "array"
          items:
            $ref: "#/components/schemas/WorkflowTask"
          readOnly: true
        triggers:
          description: "The steps that make up the workflow."
          type: "array"
          items:
            $ref: "#/components/schemas/WorkflowTrigger"
          readOnly: true
        __version:
          type: "integer"
    WorkflowConnection:
      type: "object"
      required:
      - "componentName"
      - "componentVersion"
      - "key"
      properties:
        componentName:
          type: "string"
        componentVersion:
          type: "integer"
        key:
          type: "string"
    WorkflowFormat:
      type: "string"
      enum:
      - "JSON"
      - "YAML"
    WorkflowTask:
      description: "Represents a definition of a workflow task."
      type: "object"
      required:
      - "name"
      - "type"
      properties:
        connections:
          type: "array"
          items:
            $ref: "#/components/schemas/WorkflowConnection"
        finalize:
          description: "The (optional) list of tasks that are to be executed after\
            \ execution of a task -- regardless of whether it had failed or not."
          type: "array"
          items:
            $ref: "#/components/schemas/WorkflowTask"
        label:
          description: "The human-readable description of the task."
          type: "string"
        name:
          description: "The identifier name of the task. Task names are used for assigning\
            \ the output of one task so it can be later used by subsequent tasks."
          type: "string"
        node:
          description: "Defines the name of the type of the node that the task execution\
            \ will be routed to. For instance, if the node value is \"encoder\", then\
            \ the task will be routed to the \"encoder\" queue which is presumably\
            \ subscribed to by worker nodes of \"encoder\" type."
          type: "string"
        parameters:
          description: "Key-value map of task parameters."
          type: "object"
          additionalProperties:
            type: "object"
        post:
          description: "The (optional) list of tasks that are to be executed after\
            \ the successful execution of a task."
          type: "array"
          items:
            $ref: "#/components/schemas/WorkflowTask"
        pre:
          description: "The (optional) list of tasks that are to be executed prior\
            \ to a task."
          type: "array"
          items:
            $ref: "#/components/schemas/WorkflowTask"
        timeout:
          description: "The timeout expression which describes when a task should\
            \ be deemed as timed-out."
          type: "string"
        type:
          description: "The type of a task."
          type: "string"
    WorkflowTrigger:
      description: "Represents a definition of a workflow trigger."
      type: "object"
      required:
      - "name"
      - "type"
      properties:
        connections:
          type: "array"
          items:
            $ref: "#/components/schemas/WorkflowConnection"
        label:
          description: "The human-readable description of the task."
          type: "string"
        name:
          description: "The identifier name of the task. Task names are used for assigning\
            \ the output of one task so it can be later used by subsequent tasks."
          type: "string"
        parameters:
          description: "Key-value map of task parameters."
          type: "object"
          additionalProperties:
            type: "object"
        timeout:
          description: "The timeout expression which describes when a trigger should\
            \ be deemed as timed-out."
          type: "string"
        type:
          description: "The type of a trigger."
          type: "string"
