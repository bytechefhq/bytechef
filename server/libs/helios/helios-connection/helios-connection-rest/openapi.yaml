---
openapi: "3.0.1"
info:
  title: "Project Connection API"
  version: "1"
servers:
- url: "http://localhost:5173/api/automation"
tags:
- name: "connection-tag"
  description: "The Automation Connection Tag API"
- name: "connection"
  description: "The Automation Connection API"
paths:
  /connections:
    get:
      description: "Get all connections."
      summary: "Get all connections"
      tags:
      - "connection"
      operationId: "getConnections"
      parameters:
      - name: "componentName"
        description: "The component name used for filtering connections."
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "connectionVersion"
        description: "The connection version."
        in: "query"
        required: false
        schema:
          type: "integer"
      - name: "tagId"
        description: "The tag id of used for filtering connections."
        in: "query"
        required: false
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "A list of connections."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Connection"
    post:
      description: "Create a new connection."
      summary: "Create a new connection"
      tags:
      - "connection"
      operationId: "createConnection"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Connection"
        required: true
      responses:
        "200":
          description: "The connection object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connection"
  /connections/tags:
    get:
      description: "Get connection tags."
      summary: "Get connection tags"
      tags:
      - "connection-tag"
      operationId: "getConnectionTags"
      responses:
        "200":
          description: "A list of connection tags."
          content:
            application/json:
              schema:
                description: "The response object that contains the array of tags."
                type: "array"
                items:
                  $ref: "#/components/schemas/Tag"
  /connections/{id}:
    delete:
      description: "Delete a connection."
      summary: "Delete a connection"
      tags:
      - "connection"
      operationId: "deleteConnection"
      parameters:
      - name: "id"
        description: "The id of a connection."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "Successful operation."
    get:
      description: "Get a connection by id."
      summary: "Get a connection by id"
      tags:
      - "connection"
      operationId: "getConnection"
      parameters:
      - name: "id"
        description: "The id of a connection."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "The connection object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connection"
    put:
      description: "Update an existing connection."
      summary: "Update an existing connection"
      tags:
      - "connection"
      operationId: "updateConnection"
      parameters:
      - name: "id"
        description: "The id of a connection."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Connection"
        required: true
      responses:
        "200":
          description: "The updated connection object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connection"
  /connections/{id}/tags:
    put:
      description: "Updates tags of an existing connection."
      summary: "Updates tags of an existing connection"
      tags:
      - "connection-tag"
      operationId: "updateConnectionTags"
      parameters:
      - name: "id"
        description: "The id of the connection."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTagsRequest"
        required: true
      responses:
        "200":
          description: "Successful operation."
components:
  schemas:
    Connection:
      description: "Contains all required information to open a connection to a service\
        \ defined by componentName parameter."
      type: "object"
      required:
      - "name"
      - "componentName"
      - "componentVersion"
      - "parameters"
      properties:
        active:
          description: "If a connection is used in any of active workflows."
          type: "boolean"
          readOnly: true
        authorizationName:
          description: "The name of an authorization used by this connection. Used\
            \ for HTTP based services."
          type: "string"
        componentName:
          description: "The name of a component that uses this connection."
          type: "string"
        connectionVersion:
          description: "The version of a component that uses this connection."
          type: "integer"
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        credentialStatus:
          $ref: "#/components/schemas/CredentialStatus"
        name:
          description: "The name of a connection."
          type: "string"
        id:
          description: "The id of a connection."
          type: "integer"
          format: "int64"
          readOnly: true
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        parameters:
          description: "The parameters of a connection."
          type: "object"
          additionalProperties:
            type: "object"
          writeOnly: true
        tags:
          type: "array"
          items:
            $ref: "#/components/schemas/Tag"
        __version:
          type: "integer"
          format: "int32"
    CredentialStatus:
      type: "string"
      enum:
        - "VALID"
        - "INVALID"
    UpdateTagsRequest:
      description: "The request object that contains the array of tags."
      type: "object"
      properties:
        tags:
          type: "array"
          items:
            $ref: "#/components/schemas/Tag"
    Tag:
      description: "A tag."
      required:
      - "name"
      properties:
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        id:
          description: "The id of the tag."
          type: "integer"
          format: "int64"
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        name:
          description: "The name of the tag."
          type: "string"
        __version:
          type: "integer"
