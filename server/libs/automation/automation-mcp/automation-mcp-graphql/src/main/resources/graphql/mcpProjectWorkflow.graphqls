extend type Query {
    mcpProjectWorkflow(id: ID): McpProjectWorkflow
    mcpProjectWorkflows: [McpProjectWorkflow]
    mcpProjectWorkflowsByMcpProjectId(mcpProjectId: ID): [McpProjectWorkflow]
    mcpProjectWorkflowsByProjectDeploymentWorkflowId(projectDeploymentWorkflowId: ID): [McpProjectWorkflow]
}

extend type Mutation {
    createMcpProjectWorkflow(input: McpProjectWorkflowInput!): McpProjectWorkflow
    updateMcpProjectWorkflow(id: ID!, input: McpProjectWorkflowUpdateInput!): McpProjectWorkflow
    deleteMcpProjectWorkflow(id: ID!): Boolean
}

type McpProjectWorkflow {
    id: ID!
    mcpProjectId: Long!
    projectDeploymentWorkflowId: Long!
    projectDeploymentWorkflow: ProjectDeploymentWorkflow
    workflow: Workflow
    createdBy: String
    createdDate: Long
    lastModifiedBy: String
    lastModifiedDate: Long
    version: Int
}

type ProjectDeploymentWorkflow {
    id: ID!
    workflowId: String!
    projectDeploymentId: Long!
    enabled: Boolean!
    inputs: Map
    createdBy: String
    createdDate: Long
    lastModifiedBy: String
    lastModifiedDate: Long
    version: Int
}

input McpProjectWorkflowInput {
    mcpProjectId: Long!
    projectDeploymentWorkflowId: Long!
}

input McpProjectWorkflowUpdateInput {
    mcpProjectId: Long
    projectDeploymentWorkflowId: Long
}
