extend type Query {
    preBuiltProjectTemplates(query: String, category: String): [ProjectTemplate!]!
    project(id: ID): Project
    projectTemplate(id: String!, sharedProject: Boolean!): ProjectTemplate
    projects: [Project]
    sharedProject(projectUuid: String!): SharedProject
}

extend type Mutation {
    deleteSharedProject(id: ID!): Boolean!
    exportSharedProject(id: ID!, description: String): Boolean
    importProjectTemplate(id: String!, workspaceId: ID!, sharedProject: Boolean!): ID!
}

type Project {
    id: ID!
    name: String!
    category: Category
    tags: [Tag]
}

type ProjectTemplate {
    authorEmail: String
    authorName: String
    authorRole: String
    authorSocialLinks: [String]!
    categories: [String!]!
    components: [ComponentDefinitionTuple!]!
    description: String
    id: ID
    lastModifiedDate: String
    project: ProjectInfo
    projectVersion: Int
    publicUrl: String
    workflows: [WorkflowInfo!]!
}

type SharedProject {
    description: String
    exported: Boolean!
    projectVersion: Int
    publicUrl: String
}

type ComponentDefinitionTuple {
    key: String
    value: [ComponentDefinition]!
}

type ProjectInfo {
    description: String
    name: String!
}

type WorkflowInfo {
    description: String
    label: String!
    id: String!
}
