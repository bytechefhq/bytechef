---
openapi: "3.0.1"
info:
  title: "The Automation Configuration Internal API"
  version: "1"
servers:
- url: "/api/automation/internal"
tags:
- name: "category"
  description: "The Automation Category API"
- name: "project-instance-tag"
  description: "The Automation Project Instance Tag Internal API"
- name: "project-instance"
  description: "The Automation Project Instance Internal API"
- name: "project-tag"
  description: "The Automation Project Tag Internal API"
- name: "project"
  description: "The Automation Project Internal API"
- name: "workflow"
  description: "The Automation Workflow Internal API"
- name: "workspace"
  description: "The Automation Workspace Internal API"
paths:
  /project-instances:
    post:
      description: "Create a new project instance."
      summary: "Create a new project instance"
      tags:
      - "project-instance"
      operationId: "createProjectInstance"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectInstance"
        required: true
      responses:
        "200":
          description: "The project instance object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectInstance"
  /project-instances/tags:
    get:
      description: "Get project instance tags."
      summary: "Get project instance tags"
      tags:
      - "project-instance-tag"
      operationId: "getProjectInstanceTags"
      responses:
        "200":
          description: "The list of project instance tags."
          content:
            application/json:
              schema:
                description: "The response object that contains the array of tags."
                type: "array"
                items:
                  $ref: "#/components/schemas/Tag"
  /project-instances/{id}:
    delete:
      description: "Delete a project instance."
      summary: "Delete a project instance"
      tags:
      - "project-instance"
      operationId: "deleteProjectInstance"
      parameters:
      - name: "id"
        description: "The id of a project instance."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "Successful operation."
    get:
      description: "Get a project instance by id."
      summary: "Get a project instance by id"
      tags:
      - "project-instance"
      operationId: "getProjectInstance"
      parameters:
      - name: "id"
        description: "The id of a project instance."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "The project instance object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectInstance"
    put:
      description: "Update an existing project instance."
      summary: "Update an existing project instance"
      tags:
      - "project-instance"
      operationId: "updateProjectInstance"
      parameters:
      - name: "id"
        description: "The id of a project instance."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectInstance"
        required: true
      responses:
        "200":
          description: "The updated project instance object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectInstance"
  /project-instances/{id}/enable/{enable}:
    patch:
      description: "Enable/disable a project instance."
      summary: "Enable/disable a project instance"
      tags:
      - "project-instance"
      operationId: "enableProjectInstance"
      parameters:
      - name: "id"
        description: "The id of a project instance."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "enable"
        description: "Enable/disable the project instance."
        in: "path"
        required: true
        schema:
          type: "boolean"
      responses:
        "200":
          description: "Successful operation."
  /project-instances/{id}/tags:
    put:
      description: "Updates tags of an existing project instance."
      summary: "Updates tags of an existing project instance"
      tags:
      - "project-instance-tag"
      operationId: "updateProjectInstanceTags"
      parameters:
      - name: "id"
        description: "The id of a project instance."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTagsRequest"
        required: true
      responses:
        "200":
          description: "Successful operation."
  /project-instances/{id}/workflows/{workflowId}/enable/{enable}:
    patch:
      description: "Enable/disable a workflow of a project instance."
      summary: "Enable/disable a workflow of a project instance"
      tags:
      - "project-instance"
      operationId: "enableProjectInstanceWorkflow"
      parameters:
      - name: "id"
        description: "The id of a project instance."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "workflowId"
        description: "The id of a project workflow."
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "enable"
        description: "Enable/disable the workflow of a project instance."
        in: "path"
        required: true
        schema:
          type: "boolean"
      responses:
        "200":
          description: "Successful operation."
  /project-instances/{id}/project-instance-workflows/{projectInstanceWorkflowId}:
    put:
      description: "Update an existing project instance workflow."
      summary: "Update an existing project instance workflow"
      tags:
        - "project-instance"
      operationId: "updateProjectInstanceWorkflow"
      parameters:
        - name: "id"
          description: "The id of a project instance."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "projectInstanceWorkflowId"
          description: "The id of a project instance workflow."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectInstanceWorkflow"
        required: true
      responses:
        "200":
          description: "The updated project instance workflow object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectInstanceWorkflow"
  /project-instances/{id}/workflows/{workflowId}/jobs:
    post:
      description: "Create a request for running a new job."
      summary: "Create a request for running a new job"
      tags:
      - "project-instance"
      operationId: "createProjectInstanceWorkflowJob"
      parameters:
      - name: "id"
        description: "The id of a project instance."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "workflowId"
        description: "The id of the workflow to execute."
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "The id of a created job."
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  jobId:
                    description: "The id of an executed job."
                    type: "integer"
                    format: "int64"
  /projects:
    post:
      description: "Create a new project."
      summary: "Create a new project."
      tags:
      - "project"
      operationId: "createProject"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
        required: true
      responses:
        "200":
          description: "The project object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
  /projects/categories:
    get:
      description: "Get categories."
      summary: "Get categories"
      tags:
      - "category"
      operationId: "getProjectCategories"
      responses:
        "200":
          description: "The list of categories."
          content:
            application/json:
              schema:
                description: "The response object that contains the array of categories."
                type: "array"
                items:
                  $ref: "#/components/schemas/Category"
  /projects/tags:
    get:
      description: "Get project tags."
      summary: "Get project tags."
      tags:
      - "project-tag"
      operationId: "getProjectTags"
      responses:
        "200":
          description: "The list of project tags."
          content:
            application/json:
              schema:
                description: "The response object that contains the array of tags."
                type: "array"
                items:
                  $ref: "#/components/schemas/Tag"
  /projects/{id}:
    delete:
      description: "Delete a project."
      summary: "Delete a project."
      tags:
      - "project"
      operationId: "deleteProject"
      parameters:
      - name: "id"
        description: "The id of a project."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "Successful operation."
    get:
      description: "Get a project by id."
      summary: "Get a project by id."
      tags:
      - "project"
      operationId: "getProject"
      parameters:
      - name: "id"
        description: "The id of a project."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "The project object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
    put:
      description: "Update an existing project."
      summary: "Update an existing project."
      tags:
      - "project"
      operationId: "updateProject"
      parameters:
      - name: "id"
        description: "The id of a project."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
        required: true
      responses:
        "200":
          description: "The updated project object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
  /projects/{id}/duplicate:
    post:
      description: "Duplicates existing project."
      summary: "Duplicates existing project."
      tags:
      - "project"
      operationId: "duplicateProject"
      parameters:
      - name: "id"
        description: "The id of a project."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "The duplicated project object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
  /projects/{id}/publish:
    post:
      description: "Publishes existing project."
      summary: "Publishes existing project."
      tags:
        - "project"
      operationId: "publishProject"
      parameters:
        - name: "id"
          description: "The id of a project."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: The description of a project version.
                  type: "string"
      responses:
        "200":
          description: "Successful operation."
  /projects/{id}/versions:
    get:
      description: "Get a project versions."
      summary: "Get a project versions."
      tags:
        - "project"
      operationId: "getProjectVersions"
      parameters:
        - name: "id"
          description: "The id of a project."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "The list of project version objects."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ProjectVersion"
  /projects/{id}/versions/{projectVersion}/workflows:
    get:
      description: "Get workflows for particular project version."
      summary: "Get workflows for particular project version."
      tags:
        - "workflow"
      operationId: "getProjectVersionWorkflows"
      parameters:
        - name: "id"
          description: "The id of a project."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "projectVersion"
          description: "The version of a project."
          in: "path"
          required: true
          schema:
            type: "integer"
      responses:
        "200":
          description: "The array of project workflows."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Workflow"
  /projects/{id}/tags:
    put:
      description: "Updates tags of an existing project."
      summary: "Updates tags of an existing project."
      tags:
      - "project-tag"
      operationId: "updateProjectTags"
      parameters:
      - name: "id"
        description: "The id of a project."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTagsRequest"
        required: true
      responses:
        "200":
          description: "Successful operation."
  /projects/{id}/workflows:
    get:
      description: "Get workflows for particular project."
      summary: "Get workflows for particular project."
      tags:
      - "workflow"
      operationId: "getProjectWorkflows"
      parameters:
      - name: "id"
        description: "The id of a project."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "The array project workflows."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Workflow"
    post:
      description: "Create new workflow and adds it to an existing project."
      summary: "Create new workflow and adds it to an existing project."
      tags:
      - "workflow"
      operationId: "createProjectWorkflow"
      parameters:
      - name: "id"
        description: "The id of a project."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Workflow"
        required: true
      responses:
        "200":
          description: "The updated project object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workflow"
  /projects/{id}/workflows/{workflowId}/duplicate:
    post:
      description: "Duplicates existing workflow."
      summary: "Duplicates existing workflow."
      tags:
        - "workflow"
      operationId: "duplicateWorkflow"
      parameters:
        - name: "id"
          description: "The id of a project."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "workflowId"
          description: "The id of a workflow."
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "The id of a new duplicated workflow object."
          content:
            application/json:
              schema:
                type: string
  /users/{id}/workspaces:
    get:
      description: "Get all user workspaces."
      summary: "Get all user workspaces"
      tags:
        - "workspace"
      operationId: "getUserWorkspaces"
      parameters:
        - name: "id"
          description: "The id of a user."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "The list of user workspaces."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Workspace"
  /workflows/{id}:
    delete:
      description: "Delete a workflow."
      summary: "Delete a workflow"
      tags:
        - "workflow"
      operationId: "deleteWorkflow"
      parameters:
        - name: "id"
          description: "The id of the workflow to delete."
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Successful operation."
    get:
      description: "Get a workflow by id."
      summary: "Get a workflow by id"
      tags:
        - "workflow"
      operationId: "getWorkflow"
      parameters:
        - name: "id"
          description: "The id of the workflow to get."
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "The workflow object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workflow"
    put:
      description: "Update an existing workflow."
      summary: "Update an existing workflow"
      tags:
        - "workflow"
      operationId: "updateWorkflow"
      parameters:
        - name: "id"
          description: "The id of the workflow to update."
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Workflow"
        required: true
      responses:
        "200":
          description: "The updated workflow object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workflow"
  /workflows/by-project-workflow-id/{projectWorkflowId}:
    get:
      description: "Get workflow for particular project."
      summary: "Get workflow for particular project."
      tags:
        - "workflow"
      operationId: "getProjectWorkflow"
      parameters:
        - name: "projectWorkflowId"
          description: "The id of a project workflow."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "The project workflow object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workflow"
  /workspaces/{id}/project-instances:
    get:
      description: "Get project instances."
      summary: "Get project instances"
      tags:
        - "project-instance"
      operationId: "getWorkspaceProjectInstances"
      parameters:
        - name: "id"
          description: "The id of a workspace."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "environment"
          description: "The environment."
          in: "query"
          required: false
          schema:
            $ref: "#/components/schemas/Environment"
        - name: "projectId"
          description: "The project ids used for filtering project instances."
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int64"
        - name: "tagId"
          description: "The tag id of used for filtering project instances."
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "The list of project instances."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ProjectInstance"
  /workspaces/{id}/projects:
    get:
      description: "Get projects by workspace id."
      summary: "Get projects by workspace id"
      tags:
        - "project"
      operationId: "getWorkspaceProjects"
      parameters:
        - name: "id"
          description: "The id of a workspace."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "categoryId"
          description: "The category id used for filtering projects."
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int64"
        - name: "projectInstances"
          description: "Use for filtering projects for which project instances exist."
          in: "query"
          required: false
          schema:
            type: "boolean"
        - name: "tagId"
          description: "The tag id of used for filtering projects."
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int64"
        - name: "status"
          description: "Use for filtering projects per status."
          in: "query"
          required: false
          schema:
            $ref: '#/components/schemas/ProjectStatus'
      responses:
        "200":
          description: "The list of projects."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Project"
components:
  schemas:
    Category:
      description: "A category."
      required:
      - "name"
      properties:
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        id:
          description: "The id of the category."
          type: "integer"
          format: "int64"
        name:
          description: "The name of the category."
          type: "string"
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        __version:
          type: "integer"
          format: "int32"
    Environment:
      description: "The environment of a project."
      type: "string"
      enum:
        - "TEST"
        - "PRODUCTION"
    Project:
      description: "A group of workflows that make one logical project."
      allOf:
        - $ref: "#/components/schemas/ProjectBasic"
        - type: "object"
          required:
            - "name"
            - "workspaceId"
          properties:
            category:
              $ref: "#/components/schemas/Category"
            projectWorkflowIds:
              description: "The project workflow ids belonging to this project."
              type: "array"
              items:
                type: "integer"
                format: "int64"
            tags:
              type: "array"
              items:
                $ref: "#/components/schemas/Tag"
            workspaceId:
              description: "The workspace id."
              type: "integer"
              format: "int64"
            __version:
              type: "integer"
    ProjectBasic:
      description: "A group of workflows that make one logical project."
      type: "object"
      required:
      - "name"
      properties:
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        description:
          description: "The description of a project."
          type: "string"
        id:
          description: "The id of a project."
          type: "integer"
          format: "int64"
          readOnly: true
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        name:
          description: "The name of a project."
          type: "string"
        lastPublishedDate:
          description: "The last published date."
          type: "string"
          format: "date-time"
          readOnly: true
        lastStatus:
          $ref: '#/components/schemas/ProjectStatus'
        lastProjectVersion:
          description: "The last version of a project."
          type: "integer"
          readOnly: true
    ProjectInstance:
      description: "Contains configurations and connections required for the execution\
        \ of project workflows."
      allOf:
        - $ref: "#/components/schemas/ProjectInstanceBasic"
        - type: "object"
          required:
            - "name"
          properties:
            project:
              type: "object"
              allOf:
                - $ref: "#/components/schemas/ProjectBasic"
              readOnly: true
            projectInstanceWorkflows:
              type: "array"
              items:
                $ref: "#/components/schemas/ProjectInstanceWorkflow"
            tags:
              type: "array"
              items:
                $ref: "#/components/schemas/Tag"
            __version:
              type: "integer"
    ProjectInstanceBasic:
      description: "Contains configurations and connections required for the execution\
        \ of project workflows."
      type: "object"
      required:
      - "name"
      properties:
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        description:
          description: "The description of a project instance."
          type: "string"
        enabled:
          description: "If a project instance is enabled or not."
          type: "boolean"
        environment:
          $ref: '#/components/schemas/Environment'
        id:
          description: "The id of a project instance."
          type: "integer"
          format: "int64"
          readOnly: true
        lastExecutionDate:
          description: "The last execution date."
          type: "string"
          format: "date-time"
          readOnly: true
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        name:
          description: "The name of a project instance."
          type: "string"
        projectId:
          description: "The id of a project."
          type: "integer"
          format: "int64"
        projectVersion:
          description: "The version of a project."
          type: "integer"
    ProjectInstanceWorkflow:
      description: "Contains configuration and connections required for the execution\
        \ of a particular project workflow."
      type: "object"
      required:
      - "name"
      properties:
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        inputs:
          description: "The input parameters of an project instance used as workflow\
            \ input values."
          type: "object"
          additionalProperties: true
        connections:
          description: "The connections used by a project instance."
          type: "array"
          items:
            $ref: "#/components/schemas/ProjectInstanceWorkflowConnection"
        enabled:
          description: "If a workflow is enabled or not in the project instance workflow."
          type: "boolean"
        id:
          description: "The id of a project instance workflow."
          type: "integer"
          format: "int64"
          readOnly: true
        lastExecutionDate:
          description: "The last execution date of a project instance."
          type: "string"
          format: "date-time"
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        projectInstanceId:
          description: "The id of a project instance."
          type: "integer"
          format: "int64"
        staticWebhookUrl:
          description: "The url of a static url used to trigger a workflow."
          type: "string"
        workflowId:
          description: "The id of a workflow."
          type: "string"
        workflowReferenceCode:
          description: "The workflow reference code"
          type: "string"
          readOnly: true
        __version:
          type: "integer"
    ProjectInstanceWorkflowConnection:
      description: "The connection used in a particular action task or trigger."
      type: "object"
      required:
        - "connectionId"
        - "key"
        - "workflowNodeName"
      properties:
        connectionId:
          description: "The connection id"
          type: "integer"
          format: "int64"
        key:
          description: "The connection key under which a connection is defined in\
            \ a workflow definition."
          type: "string"
        workflowNodeName:
          description: "The action/trigger name to which a connection belongs."
          type: "string"
    ProjectStatus:
      description: "The status of a project."
      type: "string"
      enum:
        - "DRAFT"
        - "PUBLISHED"
    ProjectVersion:
      description: "The project version."
      type: "object"
      properties:
        description:
          description: "The description of a project version"
          type: "string"
        publishedDate:
          description: "The published date."
          type: "string"
          format: "date-time"
        version:
          description: "The version of a project."
          type: "integer"
          readOnly: true
        status:
          $ref: '#/components/schemas/ProjectStatus'
    Tag:
      description: "A tag."
      required:
      - "name"
      properties:
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        id:
          description: "The id of the tag."
          type: "integer"
          format: "int64"
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        name:
          description: "The name of the tag."
          type: "string"
        __version:
          type: "integer"
    UpdateTagsRequest:
      description: "The request object that contains the array of tags."
      type: "object"
      properties:
        tags:
          type: "array"
          items:
            $ref: "#/components/schemas/Tag"
    Workflow:
      description: "The blueprint that describe the execution of a job."
      x-implements: ['com.bytechef.platform.configuration.web.rest.model.WorkflowModelAware']
      allOf:
        - $ref: "../../../../platform/platform-configuration/platform-configuration-rest/platform-configuration-rest-impl/openapi.yaml#/components/schemas/Workflow"
        - type: "object"
          properties:
            projectWorkflowId:
              description: "The project workflow id"
              type: "integer"
              format: "int64"
              readOnly: true
            workflowReferenceCode:
              description: "The workflow reference code"
              type: "string"
              readOnly: true
    WorkflowBasic:
      description: "The blueprint that describe the execution of a job."
      allOf:
        - $ref: "../../../../platform/platform-configuration/platform-configuration-rest/platform-configuration-rest-impl/openapi.yaml#/components/schemas/WorkflowBasic"
        - type: "object"
          properties:
            projectWorkflowId:
              description: "The project workflow id"
              type: "integer"
              format: "int64"
              readOnly: true
            workflowReferenceCode:
              description: "The workflow reference code"
              type: "string"
              readOnly: true
    Workspace:
      description: "A workspace."
      required:
        - "name"
      properties:
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        description:
          description: "The description of a workspace."
          type: "string"
        id:
          description: "The id of the category."
          type: "integer"
          format: "int64"
        name:
          description: "The name of the category."
          type: "string"
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        __version:
          type: "integer"
          format: "int32"
