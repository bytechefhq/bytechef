management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: when_authorized
      roles: 'ROLE_ADMIN'
      probes:
        enabled: true
      group:
        liveness:
          include: livenessState
        readiness:
          include: readinessState,db
  info:
    git:
      mode: full
    env:
      enabled: true
  metrics:
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    tags:
      application: ${spring.application.name}
    web:
      server:
        request:
          autotime:
            enabled: true
  # Prometheus is the default metrics backend
  prometheus:
    metrics:
      export:
        enabled: true
        step: 60

spring:
  application:
    name: scheduler-service-app
  cloud:
    redis:
      discovery:
        instanceId: ${spring.application.name}:${random.value}
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: ${bytechef.datasource.url}
    username: ${bytechef.datasource.username}
    password: ${bytechef.datasource.password}
    hikari:
      poolName: Hikari
  profiles:
    active: #spring.profiles.active#
    group:
      dev:
        - dev
  jmx:
    enabled: false
  liquibase:
    contexts: scheduler
  output:
    ansi:
      console-available: true
  rabbitmq:
    listener:
      direct:
        prefetch: 1
  quartz:
    job-store-type: jdbc
    jdbc:
      initialize-schema: always
  task:
    execution:
      thread-name-prefix: scheduler-service-app-task-
      pool:
        core-size: 2
        max-size: 50
        queue-capacity: 10000


#####

bytechef:
    message-broker:
        # Messaging provider between Coordinator and Workers (amqp | jms | kafka | redis) default: redis
        provider: redis
    serialization:
        date-format: yyyy-MM-dd'T'HH:mm:ss.SSSZZ
