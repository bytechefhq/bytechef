---
openapi: "3.0.1"
info:
  title: "The Embedded Public V1 API"
  version: "1"
servers:
  - url: "/api/embedded/v1"
tags:
  - name: "integration"
    description: "The Embedded Integration Public API"
  - name: "integration-instance"
    description: "The Embedded Integration Instance Public API"
  - name: "integration-instance-workflow"
    description: "The Embedded Integration Instance Workflow Public API"
  - name: "connected-user-project-workflow"
    description: "The Embedded Automation Workflow Public API"
paths:
  /automation/workflows:
    get:
      description: "Get automation workflows for particular external user."
      summary: "Get automation workflows for particular external user"
      tags:
        - "connected-user-project-workflow"
      operationId: "getFrontendProjectWorkflows"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
      responses:
        "200":
          description: "The workflow object."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ConnectedUserProjectWorkflow"
    post:
      description: "Create new workflow and adds it to an existing integration."
      summary: "Create new workflow and adds it to an existing integration"
      tags:
        - "connected-user-project-workflow"
      operationId: "createFrontendProjectWorkflow"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                definition:
                  description: The workflow definition
                  type: "string"
        required: true
      responses:
        "200":
          description: "The workflow reference code."
          content:
            application/json:
              schema:
                type: "string"
      security:
        - jwtBearerAuth: [ ]
  /automation/workflows/{workflowReferenceCode}:
    delete:
      description: "Delete a workflow."
      summary: "Delete a workflow"
      tags:
        - "connected-user-project-workflow"
      operationId: "deleteFrontendProjectWorkflow"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
        - name: "workflowReferenceCode"
          description: "The workflow reference of the workflow to delete."
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "204":
          description: "Successful operation."
    get:
      description: "Get a workflow by workflow reference code."
      summary: "Get a workflow by workflow reference code"
      tags:
        - "connected-user-project-workflow"
      operationId: "getFrontendProjectWorkflow"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
        - name: "workflowReferenceCode"
          description: "The workflow reference of the workflow to delete."
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "The workflow object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectedUserProjectWorkflow"
    put:
      description: "Update an existing workflow."
      summary: "Update an existing workflow"
      tags:
        - "connected-user-project-workflow"
      operationId: "updateFrontendProjectWorkflow"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
        - name: "workflowReferenceCode"
          description: "The workflow reference of the workflow to delete."
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                definition:
                  description: The workflow definition
                  type: "string"
        required: true
      responses:
        "204":
          description: "Successful operation."
      security:
        - jwtBearerAuth: [ ]
  /automation/workflows/{workflowReferenceCode}/enable:
    post:
      description: "Enable a workflow."
      summary: "Enable a workflow"
      tags:
        - "connected-user-project-workflow"
      operationId: "enableFrontendProjectWorkflow"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
        - name: "workflowReferenceCode"
          description: "The workflow reference code."
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "204":
          description: "Successful operation."
      security:
        - jwtBearerAuth: [ ]
    delete:
      description: "Disable a workflow."
      summary: "Disable a workflow"
      tags:
        - "connected-user-project-workflow"
      operationId: "disableFrontendProjectWorkflow"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
        - name: "workflowReferenceCode"
          description: "The workflow reference code."
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "204":
          description: "Successful operation."
      security:
        - jwtBearerAuth: [ ]
  /automation/workflows/{workflowReferenceCode}/publish:
    post:
      description: "Publishes existing workflow."
      summary: "Publishes existing workflow"
      tags:
        - "connected-user-project-workflow"
      operationId: "publishFrontendProjectWorkflow"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
        - name: "workflowReferenceCode"
          description: "The workflow reference code."
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: The description of a connected user project workflow version.
                  type: "string"
        required: true
      responses:
        "204":
          description: "Successful operation."
      security:
        - jwtBearerAuth: [ ]
  /me:
    patch:
      description: "Update data of an external user."
      summary: "Update data of an external user"
      tags:
        - "connected-user"
      operationId: "updateFrontendConnectedUser"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              additionalProperties: true
      responses:
        "204":
          description: "Successful operation."
      security:
        - jwtBearerAuth: [ ]
  /integration-instances/{id}:
    delete:
      description: "Delete an integration instance."
      summary: "Delete an integration instance"
      tags:
        - "integration-instance"
      operationId: "deleteFrontendIntegrationInstance"
      parameters:
        - name: "id"
          description: "The id of an integration instance."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "204":
          description: "Successful operation."
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      security:
        - jwtBearerAuth: [ ]
  /integration-instances/{id}/workflows/{workflowReferenceCode}:
    put:
      description: "Update a workflow for a specific integration instance."
      summary: "Update integration instance workflow"
      tags:
        - "integration-instance-workflow"
      operationId: "updateFrontendIntegrationInstanceWorkflow"
      parameters:
        - name: "id"
          description: "The id of an integration instance."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "workflowReferenceCode"
          description: "The workflow reference of the workflow to delete."
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                inputs:
                  description: The workflow inputs
                  type: "object"
                  additionalProperties: true
        required: true
      responses:
        "204":
          description: "Successful operation."
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      security:
        - jwtBearerAuth: [ ]
  /integration-instances/{id}/workflows/{workflowReferenceCode}/enable:
    post:
      description: "Enable a workflow."
      summary: "Enable a workflow"
      tags:
        - "integration-instance-workflow"
      operationId: "enableFrontendIntegrationInstanceWorkflow"
      parameters:
        - name: "id"
          description: "The id of an integration instance."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "workflowReferenceCode"
          description: "The workflow reference of the workflow to delete."
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "204":
          description: "Successful operation."
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      security:
        - jwtBearerAuth: [ ]
    delete:
      description: "Disable a workflow."
      summary: "Disable a workflow"
      tags:
        - "integration-instance-workflow"
      operationId: "disableFrontendIntegrationInstanceWorkflow"
      parameters:
        - name: "id"
          description: "The id of an integration instance."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "workflowReferenceCode"
          description: "The workflow reference of the workflow to delete."
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "204":
          description: "Successful operation."
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      security:
        - jwtBearerAuth: [ ]
  /integrations:
    get:
      description: "Get active integrations for particular external user."
      summary: "Get active integrations for particular external user"
      tags:
        - "integration"
      operationId: "getFrontendIntegrations"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
      responses:
        "200":
          description: "The list of active integrations."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/IntegrationBasic"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      security:
        - jwtBearerAuth: [ ]
  /integrations/{id}:
    get:
      description: "Get an integration by id for particular external user."
      summary: "Get an integration by id for particular external user"
      tags:
        - "integration"
      operationId: "getFrontendIntegration"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
        - name: "id"
          description: "The id of an integration."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "The integration object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Integration"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      security:
        - jwtBearerAuth: [ ]
  /integrations/{id}/instances:
    post:
      description: "Creates and configures a new integration instance that connects to the specified integration, providing access to its functionality and enabling integration with external services and systems."
      summary: "Create and configure an integration instance"
      tags:
        - "integration-instance"
      operationId: "createFrontendIntegrationInstance"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
        - name: "id"
          description: "The id of an integration."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              required:
                - "connection"
              properties:
                connection:
                  type: "object"
                  properties:
                    parameters:
                      type: "object"
                      additionalProperties: true
        required: true
      responses:
        "200":
          description: "The integration instance id."
          content:
            application/json:
              schema:
                type: "integer"
                format: "int64"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      security:
        - jwtBearerAuth: [ ]
  /{externalUserId}:
    patch:
      description: "Update data of an external user."
      summary: "Update data of an external user"
      tags:
        - "connected-user"
      operationId: "updateConnectedUser"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
        - name: "externalUserId"
          description: "The external user id."
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              additionalProperties: true
      responses:
        "204":
          description: "Successful operation."
      security:
        - bearerAuth: [ ]
  /{externalUserId}/automation/workflows:
    get:
      description: "Get automation workflows for particular external user."
      summary: "Get automation workflows for particular external user"
      tags:
        - "connected-user-project-workflow"
      operationId: "getProjectWorkflows"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
        - name: "externalUserId"
          description: "The external user id."
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "The workflow object."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ConnectedUserProjectWorkflow"
    post:
      description: "Create new workflow and adds it to an existing integration."
      summary: "Create new workflow and adds it to an existing integration"
      tags:
        - "connected-user-project-workflow"
      operationId: "createProjectWorkflow"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
        - name: "externalUserId"
          description: "The external user id."
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                definition:
                  description: The workflow definition
                  type: "string"
        required: true
      responses:
        "200":
          description: "The workflow reference code."
          content:
            application/json:
              schema:
                type: "string"
      security:
        - bearerAuth: [ ]
  /{externalUserId}/automation/workflows/{workflowReferenceCode}:
    delete:
      description: "Delete a workflow."
      summary: "Delete a workflow"
      tags:
        - "connected-user-project-workflow"
      operationId: "deleteProjectWorkflow"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
        - name: "externalUserId"
          description: "The external user id."
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "workflowReferenceCode"
          description: "The workflow reference of the workflow to delete."
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "204":
          description: "Successful operation."
    get:
      description: "Get a workflow by workflow reference code."
      summary: "Get a workflow by workflow reference code"
      tags:
        - "connected-user-project-workflow"
      operationId: "getProjectWorkflow"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
        - name: "externalUserId"
          description: "The external user id."
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "workflowReferenceCode"
          description: "The workflow reference of the workflow to delete."
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "The workflow object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectedUserProjectWorkflow"
    put:
      description: "Update an existing workflow."
      summary: "Update an existing workflow"
      tags:
        - "connected-user-project-workflow"
      operationId: "updateProjectWorkflow"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
        - name: "externalUserId"
          description: "The external user id."
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "workflowReferenceCode"
          description: "The workflow reference of the workflow to delete."
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                definition:
                  description: The workflow definition
                  type: "string"
        required: true
      responses:
        "204":
          description: "Successful operation."
      security:
        - bearerAuth: [ ]
  /{externalUserId}/automation/workflows/{workflowReferenceCode}/enable:
    post:
      description: "Enable a workflow."
      summary: "Enable a workflow"
      tags:
        - "connected-user-project-workflow"
      operationId: "enableProjectWorkflow"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
        - name: "externalUserId"
          description: "The external user id."
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "workflowReferenceCode"
          description: "The workflow reference code."
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "204":
          description: "Successful operation."
      security:
        - bearerAuth: [ ]
    delete:
      description: "Disable a workflow."
      summary: "Disable a workflow"
      tags:
        - "connected-user-project-workflow"
      operationId: "disableProjectWorkflow"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
        - name: "externalUserId"
          description: "The external user id."
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "workflowReferenceCode"
          description: "The workflow reference code."
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "204":
          description: "Successful operation."
      security:
        - bearerAuth: [ ]
  /{externalUserId}/automation/workflows/{workflowReferenceCode}/publish:
    post:
      description: "Publishes existing workflow."
      summary: "Publishes existing workflow"
      tags:
        - "connected-user-project-workflow"
      operationId: "publishProjectWorkflow"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
        - name: "externalUserId"
          description: "The external user id."
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "workflowReferenceCode"
          description: "The workflow reference code."
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: The description of a connected user project workflow version.
                  type: "string"
        required: true
      responses:
        "204":
          description: "Successful operation."
      security:
        - bearerAuth: [ ]
  /{externalUserId}/integration-instances/{id}:
    delete:
      description: "Delete an integration instance."
      summary: "Delete an integration instance"
      tags:
        - "integration-instance"
      operationId: "deleteIntegrationInstance"
      parameters:
        - name: "externalUserId"
          description: "The external user id."
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "id"
          description: "The id of an integration instance."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "204":
          description: "Successful operation."
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      security:
        - bearerAuth: [ ]
  /{externalUserId}/integration-instances/{id}/workflows/{workflowReferenceCode}:
    put:
      description: "Update a workflow for a specific integration instance."
      summary: "Update integration instance workflow"
      tags:
        - "integration-instance-workflow"
      operationId: "updateIntegrationInstanceWorkflow"
      parameters:
        - name: "externalUserId"
          description: "The external user id."
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "id"
          description: "The id of an integration instance."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "workflowReferenceCode"
          description: "The workflow reference of the workflow to delete."
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                inputs:
                  description: The workflow inputs
                  type: "object"
                  additionalProperties: true
        required: true
      responses:
        "204":
          description: "Successful operation."
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      security:
        - bearerAuth: [ ]
  /{externalUserId}/integration-instances/{id}/workflows/{workflowReferenceCode}/enable:
    post:
      description: "Enable a workflow."
      summary: "Enable a workflow"
      tags:
        - "integration-instance-workflow"
      operationId: "enableIntegrationInstanceWorkflow"
      parameters:
        - name: "externalUserId"
          description: "The external user id."
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "id"
          description: "The id of an integration instance."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "workflowReferenceCode"
          description: "The workflow reference of the workflow to delete."
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "204":
          description: "Successful operation."
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      security:
        - bearerAuth: [ ]
    delete:
      description: "Disable a workflow."
      summary: "Disable a workflow"
      tags:
        - "integration-instance-workflow"
      operationId: "disableIntegrationInstanceWorkflow"
      parameters:
        - name: "externalUserId"
          description: "The external user id."
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "id"
          description: "The id of an integration instance."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "workflowReferenceCode"
          description: "The workflow reference of the workflow to delete."
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "204":
          description: "Successful operation."
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      security:
        - jwtBearerAuth: [ ]
  /{externalUserId}/integrations:
    get:
      description: "Get active integrations for particular external user."
      summary: "Get active integrations for particular external user"
      tags:
        - "integration"
      operationId: "getIntegrations"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
        - name: "externalUserId"
          description: "The external user id."
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "The list of active integrations."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/IntegrationBasic"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      security:
        - bearerAuth: [ ]
  /{externalUserId}/integrations/{id}:
    get:
      description: "Get active integrations for particular external user."
      summary: "Get active integrations for particular external user"
      tags:
        - "integration"
      operationId: "getIntegration"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
        - name: "externalUserId"
          description: "The external user id."
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "id"
          description: "The id of an integration."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "The list of active integrations."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Integration"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      security:
        - bearerAuth: [ ]
  /{externalUserId}/integrations/{id}/instances:
    post:
      description: "Connects an integration instance to an existing integration, allowing access to its functionality and resources."
      summary: "Connect and configure an integration instance to an existing integration"
      tags:
        - "integration-instance"
      operationId: "createIntegrationInstance"
      parameters:
        - name: "X-Environment"
          description: "The environment."
          in: "header"
          required: false
          schema:
            $ref: '#/components/schemas/Environment'
        - name: "externalUserId"
          description: "The external user id."
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "id"
          description: "The id of an integration."
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              required:
                - "connection"
              properties:
                connection:
                  type: "object"
                  properties:
                    parameters:
                      type: "object"
                      additionalProperties: true
        required: true
      responses:
        "200":
          description: "The integration instance id."
          content:
            application/json:
              schema:
                type: "integer"
                format: "int64"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      security:
        - bearerAuth: [ ]
components:
  schemas:
    ConnectedUserProjectWorkflow:
      description: "A group of tasks that make one logical workflow."
      type: "object"
      required:
        - "name"
        - "tasks"
      properties:
        description:
          description: "The description of a workflow."
          type: "string"
        definition:
          description: "The definition of a workflow."
          type: "string"
        enabled:
          type: "boolean"
          description: "If a workflow is enabled or not."
        label:
          description: "The label of a workflow."
          type: "string"
        workflowReferenceCode:
          description: "The reference code of a workflow."
          type: "string"
        workflowVersion:
          type: "integer"
          description: "The workflow version, if null a workflow is not yet published"
    ConnectionConfig:
      description: "Contains all required information to open a connection to a service defined by componentName parameter."
      type: "object"
      properties:
        authorizationType:
          $ref: "../../../../../libs/platform/platform-configuration/platform-configuration-rest/platform-configuration-rest-impl/openapi.yaml#/components/schemas/AuthorizationType"
        inputs:
          type: array
          items:
            $ref: "#/components/schemas/Input"
        oauth2:
          $ref: "#/components/schemas/OAuth2"
    Environment:
      $ref: "../../../../../libs/platform/platform-rest/openapi/components/schemas/objects/environment.yaml"
    IntegrationBasic:
      description: "A group of workflows that make one logical integration for a particular service represented by component."
      type: "object"
      required:
        - "credentialStatus"
        - "icon"
        - "componentName"
        - "multipleInstances"
        - "enabled"
      properties:
        componentName:
          description: "The name of the integration's component."
          type: "string"
        description:
          description: "The description of a project."
          type: "string"
        icon:
          description: "The icon."
          type: "string"
        id:
          description: "The id of an integration."
          type: "integer"
          format: "int64"
        integrationInstances:
          description: "The list of integration instances that represent configured and connected integrations for specific users"
          type: "array"
          items:
            $ref: "#/components/schemas/IntegrationInstance"
        integrationVersion:
          description: "The version of an integration."
          type: "integer"
        multipleInstances:
          description: "If multiple instances of an integration are allowed or not."
          type: "boolean"
          default: false
        name:
          description: "The name of an integration."
          type: "string"
    Integration:
      description: "A group of workflows that make one logical integration for a particular service represented by component."
      allOf:
        - $ref: "#/components/schemas/IntegrationBasic"
        - type: object
          properties:
            connectionConfig:
              $ref: "#/components/schemas/ConnectionConfig"
            workflows:
              description: "The list of workflows."
              type: "array"
              items:
                $ref: "#/components/schemas/IntegrationWorkflow"
    IntegrationInstanceBasic:
      description: "The integration instance represents a configured integration for a specific user, containing connection and status information"
      type: "object"
      required:
        - "enabled"
      properties:
        id:
          description: "The id of an integration instance."
          type: "integer"
          format: "int64"
        credentialStatus:
          $ref: "../../../../../libs/platform/platform-connection/platform-connection-rest/openapi/components/schemas/objects/credential_status.yaml"
        enabled:
          description: "If an integration instance is enabled or not"
          type: "boolean"
    IntegrationInstance:
      description: "The integration instance represents a configured integration for a specific user, containing connection and status information"
      type: "object"
      allOf:
        - $ref: "#/components/schemas/IntegrationInstanceBasic"
        - type: "object"
          properties:
            workflows:
              type: "array"
              items:
                $ref: '#/components/schemas/IntegrationInstanceWorkflow'
    IntegrationInstanceWorkflow:
      description: "A workflow data for particular integration instance."
      type: "object"
      properties:
        enabled:
          type: "boolean"
          description: "If a workflow is enabled or not."
        inputs:
          type: "object"
          additionalProperties: true
        workflowReferenceCode:
          description: "The reference code of a workflow."
          type: "string"
    IntegrationWorkflow:
      description: "A group of tasks that make one logical workflow."
      type: "object"
      required:
        - "name"
        - "tasks"
      properties:
        description:
          description: "The description of a workflow."
          type: "string"
        inputs:
          type: array
          items:
            $ref: "#/components/schemas/Input"
        label:
          description: "The label of a workflow."
          type: "string"
        workflowReferenceCode:
          description: "The reference code of a workflow."
          type: "string"
    Input:
      type: "object"
      required:
        - "name"
        - "value"
        - "type"
      properties:
        label:
          description: "The descriptive name of an input"
          type: "string"
        name:
          description: "The name of an input"
          type: "string"
        required:
          description: "If an input is required, or not"
          type: "boolean"
          default: false
        type:
          $ref: "#/components/schemas/InputType"
    InputType:
      description: "The type of an input, for example \\\"STRING\\\""
      type: "string"
      default: "STRING"
      enum:
        - "BOOLEAN"
        - "DATE"
        - "DATE_TIME"
        - "INTEGER"
        - "NUMBER"
        - "STRING"
        - "TIME"
    OAuth2:
      type: "object"
      properties:
        authorizationUrl:
          type: "string"
        extraQueryParameters:
          type: "object"
          additionalProperties:
            type: "string"
        clientId:
          type: "string"
        redirectUri:
          description: "The redirect URI used for OAuth2 callback URL."
          type: "string"
        scopes:
          type: "array"
          items:
            type: "string"
    Workflow:
      description: "A group of tasks that make one logical workflow."
      type: "object"
      required:
        - "name"
        - "tasks"
      properties:
        description:
          description: "The description of a workflow."
          type: "string"
        definition:
          description: "The definition of a workflow."
          type: "string"
        label:
          description: "The label of a workflow."
          type: "string"
        workflowReferenceCode:
          description: "The reference code of a workflow."
          type: "string"
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    jwtBearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
