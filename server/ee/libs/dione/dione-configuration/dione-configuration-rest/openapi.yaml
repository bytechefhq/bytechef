---
openapi: "3.0.1"
info:
  title: "Integration Configuration API"
  version: "1"
servers:
- url: "http://localhost:5173/api"
tags:
- name: "integration-category"
  description: "The Integration Category API"
- name: "integration-tag"
  description: "The Integration Tag API"
- name: "integration"
  description: "The Integration API"
- name: "integration-workflow"
  description: "The Integration Workflow API"
paths:
  /integration-categories:
    get:
      description: "Get integration categories."
      summary: "Get integration categories"
      tags:
      - "integration-category"
      operationId: "getIntegrationCategories"
      responses:
        "200":
          description: "A list of categories."
          content:
            application/json:
              schema:
                description: "The response object that contains the array of categories."
                type: "array"
                items:
                  $ref: "#/components/schemas/Category"
  /integrations:
    get:
      description: "Get integrations."
      summary: "Get integrations"
      tags:
      - "integration"
      operationId: "getIntegrations"
      parameters:
      - name: "categoryId"
        description: "The category id used for filtering integrations."
        in: "query"
        required: false
        schema:
          type: "integer"
          format: "int64"
      - name: "tagId"
        description: "The tag id of used for filtering integrations."
        in: "query"
        required: false
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "A list of integrations."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Integration"
    post:
      description: "Create a new integration."
      summary: "Create a new integration"
      tags:
      - "integration"
      operationId: "createIntegration"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Integration"
        required: true
      responses:
        "200":
          description: "The integration object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Integration"
  /integrations/{id}:
    delete:
      description: "Delete an integration."
      summary: "Delete an integration"
      tags:
      - "integration"
      operationId: "deleteIntegration"
      parameters:
      - name: "id"
        description: "The id of an integration."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "Successful operation."
    get:
      description: "Get an integration by id."
      summary: "Get an integration by id"
      tags:
      - "integration"
      operationId: "getIntegration"
      parameters:
      - name: "id"
        description: "The id of an integration."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "The integration object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Integration"
    put:
      description: "Update an existing integration."
      summary: "Update an existing integration"
      tags:
      - "integration"
      operationId: "updateIntegration"
      parameters:
      - name: "id"
        description: "The id of an integration."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Integration"
        required: true
      responses:
        "200":
          description: "The updated integration object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Integration"
  /integrations/{id}/integration-workflows:
    get:
      description: "Get integration workflows for particular integration."
      summary: "Get integration workflows for particular integration"
      tags:
      - "integration-workflow"
      operationId: "getIntegrationWorkflows"
      parameters:
      - name: "id"
        description: "The id of an integration."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "The updated integration object."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Workflow"
    post:
      description: "Create new workflow and adds it to an existing integration."
      summary: "Create new workflow and adds it to an existing integration"
      tags:
      - "integration"
      operationId: "createIntegrationWorkflow"
      parameters:
      - name: "id"
        description: "The id of an integration."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              required:
              - "label"
              properties:
                label:
                  description: "The descriptive name for a workflow."
                  type: "string"
                description:
                  description: "The workflow description."
                  type: "string"
                definition:
                  description: "The workflow definition."
                  type: "string"
        required: true
      responses:
        "200":
          description: "The updated integration object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workflow"
  /integrations/{id}/integration-tags:
    put:
      description: "Updates tags of an existing integration."
      summary: "Updates tags of an existing integration"
      tags:
      - "integration-tag"
      operationId: "updateIntegrationTags"
      parameters:
      - name: "id"
        description: "The id of an integration."
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTagsRequest"
        required: true
      responses:
        "200":
          description: "Successful operation."
  /integration-tags:
    get:
      description: "Get integration tags."
      summary: "Get integration tags"
      tags:
      - "integration-tag"
      operationId: "getIntegrationTags"
      responses:
        "200":
          description: "A list of integration tags."
          content:
            application/json:
              schema:
                description: "The response object that contains the array of tags."
                type: "array"
                items:
                  $ref: "#/components/schemas/Tag"
  /integration-workflows:
    get:
      description: "Get integration workflow definitions."
      summary: "Get integration workflow definitions"
      tags:
      - "integration-workflow"
      operationId: "getWorkflows"
      responses:
        "200":
          description: "A list of workflows."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Workflow"
  /integration-workflows/{id}:
    delete:
      description: "Delete a workflow."
      summary: "Delete a workflow"
      tags:
      - "integration-workflow"
      operationId: "deleteWorkflow"
      parameters:
      - name: "id"
        description: "The id of the workflow to delete."
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful operation."
    get:
      description: "Get a workflow by id."
      summary: "Get a workflow by id"
      tags:
      - "integration-workflow"
      operationId: "getWorkflow"
      parameters:
      - name: "id"
        description: "The id of the workflow to get."
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "The workflow object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workflow"
    put:
      description: "Update an existing workflow."
      summary: "Update an existing workflow"
      tags:
      - "integration-workflow"
      operationId: "updateWorkflow"
      parameters:
      - name: "id"
        description: "The id of the workflow to update."
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "The workflow object that needs to updated."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Workflow"
        required: true
      responses:
        "200":
          description: "The updated workflow object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workflow"
components:
  schemas:
    Category:
      description: "A category."
      required:
      - "name"
      properties:
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        id:
          description: "The id of the category."
          type: "integer"
          format: "int64"
        name:
          description: "The name of the category."
          type: "string"
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        __version:
          type: "integer"
          format: "int32"
    Input:
      type: "object"
      required:
      - "name"
      - "value"
      properties:
        label:
          description: "The descriptive name of an input"
          type: "string"
        name:
          description: "The name of an input"
          type: "string"
        required:
          description: "If an input is required, or not"
          type: "boolean"
          default: false
        type:
          description: "The type of an input, for example \\\"string\\\""
          type: "string"
    Integration:
      description: "A group of workflows that make one logical integration."
      type: "object"
      required:
      - "name"
      properties:
        category:
          $ref: "#/components/schemas/Category"
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        id:
          description: "The id of an integration."
          type: "integer"
          format: "int64"
          readOnly: true
        name:
          description: "The name of the integration."
          type: "string"
        description:
          description: "The description of the integration."
          type: "string"
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        publishedDate:
          description: "The published date."
          type: "string"
          format: "date-time"
        integrationVersion:
          description: "The version of an integration."
          type: "integer"
        status:
          description: "A status of an integration."
          type: "string"
          enum:
          - "PUBLISHED"
          - "UNPUBLISHED"
        tags:
          type: "array"
          items:
            $ref: "#/components/schemas/Tag"
        workflowIds:
          description: "The workflow ids belonging to this integration."
          type: "array"
          items:
            type: "string"
            readOnly: true
        __version:
          type: "integer"
    Output:
      type: "object"
      required:
      - "name"
      - "value"
      properties:
        name:
          description: "The name of an output"
          type: "string"
        value:
          description: "The value of an output"
          type: "object"
    Tag:
      description: "A tag."
      required:
      - "name"
      properties:
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        id:
          description: "The id of the tag."
          type: "integer"
          format: "int64"
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        name:
          description: "The name of the tag."
          type: "string"
        __version:
          type: "integer"
    UpdateTagsRequest:
      description: "The request object that contains the array of tags."
      type: "object"
      properties:
        tags:
          type: "array"
          items:
            $ref: "#/components/schemas/Tag"
    Workflow:
      description: "The blueprint that describe the execution of a job."
      type: "object"
      properties:
        createdBy:
          description: "The created by."
          type: "string"
          readOnly: true
        createdDate:
          description: "The created date."
          type: "string"
          format: "date-time"
          readOnly: true
        definition:
          description: "The definition of a workflow."
          type: "string"
          writeOnly: true
        description:
          description: "The description of a workflow."
          type: "string"
          writeOnly: true
        format:
          $ref: "#/components/schemas/WorkflowFormat"
        id:
          description: "The id of the workflow."
          type: "string"
          readOnly: true
        inputs:
          description: "The workflow's expected list of inputs."
          type: "array"
          items:
            $ref: "#/components/schemas/Input"
          readOnly: true
        label:
          description: "The descriptive name for the workflow"
          type: "string"
          readOnly: true
        lastModifiedBy:
          description: "The last modified by."
          type: "string"
          readOnly: true
        lastModifiedDate:
          description: "The last modified date."
          type: "string"
          format: "date-time"
          readOnly: true
        outputs:
          description: "The workflow's list of expected outputs."
          type: "array"
          items:
            $ref: "#/components/schemas/Output"
          readOnly: true
        sourceType:
          description: "The type of the source which stores the workflow definition."
          type: "string"
          enum:
          - "CLASSPATH"
          - "FILESYSTEM"
          - "GIT"
          - "JDBC"
        maxRetries:
          description: "The maximum number of times a task may retry."
          type: "integer"
          format: "int32"
          readOnly: true
        tasks:
          description: "The steps that make up the workflow."
          type: "array"
          items:
            $ref: "#/components/schemas/WorkflowTask"
          readOnly: true
        __version:
          type: "integer"
    WorkflowConnection:
      type: "object"
      required:
      - "componentName"
      - "componentVersion"
      - "key"
      - "operationName"
      properties:
        componentName:
          type: "string"
        componentVersion:
          type: "integer"
        key:
          type: "string"
        operationName:
          type: "string"
    WorkflowFormat:
      type: "string"
      enum:
      - "JSON"
      - "YAML"
    WorkflowTask:
      description: "Represents a definition of the task."
      type: "object"
      required:
      - "name"
      - "type"
      properties:
        finalize:
          description: "The (optional) list of tasks that are to be executed after\
            \ execution of a task -- regardless of whether it had failed or not."
          type: "array"
          items:
            $ref: "#/components/schemas/WorkflowTask"
        label:
          description: "The human-readable description of the task."
          type: "string"
        name:
          description: "The identifier name of the task. Task names are used for assigning\
            \ the output of one task so it can be later used by subsequent tasks."
          type: "string"
        node:
          description: "Defines the name of the type of the node that the task execution\
            \ will be routed to. For instance, if the node value is \"encoder\", then\
            \ the task will be routed to the \"encoder\" queue which is presumably\
            \ subscribed to by worker nodes of \"encoder\" type."
          type: "string"
        parameters:
          description: "Key-value map of task parameters."
          type: "object"
          additionalProperties:
            type: "object"
        post:
          description: "The (optional) list of tasks that are to be executed after\
            \ the successful execution of a task."
          type: "array"
          items:
            $ref: "#/components/schemas/WorkflowTask"
        pre:
          description: "The (optional) list of tasks that are to be executed prior\
            \ to a task."
          type: "array"
          items:
            $ref: "#/components/schemas/WorkflowTask"
        timeout:
          description: "The timeout expression which describes when a task should\
            \ be deemed as timed-out."
          type: "string"
        type:
          description: "Type of the task."
          type: "string"
