/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ExecutionError } from './ExecutionError';
import {
    ExecutionErrorFromJSON,
    ExecutionErrorFromJSONTyped,
    ExecutionErrorToJSON,
} from './ExecutionError';
import type { WorkflowTask } from './WorkflowTask';
import {
    WorkflowTaskFromJSON,
    WorkflowTaskFromJSONTyped,
    WorkflowTaskToJSON,
} from './WorkflowTask';

/**
 * 
 * @export
 * @interface TaskExecution
 */
export interface TaskExecution {
    /**
     * 
     * @type {string}
     * @memberof TaskExecution
     */
    readonly createdBy?: string;
    /**
     * 
     * @type {Date}
     * @memberof TaskExecution
     */
    readonly createdDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof TaskExecution
     */
    endTime?: Date;
    /**
     * 
     * @type {ExecutionError}
     * @memberof TaskExecution
     */
    error?: ExecutionError;
    /**
     * 
     * @type {number}
     * @memberof TaskExecution
     */
    executionTime?: number;
    /**
     * 
     * @type {string}
     * @memberof TaskExecution
     */
    readonly id?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskExecution
     */
    jobId?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskExecution
     */
    readonly lastModifiedBy?: string;
    /**
     * 
     * @type {Date}
     * @memberof TaskExecution
     */
    readonly lastModifiedDate?: Date;
    /**
     * 
     * @type {object}
     * @memberof TaskExecution
     */
    output?: object;
    /**
     * 
     * @type {string}
     * @memberof TaskExecution
     */
    parentId?: string;
    /**
     * 
     * @type {number}
     * @memberof TaskExecution
     */
    priority?: number;
    /**
     * 
     * @type {number}
     * @memberof TaskExecution
     */
    progress?: number;
    /**
     * 
     * @type {number}
     * @memberof TaskExecution
     */
    retry?: number;
    /**
     * 
     * @type {number}
     * @memberof TaskExecution
     */
    retryAttempts?: number;
    /**
     * 
     * @type {string}
     * @memberof TaskExecution
     */
    retryDelay?: string;
    /**
     * 
     * @type {number}
     * @memberof TaskExecution
     */
    retryDelayFactor?: number;
    /**
     * 
     * @type {Date}
     * @memberof TaskExecution
     */
    startTime?: Date;
    /**
     * 
     * @type {string}
     * @memberof TaskExecution
     */
    status?: TaskExecutionStatusEnum;
    /**
     * 
     * @type {number}
     * @memberof TaskExecution
     */
    taskNumber?: number;
    /**
     * 
     * @type {WorkflowTask}
     * @memberof TaskExecution
     */
    workflowTask?: WorkflowTask;
    /**
     * 
     * @type {number}
     * @memberof TaskExecution
     */
    retryDelayMillis?: number;
    /**
     * 
     * @type {string}
     * @memberof TaskExecution
     */
    type?: string;
}


/**
 * @export
 */
export const TaskExecutionStatusEnum = {
    Created: 'CREATED',
    Started: 'STARTED',
    Failed: 'FAILED',
    Cancelled: 'CANCELLED',
    Completed: 'COMPLETED'
} as const;
export type TaskExecutionStatusEnum = typeof TaskExecutionStatusEnum[keyof typeof TaskExecutionStatusEnum];


/**
 * Check if a given object implements the TaskExecution interface.
 */
export function instanceOfTaskExecution(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TaskExecutionFromJSON(json: any): TaskExecution {
    return TaskExecutionFromJSONTyped(json, false);
}

export function TaskExecutionFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskExecution {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdBy': !exists(json, 'createdBy') ? undefined : json['createdBy'],
        'createdDate': !exists(json, 'createdDate') ? undefined : (new Date(json['createdDate'])),
        'endTime': !exists(json, 'endTime') ? undefined : (new Date(json['endTime'])),
        'error': !exists(json, 'error') ? undefined : ExecutionErrorFromJSON(json['error']),
        'executionTime': !exists(json, 'executionTime') ? undefined : json['executionTime'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'jobId': !exists(json, 'jobId') ? undefined : json['jobId'],
        'lastModifiedBy': !exists(json, 'lastModifiedBy') ? undefined : json['lastModifiedBy'],
        'lastModifiedDate': !exists(json, 'lastModifiedDate') ? undefined : (new Date(json['lastModifiedDate'])),
        'output': !exists(json, 'output') ? undefined : json['output'],
        'parentId': !exists(json, 'parentId') ? undefined : json['parentId'],
        'priority': !exists(json, 'priority') ? undefined : json['priority'],
        'progress': !exists(json, 'progress') ? undefined : json['progress'],
        'retry': !exists(json, 'retry') ? undefined : json['retry'],
        'retryAttempts': !exists(json, 'retryAttempts') ? undefined : json['retryAttempts'],
        'retryDelay': !exists(json, 'retryDelay') ? undefined : json['retryDelay'],
        'retryDelayFactor': !exists(json, 'retryDelayFactor') ? undefined : json['retryDelayFactor'],
        'startTime': !exists(json, 'startTime') ? undefined : (new Date(json['startTime'])),
        'status': !exists(json, 'status') ? undefined : json['status'],
        'taskNumber': !exists(json, 'taskNumber') ? undefined : json['taskNumber'],
        'workflowTask': !exists(json, 'workflowTask') ? undefined : WorkflowTaskFromJSON(json['workflowTask']),
        'retryDelayMillis': !exists(json, 'retryDelayMillis') ? undefined : json['retryDelayMillis'],
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function TaskExecutionToJSON(value?: TaskExecution | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'endTime': value.endTime === undefined ? undefined : (value.endTime.toISOString()),
        'error': ExecutionErrorToJSON(value.error),
        'executionTime': value.executionTime,
        'jobId': value.jobId,
        'output': value.output,
        'parentId': value.parentId,
        'priority': value.priority,
        'progress': value.progress,
        'retry': value.retry,
        'retryAttempts': value.retryAttempts,
        'retryDelay': value.retryDelay,
        'retryDelayFactor': value.retryDelayFactor,
        'startTime': value.startTime === undefined ? undefined : (value.startTime.toISOString()),
        'status': value.status,
        'taskNumber': value.taskNumber,
        'workflowTask': WorkflowTaskToJSON(value.workflowTask),
        'retryDelayMillis': value.retryDelayMillis,
        'type': value.type,
    };
}

