/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ComponentActionInputsInner } from './ComponentActionInputsInner';
import {
    ComponentActionInputsInnerFromJSON,
    ComponentActionInputsInnerFromJSONTyped,
    ComponentActionInputsInnerToJSON,
} from './ComponentActionInputsInner';
import type { Display } from './Display';
import {
    DisplayFromJSON,
    DisplayFromJSONTyped,
    DisplayToJSON,
} from './Display';

/**
 * 
 * @export
 * @interface ComponentAction
 */
export interface ComponentAction {
    /**
     * 
     * @type {Display}
     * @memberof ComponentAction
     */
    display?: Display;
    /**
     * 
     * @type {string}
     * @memberof ComponentAction
     */
    name?: string;
    /**
     * 
     * @type {Array<ComponentActionInputsInner>}
     * @memberof ComponentAction
     */
    inputs?: Array<ComponentActionInputsInner>;
    /**
     * 
     * @type {object}
     * @memberof ComponentAction
     */
    exampleOutput?: object;
    /**
     * 
     * @type {Array<ComponentActionInputsInner>}
     * @memberof ComponentAction
     */
    outputSchema?: Array<ComponentActionInputsInner>;
}

/**
 * Check if a given object implements the ComponentAction interface.
 */
export function instanceOfComponentAction(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ComponentActionFromJSON(json: any): ComponentAction {
    return ComponentActionFromJSONTyped(json, false);
}

export function ComponentActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComponentAction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'display': !exists(json, 'display') ? undefined : DisplayFromJSON(json['display']),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'inputs': !exists(json, 'inputs') ? undefined : ((json['inputs'] as Array<any>).map(ComponentActionInputsInnerFromJSON)),
        'exampleOutput': !exists(json, 'exampleOutput') ? undefined : json['exampleOutput'],
        'outputSchema': !exists(json, 'outputSchema') ? undefined : ((json['outputSchema'] as Array<any>).map(ComponentActionInputsInnerFromJSON)),
    };
}

export function ComponentActionToJSON(value?: ComponentAction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'display': DisplayToJSON(value.display),
        'name': value.name,
        'inputs': value.inputs === undefined ? undefined : ((value.inputs as Array<any>).map(ComponentActionInputsInnerToJSON)),
        'exampleOutput': value.exampleOutput,
        'outputSchema': value.outputSchema === undefined ? undefined : ((value.outputSchema as Array<any>).map(ComponentActionInputsInnerToJSON)),
    };
}

