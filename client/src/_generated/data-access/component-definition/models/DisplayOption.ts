/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DisplayOptionEntryValue } from './DisplayOptionEntryValue';
import {
    DisplayOptionEntryValueFromJSON,
    DisplayOptionEntryValueFromJSONTyped,
    DisplayOptionEntryValueToJSON,
} from './DisplayOptionEntryValue';

/**
 * 
 * @export
 * @interface DisplayOption
 */
export interface DisplayOption {
    /**
     * 
     * @type {{ [key: string]: DisplayOptionEntryValue; }}
     * @memberof DisplayOption
     */
    hideWhen?: { [key: string]: DisplayOptionEntryValue; };
    /**
     * 
     * @type {{ [key: string]: DisplayOptionEntryValue; }}
     * @memberof DisplayOption
     */
    showWhen?: { [key: string]: DisplayOptionEntryValue; };
}

/**
 * Check if a given object implements the DisplayOption interface.
 */
export function instanceOfDisplayOption(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DisplayOptionFromJSON(json: any): DisplayOption {
    return DisplayOptionFromJSONTyped(json, false);
}

export function DisplayOptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): DisplayOption {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hideWhen': !exists(json, 'hideWhen') ? undefined : (mapValues(json['hideWhen'], DisplayOptionEntryValueFromJSON)),
        'showWhen': !exists(json, 'showWhen') ? undefined : (mapValues(json['showWhen'], DisplayOptionEntryValueFromJSON)),
    };
}

export function DisplayOptionToJSON(value?: DisplayOption | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hideWhen': value.hideWhen === undefined ? undefined : (mapValues(value.hideWhen, DisplayOptionEntryValueToJSON)),
        'showWhen': value.showWhen === undefined ? undefined : (mapValues(value.showWhen, DisplayOptionEntryValueToJSON)),
    };
}

