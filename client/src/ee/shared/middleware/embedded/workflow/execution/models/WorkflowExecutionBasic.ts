/* tslint:disable */
/* eslint-disable */
/**
 * Embedded Execution Internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WorkflowBasic } from './WorkflowBasic';
import {
    WorkflowBasicFromJSON,
    WorkflowBasicFromJSONTyped,
    WorkflowBasicToJSON,
    WorkflowBasicToJSONTyped,
} from './WorkflowBasic';
import type { JobBasic } from './JobBasic';
import {
    JobBasicFromJSON,
    JobBasicFromJSONTyped,
    JobBasicToJSON,
    JobBasicToJSONTyped,
} from './JobBasic';
import type { IntegrationBasic } from './IntegrationBasic';
import {
    IntegrationBasicFromJSON,
    IntegrationBasicFromJSONTyped,
    IntegrationBasicToJSON,
    IntegrationBasicToJSONTyped,
} from './IntegrationBasic';
import type { IntegrationInstanceConfigurationBasic } from './IntegrationInstanceConfigurationBasic';
import {
    IntegrationInstanceConfigurationBasicFromJSON,
    IntegrationInstanceConfigurationBasicFromJSONTyped,
    IntegrationInstanceConfigurationBasicToJSON,
    IntegrationInstanceConfigurationBasicToJSONTyped,
} from './IntegrationInstanceConfigurationBasic';
import type { IntegrationInstanceBasic } from './IntegrationInstanceBasic';
import {
    IntegrationInstanceBasicFromJSON,
    IntegrationInstanceBasicFromJSONTyped,
    IntegrationInstanceBasicToJSON,
    IntegrationInstanceBasicToJSONTyped,
} from './IntegrationInstanceBasic';

/**
 * Contains information about execution of a Integration workflow.
 * @export
 * @interface WorkflowExecutionBasic
 */
export interface WorkflowExecutionBasic {
    /**
     * The id of a workflow execution.
     * @type {number}
     * @memberof WorkflowExecutionBasic
     */
    readonly id: number;
    /**
     * 
     * @type {IntegrationBasic}
     * @memberof WorkflowExecutionBasic
     */
    integration: IntegrationBasic;
    /**
     * 
     * @type {IntegrationInstanceConfigurationBasic}
     * @memberof WorkflowExecutionBasic
     */
    integrationInstanceConfiguration: IntegrationInstanceConfigurationBasic;
    /**
     * 
     * @type {IntegrationInstanceBasic}
     * @memberof WorkflowExecutionBasic
     */
    integrationInstance: IntegrationInstanceBasic;
    /**
     * 
     * @type {JobBasic}
     * @memberof WorkflowExecutionBasic
     */
    job: JobBasic;
    /**
     * 
     * @type {WorkflowBasic}
     * @memberof WorkflowExecutionBasic
     */
    workflow: WorkflowBasic;
}

/**
 * Check if a given object implements the WorkflowExecutionBasic interface.
 */
export function instanceOfWorkflowExecutionBasic(value: object): value is WorkflowExecutionBasic {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('integration' in value) || value['integration'] === undefined) return false;
    if (!('integrationInstanceConfiguration' in value) || value['integrationInstanceConfiguration'] === undefined) return false;
    if (!('integrationInstance' in value) || value['integrationInstance'] === undefined) return false;
    if (!('job' in value) || value['job'] === undefined) return false;
    if (!('workflow' in value) || value['workflow'] === undefined) return false;
    return true;
}

export function WorkflowExecutionBasicFromJSON(json: any): WorkflowExecutionBasic {
    return WorkflowExecutionBasicFromJSONTyped(json, false);
}

export function WorkflowExecutionBasicFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowExecutionBasic {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'integration': IntegrationBasicFromJSON(json['integration']),
        'integrationInstanceConfiguration': IntegrationInstanceConfigurationBasicFromJSON(json['integrationInstanceConfiguration']),
        'integrationInstance': IntegrationInstanceBasicFromJSON(json['integrationInstance']),
        'job': JobBasicFromJSON(json['job']),
        'workflow': WorkflowBasicFromJSON(json['workflow']),
    };
}

export function WorkflowExecutionBasicToJSON(json: any): WorkflowExecutionBasic {
    return WorkflowExecutionBasicToJSONTyped(json, false);
}

export function WorkflowExecutionBasicToJSONTyped(value?: Omit<WorkflowExecutionBasic, 'id'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'integration': IntegrationBasicToJSON(value['integration']),
        'integrationInstanceConfiguration': IntegrationInstanceConfigurationBasicToJSON(value['integrationInstanceConfiguration']),
        'integrationInstance': IntegrationInstanceBasicToJSON(value['integrationInstance']),
        'job': JobBasicToJSON(value['job']),
        'workflow': WorkflowBasicToJSON(value['workflow']),
    };
}

