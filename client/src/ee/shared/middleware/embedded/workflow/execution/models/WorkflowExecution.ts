/* tslint:disable */
/* eslint-disable */
/**
 * Embedded Execution Internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WorkflowBasic } from './WorkflowBasic';
import {
    WorkflowBasicFromJSON,
    WorkflowBasicFromJSONTyped,
    WorkflowBasicToJSON,
    WorkflowBasicToJSONTyped,
} from './WorkflowBasic';
import type { IntegrationInstanceConfiguration } from './IntegrationInstanceConfiguration';
import {
    IntegrationInstanceConfigurationFromJSON,
    IntegrationInstanceConfigurationFromJSONTyped,
    IntegrationInstanceConfigurationToJSON,
    IntegrationInstanceConfigurationToJSONTyped,
} from './IntegrationInstanceConfiguration';
import type { TriggerExecution } from './TriggerExecution';
import {
    TriggerExecutionFromJSON,
    TriggerExecutionFromJSONTyped,
    TriggerExecutionToJSON,
    TriggerExecutionToJSONTyped,
} from './TriggerExecution';
import type { IntegrationBasic } from './IntegrationBasic';
import {
    IntegrationBasicFromJSON,
    IntegrationBasicFromJSONTyped,
    IntegrationBasicToJSON,
    IntegrationBasicToJSONTyped,
} from './IntegrationBasic';
import type { IntegrationInstanceBasic } from './IntegrationInstanceBasic';
import {
    IntegrationInstanceBasicFromJSON,
    IntegrationInstanceBasicFromJSONTyped,
    IntegrationInstanceBasicToJSON,
    IntegrationInstanceBasicToJSONTyped,
} from './IntegrationInstanceBasic';
import type { Job } from './Job';
import {
    JobFromJSON,
    JobFromJSONTyped,
    JobToJSON,
    JobToJSONTyped,
} from './Job';

/**
 * Contains information about execution of a Integration workflow.
 * @export
 * @interface WorkflowExecution
 */
export interface WorkflowExecution {
    /**
     * The id of a workflow execution.
     * @type {number}
     * @memberof WorkflowExecution
     */
    readonly id: number;
    /**
     * 
     * @type {IntegrationBasic}
     * @memberof WorkflowExecution
     */
    integration: IntegrationBasic;
    /**
     * 
     * @type {IntegrationInstanceConfiguration}
     * @memberof WorkflowExecution
     */
    integrationInstanceConfiguration: IntegrationInstanceConfiguration;
    /**
     * 
     * @type {IntegrationInstanceBasic}
     * @memberof WorkflowExecution
     */
    integrationInstance: IntegrationInstanceBasic;
    /**
     * 
     * @type {Job}
     * @memberof WorkflowExecution
     */
    job: Job;
    /**
     * 
     * @type {TriggerExecution}
     * @memberof WorkflowExecution
     */
    triggerExecution?: TriggerExecution;
    /**
     * 
     * @type {WorkflowBasic}
     * @memberof WorkflowExecution
     */
    workflow: WorkflowBasic;
}

/**
 * Check if a given object implements the WorkflowExecution interface.
 */
export function instanceOfWorkflowExecution(value: object): value is WorkflowExecution {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('integration' in value) || value['integration'] === undefined) return false;
    if (!('integrationInstanceConfiguration' in value) || value['integrationInstanceConfiguration'] === undefined) return false;
    if (!('integrationInstance' in value) || value['integrationInstance'] === undefined) return false;
    if (!('job' in value) || value['job'] === undefined) return false;
    if (!('workflow' in value) || value['workflow'] === undefined) return false;
    return true;
}

export function WorkflowExecutionFromJSON(json: any): WorkflowExecution {
    return WorkflowExecutionFromJSONTyped(json, false);
}

export function WorkflowExecutionFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowExecution {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'integration': IntegrationBasicFromJSON(json['integration']),
        'integrationInstanceConfiguration': IntegrationInstanceConfigurationFromJSON(json['integrationInstanceConfiguration']),
        'integrationInstance': IntegrationInstanceBasicFromJSON(json['integrationInstance']),
        'job': JobFromJSON(json['job']),
        'triggerExecution': json['triggerExecution'] == null ? undefined : TriggerExecutionFromJSON(json['triggerExecution']),
        'workflow': WorkflowBasicFromJSON(json['workflow']),
    };
}

export function WorkflowExecutionToJSON(json: any): WorkflowExecution {
    return WorkflowExecutionToJSONTyped(json, false);
}

export function WorkflowExecutionToJSONTyped(value?: Omit<WorkflowExecution, 'id'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'integration': IntegrationBasicToJSON(value['integration']),
        'integrationInstanceConfiguration': IntegrationInstanceConfigurationToJSON(value['integrationInstanceConfiguration']),
        'integrationInstance': IntegrationInstanceBasicToJSON(value['integrationInstance']),
        'job': JobToJSON(value['job']),
        'triggerExecution': TriggerExecutionToJSON(value['triggerExecution']),
        'workflow': WorkflowBasicToJSON(value['workflow']),
    };
}

