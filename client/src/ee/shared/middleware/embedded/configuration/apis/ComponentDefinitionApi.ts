/* tslint:disable */
/* eslint-disable */
/**
 * The Embedded Configuration Internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ComponentDefinitionBasic,
} from '../models/index';
import {
    ComponentDefinitionBasicFromJSON,
    ComponentDefinitionBasicToJSON,
} from '../models/index';

export interface GetComponentDefinitionsRequest {
    actionDefinitions?: boolean;
    connectionDefinitions?: boolean;
    triggerDefinitions?: boolean;
    include?: Array<string>;
}

/**
 * 
 */
export class ComponentDefinitionApi extends runtime.BaseAPI {

    /**
     * Get all component definitions.
     * Get all component definitions
     */
    async getComponentDefinitionsRaw(requestParameters: GetComponentDefinitionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ComponentDefinitionBasic>>> {
        const queryParameters: any = {};

        if (requestParameters['actionDefinitions'] != null) {
            queryParameters['actionDefinitions'] = requestParameters['actionDefinitions'];
        }

        if (requestParameters['connectionDefinitions'] != null) {
            queryParameters['connectionDefinitions'] = requestParameters['connectionDefinitions'];
        }

        if (requestParameters['triggerDefinitions'] != null) {
            queryParameters['triggerDefinitions'] = requestParameters['triggerDefinitions'];
        }

        if (requestParameters['include'] != null) {
            queryParameters['include'] = requestParameters['include'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/component-definitions`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ComponentDefinitionBasicFromJSON));
    }

    /**
     * Get all component definitions.
     * Get all component definitions
     */
    async getComponentDefinitions(requestParameters: GetComponentDefinitionsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ComponentDefinitionBasic>> {
        const response = await this.getComponentDefinitionsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
