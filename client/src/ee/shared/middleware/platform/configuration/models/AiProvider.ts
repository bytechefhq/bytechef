/* tslint:disable */
/* eslint-disable */
/**
 * The Platform Internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * An AI provider.
 * @export
 * @interface AiProvider
 */
export interface AiProvider {
    /**
     * The id of an AI provider.
     * @type {number}
     * @memberof AiProvider
     */
    readonly id?: number;
    /**
     * The name of an AI provider.
     * @type {string}
     * @memberof AiProvider
     */
    readonly name: string;
    /**
     * The icon of an AI provider.
     * @type {string}
     * @memberof AiProvider
     */
    readonly icon?: string;
    /**
     * The API key of an AI provider.
     * @type {string}
     * @memberof AiProvider
     */
    apiKey?: string;
    /**
     * The enabled status of an AI provider.
     * @type {boolean}
     * @memberof AiProvider
     */
    enabled?: boolean;
}

/**
 * Check if a given object implements the AiProvider interface.
 */
export function instanceOfAiProvider(value: object): value is AiProvider {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function AiProviderFromJSON(json: any): AiProvider {
    return AiProviderFromJSONTyped(json, false);
}

export function AiProviderFromJSONTyped(json: any, ignoreDiscriminator: boolean): AiProvider {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'],
        'icon': json['icon'] == null ? undefined : json['icon'],
        'apiKey': json['apiKey'] == null ? undefined : json['apiKey'],
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
    };
}

export function AiProviderToJSON(json: any): AiProvider {
    return AiProviderToJSONTyped(json, false);
}

export function AiProviderToJSONTyped(value?: Omit<AiProvider, 'id'|'name'|'icon'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'apiKey': value['apiKey'],
        'enabled': value['enabled'],
    };
}

