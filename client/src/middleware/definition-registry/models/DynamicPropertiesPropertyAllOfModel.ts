/* tslint:disable */
/* eslint-disable */
/**
 * Definition API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PropertiesDataSourceModel } from './PropertiesDataSourceModel';
import {
    PropertiesDataSourceModelFromJSON,
    PropertiesDataSourceModelFromJSONTyped,
    PropertiesDataSourceModelToJSON,
} from './PropertiesDataSourceModel';

/**
 * 
 * @export
 * @interface DynamicPropertiesPropertyAllOfModel
 */
export interface DynamicPropertiesPropertyAllOfModel {
    /**
     * 
     * @type {PropertiesDataSourceModel}
     * @memberof DynamicPropertiesPropertyAllOfModel
     */
    propertiesDataSource?: PropertiesDataSourceModel;
}

/**
 * Check if a given object implements the DynamicPropertiesPropertyAllOfModel interface.
 */
export function instanceOfDynamicPropertiesPropertyAllOfModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DynamicPropertiesPropertyAllOfModelFromJSON(json: any): DynamicPropertiesPropertyAllOfModel {
    return DynamicPropertiesPropertyAllOfModelFromJSONTyped(json, false);
}

export function DynamicPropertiesPropertyAllOfModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DynamicPropertiesPropertyAllOfModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'propertiesDataSource': !exists(json, 'propertiesDataSource') ? undefined : PropertiesDataSourceModelFromJSON(json['propertiesDataSource']),
    };
}

export function DynamicPropertiesPropertyAllOfModelToJSON(value?: DynamicPropertiesPropertyAllOfModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'propertiesDataSource': PropertiesDataSourceModelToJSON(value.propertiesDataSource),
    };
}

