/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ControlTypeModel } from './ControlTypeModel';
import {
    ControlTypeModelFromJSON,
    ControlTypeModelFromJSONTyped,
    ControlTypeModelToJSON,
} from './ControlTypeModel';

/**
 * 
 * @export
 * @interface StringPropertyAllOfModel
 */
export interface StringPropertyAllOfModel {
    /**
     * 
     * @type {ControlTypeModel}
     * @memberof StringPropertyAllOfModel
     */
    controlType?: ControlTypeModel;
}

/**
 * Check if a given object implements the StringPropertyAllOfModel interface.
 */
export function instanceOfStringPropertyAllOfModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StringPropertyAllOfModelFromJSON(json: any): StringPropertyAllOfModel {
    return StringPropertyAllOfModelFromJSONTyped(json, false);
}

export function StringPropertyAllOfModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): StringPropertyAllOfModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'controlType': !exists(json, 'controlType') ? undefined : ControlTypeModelFromJSON(json['controlType']),
    };
}

export function StringPropertyAllOfModelToJSON(value?: StringPropertyAllOfModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'controlType': ControlTypeModelToJSON(value.controlType),
    };
}

