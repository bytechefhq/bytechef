/* tslint:disable */
/* eslint-disable */
/**
 * Definition API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DisplayModel } from './DisplayModel';
import {
    DisplayModelFromJSON,
    DisplayModelFromJSONTyped,
    DisplayModelToJSON,
} from './DisplayModel';
import type { ResourcesModel } from './ResourcesModel';
import {
    ResourcesModelFromJSON,
    ResourcesModelFromJSONTyped,
    ResourcesModelToJSON,
} from './ResourcesModel';

/**
 * Definition of a connection to an outside service.
 * @export
 * @interface ConnectionDefinitionBasicModel
 */
export interface ConnectionDefinitionBasicModel {
    /**
     * 
     * @type {DisplayModel}
     * @memberof ConnectionDefinitionBasicModel
     */
    display: DisplayModel;
    /**
     * The connection name.
     * @type {string}
     * @memberof ConnectionDefinitionBasicModel
     */
    name: string;
    /**
     * 
     * @type {ResourcesModel}
     * @memberof ConnectionDefinitionBasicModel
     */
    resources?: ResourcesModel;
    /**
     * The version of a connection.
     * @type {number}
     * @memberof ConnectionDefinitionBasicModel
     */
    version: number;
}

/**
 * Check if a given object implements the ConnectionDefinitionBasicModel interface.
 */
export function instanceOfConnectionDefinitionBasicModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "display" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "version" in value;

    return isInstance;
}

export function ConnectionDefinitionBasicModelFromJSON(json: any): ConnectionDefinitionBasicModel {
    return ConnectionDefinitionBasicModelFromJSONTyped(json, false);
}

export function ConnectionDefinitionBasicModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConnectionDefinitionBasicModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'display': DisplayModelFromJSON(json['display']),
        'name': json['name'],
        'resources': !exists(json, 'resources') ? undefined : ResourcesModelFromJSON(json['resources']),
        'version': json['version'],
    };
}

export function ConnectionDefinitionBasicModelToJSON(value?: ConnectionDefinitionBasicModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'display': DisplayModelToJSON(value.display),
        'name': value.name,
        'resources': ResourcesModelToJSON(value.resources),
        'version': value.version,
    };
}

