/* tslint:disable */
/* eslint-disable */
/**
 * The Embedded Configuration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { IntegrationInstanceWorkflowConnectionModel } from './IntegrationInstanceWorkflowConnectionModel';
import {
    IntegrationInstanceWorkflowConnectionModelFromJSON,
    IntegrationInstanceWorkflowConnectionModelFromJSONTyped,
    IntegrationInstanceWorkflowConnectionModelToJSON,
} from './IntegrationInstanceWorkflowConnectionModel';

/**
 * Contains configuration and connections required for the execution of a particular project workflow.
 * @export
 * @interface IntegrationInstanceWorkflowModel
 */
export interface IntegrationInstanceWorkflowModel {
    /**
     * The created by.
     * @type {string}
     * @memberof IntegrationInstanceWorkflowModel
     */
    readonly createdBy?: string;
    /**
     * The created date.
     * @type {Date}
     * @memberof IntegrationInstanceWorkflowModel
     */
    readonly createdDate?: Date;
    /**
     * The input parameters of an project instance used as workflow input values.
     * @type {{ [key: string]: object; }}
     * @memberof IntegrationInstanceWorkflowModel
     */
    inputs?: { [key: string]: object; };
    /**
     * The connections used by a project instance.
     * @type {Array<IntegrationInstanceWorkflowConnectionModel>}
     * @memberof IntegrationInstanceWorkflowModel
     */
    connections?: Array<IntegrationInstanceWorkflowConnectionModel>;
    /**
     * If a workflow is enabled or not in the project instance workflow.
     * @type {boolean}
     * @memberof IntegrationInstanceWorkflowModel
     */
    enabled?: boolean;
    /**
     * The id of a project instance.
     * @type {number}
     * @memberof IntegrationInstanceWorkflowModel
     */
    readonly id?: number;
    /**
     * The last execution date of a project instance.
     * @type {Date}
     * @memberof IntegrationInstanceWorkflowModel
     */
    lastExecutionDate?: Date;
    /**
     * The last modified by.
     * @type {string}
     * @memberof IntegrationInstanceWorkflowModel
     */
    readonly lastModifiedBy?: string;
    /**
     * The last modified date.
     * @type {Date}
     * @memberof IntegrationInstanceWorkflowModel
     */
    readonly lastModifiedDate?: Date;
    /**
     * The id of a integration instance.
     * @type {number}
     * @memberof IntegrationInstanceWorkflowModel
     */
    integrationInstanceId?: number;
    /**
     * The id of a workflow.
     * @type {string}
     * @memberof IntegrationInstanceWorkflowModel
     */
    workflowId?: string;
    /**
     * 
     * @type {number}
     * @memberof IntegrationInstanceWorkflowModel
     */
    version?: number;
}

/**
 * Check if a given object implements the IntegrationInstanceWorkflowModel interface.
 */
export function instanceOfIntegrationInstanceWorkflowModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function IntegrationInstanceWorkflowModelFromJSON(json: any): IntegrationInstanceWorkflowModel {
    return IntegrationInstanceWorkflowModelFromJSONTyped(json, false);
}

export function IntegrationInstanceWorkflowModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): IntegrationInstanceWorkflowModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdBy': !exists(json, 'createdBy') ? undefined : json['createdBy'],
        'createdDate': !exists(json, 'createdDate') ? undefined : (new Date(json['createdDate'])),
        'inputs': !exists(json, 'inputs') ? undefined : json['inputs'],
        'connections': !exists(json, 'connections') ? undefined : ((json['connections'] as Array<any>).map(IntegrationInstanceWorkflowConnectionModelFromJSON)),
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'lastExecutionDate': !exists(json, 'lastExecutionDate') ? undefined : (new Date(json['lastExecutionDate'])),
        'lastModifiedBy': !exists(json, 'lastModifiedBy') ? undefined : json['lastModifiedBy'],
        'lastModifiedDate': !exists(json, 'lastModifiedDate') ? undefined : (new Date(json['lastModifiedDate'])),
        'integrationInstanceId': !exists(json, 'integrationInstanceId') ? undefined : json['integrationInstanceId'],
        'workflowId': !exists(json, 'workflowId') ? undefined : json['workflowId'],
        'version': !exists(json, '__version') ? undefined : json['__version'],
    };
}

export function IntegrationInstanceWorkflowModelToJSON(value?: IntegrationInstanceWorkflowModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'inputs': value.inputs,
        'connections': value.connections === undefined ? undefined : ((value.connections as Array<any>).map(IntegrationInstanceWorkflowConnectionModelToJSON)),
        'enabled': value.enabled,
        'lastExecutionDate': value.lastExecutionDate === undefined ? undefined : (value.lastExecutionDate.toISOString()),
        'integrationInstanceId': value.integrationInstanceId,
        'workflowId': value.workflowId,
        '__version': value.version,
    };
}

