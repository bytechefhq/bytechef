/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Defines parameters used to execute a job.
 * @export
 * @interface JobParametersModel
 */
export interface JobParametersModel {
    /**
     * The inputs expected by the workflow
     * @type {{ [key: string]: object; }}
     * @memberof JobParametersModel
     */
    inputs?: { [key: string]: object; };
    /**
     * The job's human-readable name
     * @type {string}
     * @memberof JobParametersModel
     */
    label?: string;
    /**
     * The id of the parent task that created this job. Used for sub-flows.
     * @type {string}
     * @memberof JobParametersModel
     */
    parentTaskExecutionId?: string;
    /**
     * The priority value used during execution of individual tasks.
     * @type {number}
     * @memberof JobParametersModel
     */
    priority?: number;
    /**
     * Id of the workflow to execute.
     * @type {string}
     * @memberof JobParametersModel
     */
    workflowId: string;
    /**
     * The list of webhooks to register to receive notifications for certain events.
     * @type {Array<{ [key: string]: object; }>}
     * @memberof JobParametersModel
     */
    webhooks?: Array<{ [key: string]: object; }>;
}

/**
 * Check if a given object implements the JobParametersModel interface.
 */
export function instanceOfJobParametersModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "workflowId" in value;

    return isInstance;
}

export function JobParametersModelFromJSON(json: any): JobParametersModel {
    return JobParametersModelFromJSONTyped(json, false);
}

export function JobParametersModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): JobParametersModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'inputs': !exists(json, 'inputs') ? undefined : json['inputs'],
        'label': !exists(json, 'label') ? undefined : json['label'],
        'parentTaskExecutionId': !exists(json, 'parentTaskExecutionId') ? undefined : json['parentTaskExecutionId'],
        'priority': !exists(json, 'priority') ? undefined : json['priority'],
        'workflowId': json['workflowId'],
        'webhooks': !exists(json, 'webhooks') ? undefined : json['webhooks'],
    };
}

export function JobParametersModelToJSON(value?: JobParametersModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'inputs': value.inputs,
        'label': value.label,
        'parentTaskExecutionId': value.parentTaskExecutionId,
        'priority': value.priority,
        'workflowId': value.workflowId,
        'webhooks': value.webhooks,
    };
}

