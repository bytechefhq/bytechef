/* tslint:disable */
/* eslint-disable */
/**
 * Workflow API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { WebhookRetryModel } from './WebhookRetryModel';
import {
    WebhookRetryModelFromJSON,
    WebhookRetryModelFromJSONTyped,
    WebhookRetryModelToJSON,
} from './WebhookRetryModel';

/**
 * Used to register to receive notifications for certain events.
 * @export
 * @interface WebhookModel
 */
export interface WebhookModel {
    /**
     * 
     * @type {string}
     * @memberof WebhookModel
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookModel
     */
    url?: string;
    /**
     * 
     * @type {WebhookRetryModel}
     * @memberof WebhookModel
     */
    retry?: WebhookRetryModel;
}

/**
 * Check if a given object implements the WebhookModel interface.
 */
export function instanceOfWebhookModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function WebhookModelFromJSON(json: any): WebhookModel {
    return WebhookModelFromJSONTyped(json, false);
}

export function WebhookModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'retry': !exists(json, 'retry') ? undefined : WebhookRetryModelFromJSON(json['retry']),
    };
}

export function WebhookModelToJSON(value?: WebhookModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'url': value.url,
        'retry': WebhookRetryModelToJSON(value.retry),
    };
}

