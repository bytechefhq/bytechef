/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { JobModel } from './JobModel';
import {
    JobModelFromJSON,
    JobModelFromJSONTyped,
    JobModelToJSON,
} from './JobModel';
import type { TaskExecutionModel } from './TaskExecutionModel';
import {
    TaskExecutionModelFromJSON,
    TaskExecutionModelFromJSONTyped,
    TaskExecutionModelToJSON,
} from './TaskExecutionModel';

/**
 * 
 * @export
 * @interface WorkflowTestResponseModel
 */
export interface WorkflowTestResponseModel {
    /**
     * 
     * @type {JobModel}
     * @memberof WorkflowTestResponseModel
     */
    job?: JobModel;
    /**
     * 
     * @type {Array<TaskExecutionModel>}
     * @memberof WorkflowTestResponseModel
     */
    taskExecutions?: Array<TaskExecutionModel>;
}

/**
 * Check if a given object implements the WorkflowTestResponseModel interface.
 */
export function instanceOfWorkflowTestResponseModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function WorkflowTestResponseModelFromJSON(json: any): WorkflowTestResponseModel {
    return WorkflowTestResponseModelFromJSONTyped(json, false);
}

export function WorkflowTestResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowTestResponseModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'job': !exists(json, 'job') ? undefined : JobModelFromJSON(json['job']),
        'taskExecutions': !exists(json, 'taskExecutions') ? undefined : ((json['taskExecutions'] as Array<any>).map(TaskExecutionModelFromJSON)),
    };
}

export function WorkflowTestResponseModelToJSON(value?: WorkflowTestResponseModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'job': JobModelToJSON(value.job),
        'taskExecutions': value.taskExecutions === undefined ? undefined : ((value.taskExecutions as Array<any>).map(TaskExecutionModelToJSON)),
    };
}

