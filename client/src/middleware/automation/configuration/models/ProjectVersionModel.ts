/* tslint:disable */
/* eslint-disable */
/**
 * The Automation Configuration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProjectStatusModel } from './ProjectStatusModel';
import {
    ProjectStatusModelFromJSON,
    ProjectStatusModelFromJSONTyped,
    ProjectStatusModelToJSON,
} from './ProjectStatusModel';

/**
 * The project version.
 * @export
 * @interface ProjectVersionModel
 */
export interface ProjectVersionModel {
    /**
     * The description of a project version
     * @type {string}
     * @memberof ProjectVersionModel
     */
    description?: string;
    /**
     * The published date.
     * @type {Date}
     * @memberof ProjectVersionModel
     */
    publishedDate?: Date;
    /**
     * The version of a project.
     * @type {number}
     * @memberof ProjectVersionModel
     */
    readonly version?: number;
    /**
     * 
     * @type {ProjectStatusModel}
     * @memberof ProjectVersionModel
     */
    status?: ProjectStatusModel;
}

/**
 * Check if a given object implements the ProjectVersionModel interface.
 */
export function instanceOfProjectVersionModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProjectVersionModelFromJSON(json: any): ProjectVersionModel {
    return ProjectVersionModelFromJSONTyped(json, false);
}

export function ProjectVersionModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectVersionModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'publishedDate': !exists(json, 'publishedDate') ? undefined : (new Date(json['publishedDate'])),
        'version': !exists(json, 'version') ? undefined : json['version'],
        'status': !exists(json, 'status') ? undefined : ProjectStatusModelFromJSON(json['status']),
    };
}

export function ProjectVersionModelToJSON(value?: ProjectVersionModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'publishedDate': value.publishedDate === undefined ? undefined : (value.publishedDate.toISOString()),
        'status': ProjectStatusModelToJSON(value.status),
    };
}

