/* tslint:disable */
/* eslint-disable */
/**
 * The Platform Workflow Test API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The connection used in a particular action task or trigger.
 * @export
 * @interface WorkflowTestConfigurationConnectionModel
 */
export interface WorkflowTestConfigurationConnectionModel {
    /**
     * The connection id
     * @type {number}
     * @memberof WorkflowTestConfigurationConnectionModel
     */
    connectionId: number;
    /**
     * The connection key under which a connection is defined in a workflow definition.
     * @type {string}
     * @memberof WorkflowTestConfigurationConnectionModel
     */
    workflowConnectionKey: string;
    /**
     * The action/trigger name to which a connection belongs.
     * @type {string}
     * @memberof WorkflowTestConfigurationConnectionModel
     */
    workflowNodeName: string;
}

/**
 * Check if a given object implements the WorkflowTestConfigurationConnectionModel interface.
 */
export function instanceOfWorkflowTestConfigurationConnectionModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "connectionId" in value;
    isInstance = isInstance && "workflowConnectionKey" in value;
    isInstance = isInstance && "workflowNodeName" in value;

    return isInstance;
}

export function WorkflowTestConfigurationConnectionModelFromJSON(json: any): WorkflowTestConfigurationConnectionModel {
    return WorkflowTestConfigurationConnectionModelFromJSONTyped(json, false);
}

export function WorkflowTestConfigurationConnectionModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowTestConfigurationConnectionModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'connectionId': json['connectionId'],
        'workflowConnectionKey': json['workflowConnectionKey'],
        'workflowNodeName': json['workflowNodeName'],
    };
}

export function WorkflowTestConfigurationConnectionModelToJSON(value?: WorkflowTestConfigurationConnectionModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'connectionId': value.connectionId,
        'workflowConnectionKey': value.workflowConnectionKey,
        'workflowNodeName': value.workflowNodeName,
    };
}

