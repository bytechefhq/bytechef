/* tslint:disable */
/* eslint-disable */
/**
 * The Platform Configuration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { HelpModel } from './HelpModel';
import {
    HelpModelFromJSON,
    HelpModelFromJSONTyped,
    HelpModelToJSON,
} from './HelpModel';
import type { PropertyModel } from './PropertyModel';
import {
    PropertyModelFromJSON,
    PropertyModelFromJSONTyped,
    PropertyModelToJSON,
} from './PropertyModel';

/**
 * An action is a portion of reusable code that accomplish a specific task. When building a workflow, each action is represented as a task inside the workflow. The task 'type' property is defined as [component name]/v[component version]/[action name]. Action properties are used to set properties of the task inside the workflow.
 * @export
 * @interface ActionDefinitionModel
 */
export interface ActionDefinitionModel {
    /**
     * The component name.
     * @type {string}
     * @memberof ActionDefinitionModel
     */
    componentName?: string;
    /**
     * The component version.
     * @type {number}
     * @memberof ActionDefinitionModel
     */
    componentVersion?: number;
    /**
     * The description.
     * @type {string}
     * @memberof ActionDefinitionModel
     */
    description?: string;
    /**
     * Does action define dynamic node description.
     * @type {boolean}
     * @memberof ActionDefinitionModel
     */
    workflowNodeDescriptionDefined?: boolean;
    /**
     * 
     * @type {HelpModel}
     * @memberof ActionDefinitionModel
     */
    help?: HelpModel;
    /**
     * The action name.
     * @type {string}
     * @memberof ActionDefinitionModel
     */
    name: string;
    /**
     * Does action define output schema.
     * @type {boolean}
     * @memberof ActionDefinitionModel
     */
    outputDefined: boolean;
    /**
     * Does action define dynamic output schema.
     * @type {boolean}
     * @memberof ActionDefinitionModel
     */
    outputFunctionDefined: boolean;
    /**
     * The list of action properties.
     * @type {Array<PropertyModel>}
     * @memberof ActionDefinitionModel
     */
    properties?: Array<PropertyModel>;
    /**
     * The title
     * @type {string}
     * @memberof ActionDefinitionModel
     */
    title?: string;
}

/**
 * Check if a given object implements the ActionDefinitionModel interface.
 */
export function instanceOfActionDefinitionModel(value: object): boolean {
    if (!('name' in value)) return false;
    if (!('outputDefined' in value)) return false;
    if (!('outputFunctionDefined' in value)) return false;
    return true;
}

export function ActionDefinitionModelFromJSON(json: any): ActionDefinitionModel {
    return ActionDefinitionModelFromJSONTyped(json, false);
}

export function ActionDefinitionModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActionDefinitionModel {
    if (json == null) {
        return json;
    }
    return {
        
        'componentName': json['componentName'] == null ? undefined : json['componentName'],
        'componentVersion': json['componentVersion'] == null ? undefined : json['componentVersion'],
        'description': json['description'] == null ? undefined : json['description'],
        'workflowNodeDescriptionDefined': json['workflowNodeDescriptionDefined'] == null ? undefined : json['workflowNodeDescriptionDefined'],
        'help': json['help'] == null ? undefined : HelpModelFromJSON(json['help']),
        'name': json['name'],
        'outputDefined': json['outputDefined'],
        'outputFunctionDefined': json['outputFunctionDefined'],
        'properties': json['properties'] == null ? undefined : ((json['properties'] as Array<any>).map(PropertyModelFromJSON)),
        'title': json['title'] == null ? undefined : json['title'],
    };
}

export function ActionDefinitionModelToJSON(value?: ActionDefinitionModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'componentName': value['componentName'],
        'componentVersion': value['componentVersion'],
        'description': value['description'],
        'workflowNodeDescriptionDefined': value['workflowNodeDescriptionDefined'],
        'help': HelpModelToJSON(value['help']),
        'name': value['name'],
        'outputDefined': value['outputDefined'],
        'outputFunctionDefined': value['outputFunctionDefined'],
        'properties': value['properties'] == null ? undefined : ((value['properties'] as Array<any>).map(PropertyModelToJSON)),
        'title': value['title'],
    };
}

