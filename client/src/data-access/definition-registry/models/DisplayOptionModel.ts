/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Defines rules when a property should be shown or hidden.
 * @export
 * @interface DisplayOptionModel
 */
export interface DisplayOptionModel {
    /**
     * The map of property names and list of values to check against if the property should be hidden.
     * @type {{ [key: string]: Array<object>; }}
     * @memberof DisplayOptionModel
     */
    hide?: { [key: string]: Array<object>; };
    /**
     * The map of property names and list of values to check against if the property should be shown.
     * @type {{ [key: string]: Array<object>; }}
     * @memberof DisplayOptionModel
     */
    show?: { [key: string]: Array<object>; };
}

/**
 * Check if a given object implements the DisplayOptionModel interface.
 */
export function instanceOfDisplayOptionModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DisplayOptionModelFromJSON(json: any): DisplayOptionModel {
    return DisplayOptionModelFromJSONTyped(json, false);
}

export function DisplayOptionModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DisplayOptionModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hide': !exists(json, 'hide') ? undefined : json['hide'],
        'show': !exists(json, 'show') ? undefined : json['show'],
    };
}

export function DisplayOptionModelToJSON(value?: DisplayOptionModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hide': value.hide,
        'show': value.show,
    };
}

