/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Display information.
 * @export
 * @interface Display
 */
export interface Display {
    /**
     * The category of the component.
     * @type {string}
     * @memberof Display
     */
    category?: string;
    /**
     * The description.
     * @type {string}
     * @memberof Display
     */
    description?: string;
    /**
     * The icon.
     * @type {string}
     * @memberof Display
     */
    icon?: string;
    /**
     * The label.
     * @type {string}
     * @memberof Display
     */
    label?: string;
    /**
     * Additional explanation.
     * @type {string}
     * @memberof Display
     */
    subtitle?: string;
    /**
     * Tags for the component.
     * @type {Array<string>}
     * @memberof Display
     */
    tags?: Array<string>;
}

/**
 * Check if a given object implements the Display interface.
 */
export function instanceOfDisplay(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DisplayFromJSON(json: any): Display {
    return DisplayFromJSONTyped(json, false);
}

export function DisplayFromJSONTyped(json: any, ignoreDiscriminator: boolean): Display {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'category': !exists(json, 'category') ? undefined : json['category'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'icon': !exists(json, 'icon') ? undefined : json['icon'],
        'label': !exists(json, 'label') ? undefined : json['label'],
        'subtitle': !exists(json, 'subtitle') ? undefined : json['subtitle'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
    };
}

export function DisplayToJSON(value?: Display | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'category': value.category,
        'description': value.description,
        'icon': value.icon,
        'label': value.label,
        'subtitle': value.subtitle,
        'tags': value.tags,
    };
}

