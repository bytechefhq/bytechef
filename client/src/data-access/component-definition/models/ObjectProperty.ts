/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {AnyProperty} from "./AnyProperty";
import {BooleanProperty} from "./BooleanProperty";
import {ArrayProperty} from "./ArrayProperty";
import {DateProperty} from "./DateProperty";
import {DateTimeProperty} from "./DateTimeProperty";
import {IntegerProperty} from "./IntegerProperty";
import {NullProperty} from "./NullProperty";
import {NumberProperty} from "./NumberProperty";
import {StringProperty} from "./StringProperty";
import type { DisplayOption } from './DisplayOption';
import {
    DisplayOptionFromJSON,
    DisplayOptionFromJSONTyped,
    DisplayOptionToJSON,
} from './DisplayOption';
import type { ValueProperty } from './ValueProperty';
import {
    ValuePropertyFromJSON,
    ValuePropertyFromJSONTyped,
    ValuePropertyToJSON,
} from './ValueProperty';

/**
 * An object property type.
 * @export
 * @interface ObjectProperty
 */
export interface ObjectProperty extends ValueProperty {
    /**
     * The object can contain dynamically defined properties.
     * @type {boolean}
     * @memberof ObjectProperty
     */
    additionalProperties?: boolean;
    /**
     * The object type.
     * @type {string}
     * @memberof ObjectProperty
     */
    objectType?: string;
    /**
     * The list of valid object property types.
     * @type {Array<AnyProperty | ArrayProperty | BooleanProperty | DateProperty | DateTimeProperty | IntegerProperty | NullProperty | NumberProperty | StringProperty | ObjectProperty>}
     * @memberof ObjectProperty
     */
    properties?: Array<AnyProperty | ArrayProperty | BooleanProperty | DateProperty | DateTimeProperty | IntegerProperty | NullProperty | NumberProperty | StringProperty | ObjectProperty>;
    /**
     *
     * @type {string}
     * @memberof ObjectProperty
     */
    type: string;
}

/**
 * Check if a given object implements the ObjectProperty interface.
 */
export function instanceOfObjectProperty(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function ObjectPropertyFromJSON(json: any): ObjectProperty {
    return ObjectPropertyFromJSONTyped(json, false);
}

export function ObjectPropertyFromJSONTyped(json: any, ignoreDiscriminator: boolean): ObjectProperty {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...ValuePropertyFromJSONTyped(json, ignoreDiscriminator),
        'additionalProperties': !exists(json, 'additionalProperties') ? undefined : json['additionalProperties'],
        'objectType': !exists(json, 'objectType') ? undefined : json['objectType'],
        'properties': !exists(json, 'properties') ? undefined : ((json['properties'] as Array<any>)),
        'type': json['type'],
    };
}

export function ObjectPropertyToJSON(value?: ObjectProperty | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...ValuePropertyToJSON(value),
        'additionalProperties': value.additionalProperties,
        'objectType': value.objectType,
        'properties': value.properties === undefined ? undefined : ((value.properties as Array<any>)),
        'type': value.type,
    };
}

