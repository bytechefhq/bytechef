/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Property } from './Property';
import {
    PropertyFromJSON,
    PropertyFromJSONTyped,
    PropertyToJSON,
} from './Property';

/**
 * A base property for all value based properties.
 * @export
 * @interface ValueProperty
 */
export interface ValueProperty extends Property {
    /**
     * The property default value.
     * @type {object}
     * @memberof ValueProperty
     */
    defaultValue?: object;
    /**
     * The property example value.
     * @type {object}
     * @memberof ValueProperty
     */
    exampleValue?: object;
    /**
     * The list of property names on which value change the property options should load/reload.
     * @type {Array<string>}
     * @memberof ValueProperty
     */
    loadOptionsDependsOn?: Array<string>;
    /**
     * The code that should dynamically load options for the property.
     * @type {object}
     * @memberof ValueProperty
     */
    loadOptionsFunction?: object;
}

/**
 * Check if a given object implements the ValueProperty interface.
 */
export function instanceOfValueProperty(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ValuePropertyFromJSON(json: any): ValueProperty {
    return ValuePropertyFromJSONTyped(json, false);
}

export function ValuePropertyFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValueProperty {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...PropertyFromJSONTyped(json, ignoreDiscriminator),
        'defaultValue': !exists(json, 'defaultValue') ? undefined : json['defaultValue'],
        'exampleValue': !exists(json, 'exampleValue') ? undefined : json['exampleValue'],
        'loadOptionsDependsOn': !exists(json, 'loadOptionsDependsOn') ? undefined : json['loadOptionsDependsOn'],
        'loadOptionsFunction': !exists(json, 'loadOptionsFunction') ? undefined : json['loadOptionsFunction'],
    };
}

export function ValuePropertyToJSON(value?: ValueProperty | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...PropertyToJSON(value),
        'defaultValue': value.defaultValue,
        'exampleValue': value.exampleValue,
        'loadOptionsDependsOn': value.loadOptionsDependsOn,
        'loadOptionsFunction': value.loadOptionsFunction,
    };
}

