/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    AnyProperty,
    instanceOfAnyProperty,
    AnyPropertyFromJSON,
    AnyPropertyFromJSONTyped,
    AnyPropertyToJSON,
} from './AnyProperty';
import {
    ArrayProperty,
    instanceOfArrayProperty,
    ArrayPropertyFromJSON,
    ArrayPropertyFromJSONTyped,
    ArrayPropertyToJSON,
} from './ArrayProperty';
import {
    BooleanProperty,
    instanceOfBooleanProperty,
    BooleanPropertyFromJSON,
    BooleanPropertyFromJSONTyped,
    BooleanPropertyToJSON,
} from './BooleanProperty';
import {
    DateProperty,
    instanceOfDateProperty,
    DatePropertyFromJSON,
    DatePropertyFromJSONTyped,
    DatePropertyToJSON,
} from './DateProperty';
import {
    DateTimeProperty,
    instanceOfDateTimeProperty,
    DateTimePropertyFromJSON,
    DateTimePropertyFromJSONTyped,
    DateTimePropertyToJSON,
} from './DateTimeProperty';
import {
    IntegerProperty,
    instanceOfIntegerProperty,
    IntegerPropertyFromJSON,
    IntegerPropertyFromJSONTyped,
    IntegerPropertyToJSON,
} from './IntegerProperty';
import {
    NumberProperty,
    instanceOfNumberProperty,
    NumberPropertyFromJSON,
    NumberPropertyFromJSONTyped,
    NumberPropertyToJSON,
} from './NumberProperty';
import {
    ObjectProperty,
    instanceOfObjectProperty,
    ObjectPropertyFromJSON,
    ObjectPropertyFromJSONTyped,
    ObjectPropertyToJSON,
} from './ObjectProperty';
import {
    StringProperty,
    instanceOfStringProperty,
    StringPropertyFromJSON,
    StringPropertyFromJSONTyped,
    StringPropertyToJSON,
} from './StringProperty';

/**
 * @type TaskDispatcherDefinitionOutputInner
 * 
 * @export
 */
export type TaskDispatcherDefinitionOutputInner = AnyProperty | ArrayProperty | BooleanProperty | DateProperty | DateTimeProperty | IntegerProperty | NumberProperty | ObjectProperty | StringProperty;

export function TaskDispatcherDefinitionOutputInnerFromJSON(json: any): TaskDispatcherDefinitionOutputInner {
    return TaskDispatcherDefinitionOutputInnerFromJSONTyped(json, false);
}

export function TaskDispatcherDefinitionOutputInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskDispatcherDefinitionOutputInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return { ...AnyPropertyFromJSONTyped(json, true), ...ArrayPropertyFromJSONTyped(json, true), ...BooleanPropertyFromJSONTyped(json, true), ...DatePropertyFromJSONTyped(json, true), ...DateTimePropertyFromJSONTyped(json, true), ...IntegerPropertyFromJSONTyped(json, true), ...NumberPropertyFromJSONTyped(json, true), ...ObjectPropertyFromJSONTyped(json, true), ...StringPropertyFromJSONTyped(json, true) };
}

export function TaskDispatcherDefinitionOutputInnerToJSON(value?: TaskDispatcherDefinitionOutputInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    if (instanceOfAnyProperty(value)) {
        return AnyPropertyToJSON(value as AnyProperty);
    }
    if (instanceOfArrayProperty(value)) {
        return ArrayPropertyToJSON(value as ArrayProperty);
    }
    if (instanceOfBooleanProperty(value)) {
        return BooleanPropertyToJSON(value as BooleanProperty);
    }
    if (instanceOfDateProperty(value)) {
        return DatePropertyToJSON(value as DateProperty);
    }
    if (instanceOfDateTimeProperty(value)) {
        return DateTimePropertyToJSON(value as DateTimeProperty);
    }
    if (instanceOfIntegerProperty(value)) {
        return IntegerPropertyToJSON(value as IntegerProperty);
    }
    if (instanceOfNumberProperty(value)) {
        return NumberPropertyToJSON(value as NumberProperty);
    }
    if (instanceOfObjectProperty(value)) {
        return ObjectPropertyToJSON(value as ObjectProperty);
    }
    if (instanceOfStringProperty(value)) {
        return StringPropertyToJSON(value as StringProperty);
    }

    return {};
}

