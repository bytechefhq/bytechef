/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A sublist of a list of objects. It allows gain information about the position of it in the containing entire list.
 * @export
 * @interface Page
 */
export interface Page {
    /**
     * The current page.
     * @type {number}
     * @memberof Page
     */
    number?: number;
    /**
     * The size of the page.
     * @type {number}
     * @memberof Page
     */
    size?: number;
    /**
     * The number of elements.
     * @type {number}
     * @memberof Page
     */
    numberOfElements?: number;
    /**
     * The total number of pages.
     * @type {number}
     * @memberof Page
     */
    totalPages?: number;
    /**
     * The total number of elements.
     * @type {number}
     * @memberof Page
     */
    totalElements?: number;
    /**
     * List of elements.
     * @type {Array<object>}
     * @memberof Page
     */
    content?: Array<object>;
}

/**
 * Check if a given object implements the Page interface.
 */
export function instanceOfPage(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PageFromJSON(json: any): Page {
    return PageFromJSONTyped(json, false);
}

export function PageFromJSONTyped(json: any, ignoreDiscriminator: boolean): Page {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'number': !exists(json, 'number') ? undefined : json['number'],
        'size': !exists(json, 'size') ? undefined : json['size'],
        'numberOfElements': !exists(json, 'numberOfElements') ? undefined : json['numberOfElements'],
        'totalPages': !exists(json, 'totalPages') ? undefined : json['totalPages'],
        'totalElements': !exists(json, 'totalElements') ? undefined : json['totalElements'],
        'content': !exists(json, 'content') ? undefined : json['content'],
    };
}

export function PageToJSON(value?: Page | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'number': value.number,
        'size': value.size,
        'numberOfElements': value.numberOfElements,
        'totalPages': value.totalPages,
        'totalElements': value.totalElements,
        'content': value.content,
    };
}

