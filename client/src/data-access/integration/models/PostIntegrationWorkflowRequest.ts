/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PostIntegrationWorkflowRequest
 */
export interface PostIntegrationWorkflowRequest {
    /**
     * 
     * @type {string}
     * @memberof PostIntegrationWorkflowRequest
     */
    workflowName: string;
    /**
     * 
     * @type {string}
     * @memberof PostIntegrationWorkflowRequest
     */
    workflowDescription?: string;
}

/**
 * Check if a given object implements the PostIntegrationWorkflowRequest interface.
 */
export function instanceOfPostIntegrationWorkflowRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "workflowName" in value;

    return isInstance;
}

export function PostIntegrationWorkflowRequestFromJSON(json: any): PostIntegrationWorkflowRequest {
    return PostIntegrationWorkflowRequestFromJSONTyped(json, false);
}

export function PostIntegrationWorkflowRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostIntegrationWorkflowRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'workflowName': json['workflowName'],
        'workflowDescription': !exists(json, 'workflowDescription') ? undefined : json['workflowDescription'],
    };
}

export function PostIntegrationWorkflowRequestToJSON(value?: PostIntegrationWorkflowRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'workflowName': value.workflowName,
        'workflowDescription': value.workflowDescription,
    };
}

