/* tslint:disable */
/* eslint-disable */
/**
 * Embedded Execution API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IntegrationInstanceConfigurationWorkflowConnectionModel } from './IntegrationInstanceConfigurationWorkflowConnectionModel';
import {
    IntegrationInstanceConfigurationWorkflowConnectionModelFromJSON,
    IntegrationInstanceConfigurationWorkflowConnectionModelFromJSONTyped,
    IntegrationInstanceConfigurationWorkflowConnectionModelToJSON,
} from './IntegrationInstanceConfigurationWorkflowConnectionModel';

/**
 * Contains configuration and connections required for the execution of a particular integration workflow.
 * @export
 * @interface IntegrationInstanceConfigurationWorkflowModel
 */
export interface IntegrationInstanceConfigurationWorkflowModel {
    /**
     * The created by.
     * @type {string}
     * @memberof IntegrationInstanceConfigurationWorkflowModel
     */
    readonly createdBy?: string;
    /**
     * The created date.
     * @type {Date}
     * @memberof IntegrationInstanceConfigurationWorkflowModel
     */
    readonly createdDate?: Date;
    /**
     * The input parameters of an integration instance configuration used as workflow input values.
     * @type {{ [key: string]: any; }}
     * @memberof IntegrationInstanceConfigurationWorkflowModel
     */
    inputs?: { [key: string]: any; };
    /**
     * The connections used by an integration instance configuration.
     * @type {Array<IntegrationInstanceConfigurationWorkflowConnectionModel>}
     * @memberof IntegrationInstanceConfigurationWorkflowModel
     */
    connections?: Array<IntegrationInstanceConfigurationWorkflowConnectionModel>;
    /**
     * If a workflow is enabled or not in the integration instance configuration workflow.
     * @type {boolean}
     * @memberof IntegrationInstanceConfigurationWorkflowModel
     */
    enabled?: boolean;
    /**
     * The id of an integration instance configuration workflow.
     * @type {number}
     * @memberof IntegrationInstanceConfigurationWorkflowModel
     */
    readonly id?: number;
    /**
     * The id of an integration instance configuration.
     * @type {number}
     * @memberof IntegrationInstanceConfigurationWorkflowModel
     */
    integrationInstanceConfigurationId?: number;
    /**
     * The last execution date of an integration instance configuration workflow.
     * @type {Date}
     * @memberof IntegrationInstanceConfigurationWorkflowModel
     */
    lastExecutionDate?: Date;
    /**
     * The last modified by.
     * @type {string}
     * @memberof IntegrationInstanceConfigurationWorkflowModel
     */
    readonly lastModifiedBy?: string;
    /**
     * The last modified date.
     * @type {Date}
     * @memberof IntegrationInstanceConfigurationWorkflowModel
     */
    readonly lastModifiedDate?: Date;
    /**
     * The url of a static url used to trigger a workflow.
     * @type {string}
     * @memberof IntegrationInstanceConfigurationWorkflowModel
     */
    staticWebhookUrl?: string;
    /**
     * The id of a workflow.
     * @type {string}
     * @memberof IntegrationInstanceConfigurationWorkflowModel
     */
    workflowId?: string;
    /**
     * The workflow reference code
     * @type {string}
     * @memberof IntegrationInstanceConfigurationWorkflowModel
     */
    readonly workflowReferenceCode?: string;
    /**
     * 
     * @type {number}
     * @memberof IntegrationInstanceConfigurationWorkflowModel
     */
    version?: number;
}

/**
 * Check if a given object implements the IntegrationInstanceConfigurationWorkflowModel interface.
 */
export function instanceOfIntegrationInstanceConfigurationWorkflowModel(value: object): boolean {
    return true;
}

export function IntegrationInstanceConfigurationWorkflowModelFromJSON(json: any): IntegrationInstanceConfigurationWorkflowModel {
    return IntegrationInstanceConfigurationWorkflowModelFromJSONTyped(json, false);
}

export function IntegrationInstanceConfigurationWorkflowModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): IntegrationInstanceConfigurationWorkflowModel {
    if (json == null) {
        return json;
    }
    return {
        
        'createdBy': json['createdBy'] == null ? undefined : json['createdBy'],
        'createdDate': json['createdDate'] == null ? undefined : (new Date(json['createdDate'])),
        'inputs': json['inputs'] == null ? undefined : json['inputs'],
        'connections': json['connections'] == null ? undefined : ((json['connections'] as Array<any>).map(IntegrationInstanceConfigurationWorkflowConnectionModelFromJSON)),
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'id': json['id'] == null ? undefined : json['id'],
        'integrationInstanceConfigurationId': json['integrationInstanceConfigurationId'] == null ? undefined : json['integrationInstanceConfigurationId'],
        'lastExecutionDate': json['lastExecutionDate'] == null ? undefined : (new Date(json['lastExecutionDate'])),
        'lastModifiedBy': json['lastModifiedBy'] == null ? undefined : json['lastModifiedBy'],
        'lastModifiedDate': json['lastModifiedDate'] == null ? undefined : (new Date(json['lastModifiedDate'])),
        'staticWebhookUrl': json['staticWebhookUrl'] == null ? undefined : json['staticWebhookUrl'],
        'workflowId': json['workflowId'] == null ? undefined : json['workflowId'],
        'workflowReferenceCode': json['workflowReferenceCode'] == null ? undefined : json['workflowReferenceCode'],
        'version': json['__version'] == null ? undefined : json['__version'],
    };
}

export function IntegrationInstanceConfigurationWorkflowModelToJSON(value?: Omit<IntegrationInstanceConfigurationWorkflowModel, 'createdBy'|'createdDate'|'id'|'lastModifiedBy'|'lastModifiedDate'|'workflowReferenceCode'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'inputs': value['inputs'],
        'connections': value['connections'] == null ? undefined : ((value['connections'] as Array<any>).map(IntegrationInstanceConfigurationWorkflowConnectionModelToJSON)),
        'enabled': value['enabled'],
        'integrationInstanceConfigurationId': value['integrationInstanceConfigurationId'],
        'lastExecutionDate': value['lastExecutionDate'] == null ? undefined : ((value['lastExecutionDate']).toISOString()),
        'staticWebhookUrl': value['staticWebhookUrl'],
        'workflowId': value['workflowId'],
        '__version': value['version'],
    };
}

