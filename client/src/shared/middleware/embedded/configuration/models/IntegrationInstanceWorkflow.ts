/* tslint:disable */
/* eslint-disable */
/**
 * The Embedded Configuration Internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Contains user configurations for the execution of a particular integration workflow.
 * @export
 * @interface IntegrationInstanceWorkflow
 */
export interface IntegrationInstanceWorkflow {
    /**
     * The input parameters of an integration instance used as workflow input values.
     * @type {{ [key: string]: any; }}
     * @memberof IntegrationInstanceWorkflow
     */
    inputs?: { [key: string]: any; };
    /**
     * If a workflow is enabled or not in the integration instance workflow.
     * @type {boolean}
     * @memberof IntegrationInstanceWorkflow
     */
    enabled: boolean;
    /**
     * The id of a integration instance configuration workflow.
     * @type {number}
     * @memberof IntegrationInstanceWorkflow
     */
    integrationInstanceConfigurationWorkflowId: number;
    /**
     * The id of a workflow.
     * @type {string}
     * @memberof IntegrationInstanceWorkflow
     */
    workflowId: string;
}

/**
 * Check if a given object implements the IntegrationInstanceWorkflow interface.
 */
export function instanceOfIntegrationInstanceWorkflow(value: object): value is IntegrationInstanceWorkflow {
    if (!('enabled' in value) || value['enabled'] === undefined) return false;
    if (!('integrationInstanceConfigurationWorkflowId' in value) || value['integrationInstanceConfigurationWorkflowId'] === undefined) return false;
    if (!('workflowId' in value) || value['workflowId'] === undefined) return false;
    return true;
}

export function IntegrationInstanceWorkflowFromJSON(json: any): IntegrationInstanceWorkflow {
    return IntegrationInstanceWorkflowFromJSONTyped(json, false);
}

export function IntegrationInstanceWorkflowFromJSONTyped(json: any, ignoreDiscriminator: boolean): IntegrationInstanceWorkflow {
    if (json == null) {
        return json;
    }
    return {
        
        'inputs': json['inputs'] == null ? undefined : json['inputs'],
        'enabled': json['enabled'],
        'integrationInstanceConfigurationWorkflowId': json['integrationInstanceConfigurationWorkflowId'],
        'workflowId': json['workflowId'],
    };
}

export function IntegrationInstanceWorkflowToJSON(value?: IntegrationInstanceWorkflow | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'inputs': value['inputs'],
        'enabled': value['enabled'],
        'integrationInstanceConfigurationWorkflowId': value['integrationInstanceConfigurationWorkflowId'],
        'workflowId': value['workflowId'],
    };
}

