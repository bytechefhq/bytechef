/* tslint:disable */
/* eslint-disable */
/**
 * The Automation Configuration Internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProjectStatus } from './ProjectStatus';
import {
    ProjectStatusFromJSON,
    ProjectStatusFromJSONTyped,
    ProjectStatusToJSON,
    ProjectStatusToJSONTyped,
} from './ProjectStatus';

/**
 * The project version.
 * @export
 * @interface ProjectVersion
 */
export interface ProjectVersion {
    /**
     * The description of a project version
     * @type {string}
     * @memberof ProjectVersion
     */
    description?: string;
    /**
     * The published date.
     * @type {Date}
     * @memberof ProjectVersion
     */
    publishedDate?: Date;
    /**
     * The version of a project.
     * @type {number}
     * @memberof ProjectVersion
     */
    readonly version?: number;
    /**
     * 
     * @type {ProjectStatus}
     * @memberof ProjectVersion
     */
    status?: ProjectStatus;
}



/**
 * Check if a given object implements the ProjectVersion interface.
 */
export function instanceOfProjectVersion(value: object): value is ProjectVersion {
    return true;
}

export function ProjectVersionFromJSON(json: any): ProjectVersion {
    return ProjectVersionFromJSONTyped(json, false);
}

export function ProjectVersionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectVersion {
    if (json == null) {
        return json;
    }
    return {
        
        'description': json['description'] == null ? undefined : json['description'],
        'publishedDate': json['publishedDate'] == null ? undefined : (new Date(json['publishedDate'])),
        'version': json['version'] == null ? undefined : json['version'],
        'status': json['status'] == null ? undefined : ProjectStatusFromJSON(json['status']),
    };
}

export function ProjectVersionToJSON(json: any): ProjectVersion {
    return ProjectVersionToJSONTyped(json, false);
}

export function ProjectVersionToJSONTyped(value?: Omit<ProjectVersion, 'version'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'description': value['description'],
        'publishedDate': value['publishedDate'] == null ? undefined : ((value['publishedDate']).toISOString()),
        'status': ProjectStatusToJSON(value['status']),
    };
}

