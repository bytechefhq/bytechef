/* tslint:disable */
/* eslint-disable */
/**
 * The Platform Workflow Execution Internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Page,
  TriggerExecution,
} from '../models/index';
import {
    PageFromJSON,
    PageToJSON,
    TriggerExecutionFromJSON,
    TriggerExecutionToJSON,
} from '../models/index';

export interface GetTriggerExecutionRequest {
    id: number;
}

export interface GetTriggerExecutionsPageRequest {
    pageNumber?: number;
}

/**
 * 
 */
export class TriggerExecutionApi extends runtime.BaseAPI {

    /**
     * Get a trigger execution by id.
     * Get a trigger execution by id
     */
    async getTriggerExecutionRaw(requestParameters: GetTriggerExecutionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TriggerExecution>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling getTriggerExecution().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/trigger-executions/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TriggerExecutionFromJSON(jsonValue));
    }

    /**
     * Get a trigger execution by id.
     * Get a trigger execution by id
     */
    async getTriggerExecution(requestParameters: GetTriggerExecutionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TriggerExecution> {
        const response = await this.getTriggerExecutionRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get a page of trigger execution.
     * Get a page of trigger execution
     */
    async getTriggerExecutionsPageRaw(requestParameters: GetTriggerExecutionsPageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Page>> {
        const queryParameters: any = {};

        if (requestParameters['pageNumber'] != null) {
            queryParameters['pageNumber'] = requestParameters['pageNumber'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/trigger-executions`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PageFromJSON(jsonValue));
    }

    /**
     * Get a page of trigger execution.
     * Get a page of trigger execution
     */
    async getTriggerExecutionsPage(requestParameters: GetTriggerExecutionsPageRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Page> {
        const response = await this.getTriggerExecutionsPageRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
