/* tslint:disable */
/* eslint-disable */
/**
 * ByteChef Platform ApiKey API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiKey
 */
export interface ApiKey {
    /**
     * 
     * @type {string}
     * @memberof ApiKey
     */
    createdBy?: string;
    /**
     * 
     * @type {Date}
     * @memberof ApiKey
     */
    createdDate?: Date;
    /**
     * The id of an environment.
     * @type {number}
     * @memberof ApiKey
     */
    environmentId?: number;
    /**
     * 
     * @type {number}
     * @memberof ApiKey
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof ApiKey
     */
    lastModifiedBy?: string;
    /**
     * 
     * @type {Date}
     * @memberof ApiKey
     */
    lastModifiedDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ApiKey
     */
    lastUsedDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof ApiKey
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ApiKey
     */
    secretKey?: string;
    /**
     * 
     * @type {number}
     * @memberof ApiKey
     */
    type?: number;
}

/**
 * Check if a given object implements the ApiKey interface.
 */
export function instanceOfApiKey(value: object): value is ApiKey {
    return true;
}

export function ApiKeyFromJSON(json: any): ApiKey {
    return ApiKeyFromJSONTyped(json, false);
}

export function ApiKeyFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiKey {
    if (json == null) {
        return json;
    }
    return {
        
        'createdBy': json['createdBy'] == null ? undefined : json['createdBy'],
        'createdDate': json['createdDate'] == null ? undefined : (new Date(json['createdDate'])),
        'environmentId': json['environmentId'] == null ? undefined : json['environmentId'],
        'id': json['id'] == null ? undefined : json['id'],
        'lastModifiedBy': json['lastModifiedBy'] == null ? undefined : json['lastModifiedBy'],
        'lastModifiedDate': json['lastModifiedDate'] == null ? undefined : (new Date(json['lastModifiedDate'])),
        'lastUsedDate': json['lastUsedDate'] == null ? undefined : (new Date(json['lastUsedDate'])),
        'name': json['name'] == null ? undefined : json['name'],
        'secretKey': json['secretKey'] == null ? undefined : json['secretKey'],
        'type': json['type'] == null ? undefined : json['type'],
    };
}

export function ApiKeyToJSON(json: any): ApiKey {
    return ApiKeyToJSONTyped(json, false);
}

export function ApiKeyToJSONTyped(value?: ApiKey | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'createdBy': value['createdBy'],
        'createdDate': value['createdDate'] == null ? value['createdDate'] : value['createdDate'].toISOString(),
        'environmentId': value['environmentId'],
        'id': value['id'],
        'lastModifiedBy': value['lastModifiedBy'],
        'lastModifiedDate': value['lastModifiedDate'] == null ? value['lastModifiedDate'] : value['lastModifiedDate'].toISOString(),
        'lastUsedDate': value['lastUsedDate'] == null ? value['lastUsedDate'] : value['lastUsedDate'].toISOString(),
        'name': value['name'],
        'secretKey': value['secretKey'],
        'type': value['type'],
    };
}

