/* tslint:disable */
/* eslint-disable */
/**
 * The Platform Configuration Internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OAuth2AuthorizationParameters
 */
export interface OAuth2AuthorizationParameters {
    /**
     * 
     * @type {string}
     * @memberof OAuth2AuthorizationParameters
     */
    authorizationUrl?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof OAuth2AuthorizationParameters
     */
    extraQueryParameters?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof OAuth2AuthorizationParameters
     */
    clientId?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof OAuth2AuthorizationParameters
     */
    scopes?: Array<string>;
}

/**
 * Check if a given object implements the OAuth2AuthorizationParameters interface.
 */
export function instanceOfOAuth2AuthorizationParameters(value: object): value is OAuth2AuthorizationParameters {
    return true;
}

export function OAuth2AuthorizationParametersFromJSON(json: any): OAuth2AuthorizationParameters {
    return OAuth2AuthorizationParametersFromJSONTyped(json, false);
}

export function OAuth2AuthorizationParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): OAuth2AuthorizationParameters {
    if (json == null) {
        return json;
    }
    return {
        
        'authorizationUrl': json['authorizationUrl'] == null ? undefined : json['authorizationUrl'],
        'extraQueryParameters': json['extraQueryParameters'] == null ? undefined : json['extraQueryParameters'],
        'clientId': json['clientId'] == null ? undefined : json['clientId'],
        'scopes': json['scopes'] == null ? undefined : json['scopes'],
    };
}

export function OAuth2AuthorizationParametersToJSON(json: any): OAuth2AuthorizationParameters {
    return OAuth2AuthorizationParametersToJSONTyped(json, false);
}

export function OAuth2AuthorizationParametersToJSONTyped(value?: OAuth2AuthorizationParameters | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'authorizationUrl': value['authorizationUrl'],
        'extraQueryParameters': value['extraQueryParameters'],
        'clientId': value['clientId'],
        'scopes': value['scopes'],
    };
}

