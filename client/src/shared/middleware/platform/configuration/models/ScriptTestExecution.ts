/* tslint:disable */
/* eslint-disable */
/**
 * The Platform Configuration Internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExecutionError } from './ExecutionError';
import {
    ExecutionErrorFromJSON,
    ExecutionErrorFromJSONTyped,
    ExecutionErrorToJSON,
    ExecutionErrorToJSONTyped,
} from './ExecutionError';

/**
 * Contains information about test execution of a script.
 * @export
 * @interface ScriptTestExecution
 */
export interface ScriptTestExecution {
    /**
     * 
     * @type {ExecutionError}
     * @memberof ScriptTestExecution
     */
    error?: ExecutionError;
    /**
     * The result output of testing a script.
     * @type {object}
     * @memberof ScriptTestExecution
     */
    output?: object;
}

/**
 * Check if a given object implements the ScriptTestExecution interface.
 */
export function instanceOfScriptTestExecution(value: object): value is ScriptTestExecution {
    return true;
}

export function ScriptTestExecutionFromJSON(json: any): ScriptTestExecution {
    return ScriptTestExecutionFromJSONTyped(json, false);
}

export function ScriptTestExecutionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScriptTestExecution {
    if (json == null) {
        return json;
    }
    return {
        
        'error': json['error'] == null ? undefined : ExecutionErrorFromJSON(json['error']),
        'output': json['output'] == null ? undefined : json['output'],
    };
}

export function ScriptTestExecutionToJSON(json: any): ScriptTestExecution {
    return ScriptTestExecutionToJSONTyped(json, false);
}

export function ScriptTestExecutionToJSONTyped(value?: ScriptTestExecution | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'error': ExecutionErrorToJSON(value['error']),
        'output': value['output'],
    };
}

