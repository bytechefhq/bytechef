/* tslint:disable */
/* eslint-disable */
/**
 * The Platform Configuration Internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ConnectionDefinitionBasic } from './ConnectionDefinitionBasic';
import {
    ConnectionDefinitionBasicFromJSON,
    ConnectionDefinitionBasicFromJSONTyped,
    ConnectionDefinitionBasicToJSON,
    ConnectionDefinitionBasicToJSONTyped,
} from './ConnectionDefinitionBasic';
import type { ActionDefinitionBasic } from './ActionDefinitionBasic';
import {
    ActionDefinitionBasicFromJSON,
    ActionDefinitionBasicFromJSONTyped,
    ActionDefinitionBasicToJSON,
    ActionDefinitionBasicToJSONTyped,
} from './ActionDefinitionBasic';
import type { Resources } from './Resources';
import {
    ResourcesFromJSON,
    ResourcesFromJSONTyped,
    ResourcesToJSON,
    ResourcesToJSONTyped,
} from './Resources';
import type { UnifiedApiCategory } from './UnifiedApiCategory';
import {
    UnifiedApiCategoryFromJSON,
    UnifiedApiCategoryFromJSONTyped,
    UnifiedApiCategoryToJSON,
    UnifiedApiCategoryToJSONTyped,
} from './UnifiedApiCategory';
import type { ComponentCategory } from './ComponentCategory';
import {
    ComponentCategoryFromJSON,
    ComponentCategoryFromJSONTyped,
    ComponentCategoryToJSON,
    ComponentCategoryToJSONTyped,
} from './ComponentCategory';
import type { TriggerDefinitionBasic } from './TriggerDefinitionBasic';
import {
    TriggerDefinitionBasicFromJSON,
    TriggerDefinitionBasicFromJSONTyped,
    TriggerDefinitionBasicToJSON,
    TriggerDefinitionBasicToJSONTyped,
} from './TriggerDefinitionBasic';

/**
 * A component contains a set of reusable code(actions) that accomplish specific tasks, triggers and connections if there is a need for a connection to an outside service.
 * @export
 * @interface ComponentDefinition
 */
export interface ComponentDefinition {
    /**
     * The list of all available actions the component can perform.
     * @type {Array<ActionDefinitionBasic>}
     * @memberof ComponentDefinition
     */
    actions?: Array<ActionDefinitionBasic>;
    /**
     * The list of categories the component belongs to.
     * @type {Array<ComponentCategory>}
     * @memberof ComponentDefinition
     */
    categories?: Array<ComponentCategory>;
    /**
     * 
     * @type {ConnectionDefinitionBasic}
     * @memberof ComponentDefinition
     */
    connection?: ConnectionDefinitionBasic;
    /**
     * If connection is required or not if it is defined.
     * @type {boolean}
     * @memberof ComponentDefinition
     */
    connectionRequired: boolean;
    /**
     * If the component supports data stream.
     * @type {boolean}
     * @memberof ComponentDefinition
     */
    dataStreamSupported?: boolean;
    /**
     * The description.
     * @type {string}
     * @memberof ComponentDefinition
     */
    description?: string;
    /**
     * The icon.
     * @type {string}
     * @memberof ComponentDefinition
     */
    icon?: string;
    /**
     * The name.
     * @type {string}
     * @memberof ComponentDefinition
     */
    name: string;
    /**
     * 
     * @type {Resources}
     * @memberof ComponentDefinition
     */
    resources?: Resources;
    /**
     * Tags for categorization.
     * @type {Array<string>}
     * @memberof ComponentDefinition
     */
    tags?: Array<string>;
    /**
     * The title
     * @type {string}
     * @memberof ComponentDefinition
     */
    title?: string;
    /**
     * The list of all available triggers the component can perform.
     * @type {Array<TriggerDefinitionBasic>}
     * @memberof ComponentDefinition
     */
    triggers?: Array<TriggerDefinitionBasic>;
    /**
     * 
     * @type {UnifiedApiCategory}
     * @memberof ComponentDefinition
     */
    unifiedApiCategory?: UnifiedApiCategory;
    /**
     * The version of a component.
     * @type {number}
     * @memberof ComponentDefinition
     */
    version: number;
}



/**
 * Check if a given object implements the ComponentDefinition interface.
 */
export function instanceOfComponentDefinition(value: object): value is ComponentDefinition {
    if (!('connectionRequired' in value) || value['connectionRequired'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    return true;
}

export function ComponentDefinitionFromJSON(json: any): ComponentDefinition {
    return ComponentDefinitionFromJSONTyped(json, false);
}

export function ComponentDefinitionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComponentDefinition {
    if (json == null) {
        return json;
    }
    return {
        
        'actions': json['actions'] == null ? undefined : ((json['actions'] as Array<any>).map(ActionDefinitionBasicFromJSON)),
        'categories': json['categories'] == null ? undefined : ((json['categories'] as Array<any>).map(ComponentCategoryFromJSON)),
        'connection': json['connection'] == null ? undefined : ConnectionDefinitionBasicFromJSON(json['connection']),
        'connectionRequired': json['connectionRequired'],
        'dataStreamSupported': json['dataStreamSupported'] == null ? undefined : json['dataStreamSupported'],
        'description': json['description'] == null ? undefined : json['description'],
        'icon': json['icon'] == null ? undefined : json['icon'],
        'name': json['name'],
        'resources': json['resources'] == null ? undefined : ResourcesFromJSON(json['resources']),
        'tags': json['tags'] == null ? undefined : json['tags'],
        'title': json['title'] == null ? undefined : json['title'],
        'triggers': json['triggers'] == null ? undefined : ((json['triggers'] as Array<any>).map(TriggerDefinitionBasicFromJSON)),
        'unifiedApiCategory': json['unifiedApiCategory'] == null ? undefined : UnifiedApiCategoryFromJSON(json['unifiedApiCategory']),
        'version': json['version'],
    };
}

export function ComponentDefinitionToJSON(json: any): ComponentDefinition {
    return ComponentDefinitionToJSONTyped(json, false);
}

export function ComponentDefinitionToJSONTyped(value?: ComponentDefinition | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'actions': value['actions'] == null ? undefined : ((value['actions'] as Array<any>).map(ActionDefinitionBasicToJSON)),
        'categories': value['categories'] == null ? undefined : ((value['categories'] as Array<any>).map(ComponentCategoryToJSON)),
        'connection': ConnectionDefinitionBasicToJSON(value['connection']),
        'connectionRequired': value['connectionRequired'],
        'dataStreamSupported': value['dataStreamSupported'],
        'description': value['description'],
        'icon': value['icon'],
        'name': value['name'],
        'resources': ResourcesToJSON(value['resources']),
        'tags': value['tags'],
        'title': value['title'],
        'triggers': value['triggers'] == null ? undefined : ((value['triggers'] as Array<any>).map(TriggerDefinitionBasicToJSON)),
        'unifiedApiCategory': UnifiedApiCategoryToJSON(value['unifiedApiCategory']),
        'version': value['version'],
    };
}

