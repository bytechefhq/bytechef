/* tslint:disable */
/* eslint-disable */
/**
 * The Platform Configuration Internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WorkflowTestConfigurationConnection } from './WorkflowTestConfigurationConnection';
import {
    WorkflowTestConfigurationConnectionFromJSON,
    WorkflowTestConfigurationConnectionFromJSONTyped,
    WorkflowTestConfigurationConnectionToJSON,
    WorkflowTestConfigurationConnectionToJSONTyped,
} from './WorkflowTestConfigurationConnection';

/**
 * Contains configuration and connections required for the test execution of a particular workflow.
 * @export
 * @interface WorkflowTestConfiguration
 */
export interface WorkflowTestConfiguration {
    /**
     * The created by.
     * @type {string}
     * @memberof WorkflowTestConfiguration
     */
    readonly createdBy?: string;
    /**
     * The created date.
     * @type {Date}
     * @memberof WorkflowTestConfiguration
     */
    readonly createdDate?: Date;
    /**
     * The input parameters used as workflow input values.
     * @type {{ [key: string]: string; }}
     * @memberof WorkflowTestConfiguration
     */
    inputs?: { [key: string]: string; };
    /**
     * The connections used by workflow test.
     * @type {Array<WorkflowTestConfigurationConnection>}
     * @memberof WorkflowTestConfiguration
     */
    connections?: Array<WorkflowTestConfigurationConnection>;
    /**
     * The last modified by.
     * @type {string}
     * @memberof WorkflowTestConfiguration
     */
    readonly lastModifiedBy?: string;
    /**
     * The last modified date.
     * @type {Date}
     * @memberof WorkflowTestConfiguration
     */
    readonly lastModifiedDate?: Date;
    /**
     * The id of a workflow.
     * @type {string}
     * @memberof WorkflowTestConfiguration
     */
    readonly workflowId?: string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowTestConfiguration
     */
    version?: number;
}

/**
 * Check if a given object implements the WorkflowTestConfiguration interface.
 */
export function instanceOfWorkflowTestConfiguration(value: object): value is WorkflowTestConfiguration {
    return true;
}

export function WorkflowTestConfigurationFromJSON(json: any): WorkflowTestConfiguration {
    return WorkflowTestConfigurationFromJSONTyped(json, false);
}

export function WorkflowTestConfigurationFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowTestConfiguration {
    if (json == null) {
        return json;
    }
    return {
        
        'createdBy': json['createdBy'] == null ? undefined : json['createdBy'],
        'createdDate': json['createdDate'] == null ? undefined : (new Date(json['createdDate'])),
        'inputs': json['inputs'] == null ? undefined : json['inputs'],
        'connections': json['connections'] == null ? undefined : ((json['connections'] as Array<any>).map(WorkflowTestConfigurationConnectionFromJSON)),
        'lastModifiedBy': json['lastModifiedBy'] == null ? undefined : json['lastModifiedBy'],
        'lastModifiedDate': json['lastModifiedDate'] == null ? undefined : (new Date(json['lastModifiedDate'])),
        'workflowId': json['workflowId'] == null ? undefined : json['workflowId'],
        'version': json['__version'] == null ? undefined : json['__version'],
    };
}

export function WorkflowTestConfigurationToJSON(json: any): WorkflowTestConfiguration {
    return WorkflowTestConfigurationToJSONTyped(json, false);
}

export function WorkflowTestConfigurationToJSONTyped(value?: Omit<WorkflowTestConfiguration, 'createdBy'|'createdDate'|'lastModifiedBy'|'lastModifiedDate'|'workflowId'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'inputs': value['inputs'],
        'connections': value['connections'] == null ? undefined : ((value['connections'] as Array<any>).map(WorkflowTestConfigurationConnectionToJSON)),
        '__version': value['version'],
    };
}

