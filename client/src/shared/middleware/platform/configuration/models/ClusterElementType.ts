/* tslint:disable */
/* eslint-disable */
/**
 * The Platform Configuration Internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A type of a cluster element.
 * @export
 * @interface ClusterElementType
 */
export interface ClusterElementType {
    /**
     * The name of a cluster element type.
     * @type {string}
     * @memberof ClusterElementType
     */
    name?: string;
    /**
     * The label of a cluster element type.
     * @type {string}
     * @memberof ClusterElementType
     */
    label?: string;
    /**
     * If the cluster element type is required.
     * @type {boolean}
     * @memberof ClusterElementType
     */
    required?: boolean;
    /**
     * If multiple elements can be added.
     * @type {boolean}
     * @memberof ClusterElementType
     */
    multipleElements?: boolean;
}

/**
 * Check if a given object implements the ClusterElementType interface.
 */
export function instanceOfClusterElementType(value: object): value is ClusterElementType {
    return true;
}

export function ClusterElementTypeFromJSON(json: any): ClusterElementType {
    return ClusterElementTypeFromJSONTyped(json, false);
}

export function ClusterElementTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClusterElementType {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'label': json['label'] == null ? undefined : json['label'],
        'required': json['required'] == null ? undefined : json['required'],
        'multipleElements': json['multipleElements'] == null ? undefined : json['multipleElements'],
    };
}

export function ClusterElementTypeToJSON(json: any): ClusterElementType {
    return ClusterElementTypeToJSONTyped(json, false);
}

export function ClusterElementTypeToJSONTyped(value?: ClusterElementType | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'label': value['label'],
        'required': value['required'],
        'multipleElements': value['multipleElements'],
    };
}

