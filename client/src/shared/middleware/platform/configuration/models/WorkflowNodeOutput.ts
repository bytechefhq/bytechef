/* tslint:disable */
/* eslint-disable */
/**
 * The Platform Configuration Internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TaskDispatcherDefinitionBasic } from './TaskDispatcherDefinitionBasic';
import {
    TaskDispatcherDefinitionBasicFromJSON,
    TaskDispatcherDefinitionBasicFromJSONTyped,
    TaskDispatcherDefinitionBasicToJSON,
    TaskDispatcherDefinitionBasicToJSONTyped,
} from './TaskDispatcherDefinitionBasic';
import type { OutputResponse } from './OutputResponse';
import {
    OutputResponseFromJSON,
    OutputResponseFromJSONTyped,
    OutputResponseToJSON,
    OutputResponseToJSONTyped,
} from './OutputResponse';
import type { ActionDefinitionBasic } from './ActionDefinitionBasic';
import {
    ActionDefinitionBasicFromJSON,
    ActionDefinitionBasicFromJSONTyped,
    ActionDefinitionBasicToJSON,
    ActionDefinitionBasicToJSONTyped,
} from './ActionDefinitionBasic';
import type { TriggerDefinitionBasic } from './TriggerDefinitionBasic';
import {
    TriggerDefinitionBasicFromJSON,
    TriggerDefinitionBasicFromJSONTyped,
    TriggerDefinitionBasicToJSON,
    TriggerDefinitionBasicToJSONTyped,
} from './TriggerDefinitionBasic';

/**
 * The workflow node output
 * @export
 * @interface WorkflowNodeOutput
 */
export interface WorkflowNodeOutput {
    /**
     * 
     * @type {ActionDefinitionBasic}
     * @memberof WorkflowNodeOutput
     */
    actionDefinition?: ActionDefinitionBasic;
    /**
     * 
     * @type {OutputResponse}
     * @memberof WorkflowNodeOutput
     */
    outputResponse?: OutputResponse;
    /**
     * 
     * @type {TaskDispatcherDefinitionBasic}
     * @memberof WorkflowNodeOutput
     */
    taskDispatcherDefinition?: TaskDispatcherDefinitionBasic;
    /**
     * 
     * @type {TriggerDefinitionBasic}
     * @memberof WorkflowNodeOutput
     */
    triggerDefinition?: TriggerDefinitionBasic;
    /**
     * 
     * @type {OutputResponse}
     * @memberof WorkflowNodeOutput
     */
    variableOutputResponse?: OutputResponse;
    /**
     * The workflow node name
     * @type {string}
     * @memberof WorkflowNodeOutput
     */
    workflowNodeName: string;
}

/**
 * Check if a given object implements the WorkflowNodeOutput interface.
 */
export function instanceOfWorkflowNodeOutput(value: object): value is WorkflowNodeOutput {
    if (!('workflowNodeName' in value) || value['workflowNodeName'] === undefined) return false;
    return true;
}

export function WorkflowNodeOutputFromJSON(json: any): WorkflowNodeOutput {
    return WorkflowNodeOutputFromJSONTyped(json, false);
}

export function WorkflowNodeOutputFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowNodeOutput {
    if (json == null) {
        return json;
    }
    return {
        
        'actionDefinition': json['actionDefinition'] == null ? undefined : ActionDefinitionBasicFromJSON(json['actionDefinition']),
        'outputResponse': json['outputResponse'] == null ? undefined : OutputResponseFromJSON(json['outputResponse']),
        'taskDispatcherDefinition': json['taskDispatcherDefinition'] == null ? undefined : TaskDispatcherDefinitionBasicFromJSON(json['taskDispatcherDefinition']),
        'triggerDefinition': json['triggerDefinition'] == null ? undefined : TriggerDefinitionBasicFromJSON(json['triggerDefinition']),
        'variableOutputResponse': json['variableOutputResponse'] == null ? undefined : OutputResponseFromJSON(json['variableOutputResponse']),
        'workflowNodeName': json['workflowNodeName'],
    };
}

export function WorkflowNodeOutputToJSON(json: any): WorkflowNodeOutput {
    return WorkflowNodeOutputToJSONTyped(json, false);
}

export function WorkflowNodeOutputToJSONTyped(value?: WorkflowNodeOutput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'actionDefinition': ActionDefinitionBasicToJSON(value['actionDefinition']),
        'outputResponse': OutputResponseToJSON(value['outputResponse']),
        'taskDispatcherDefinition': TaskDispatcherDefinitionBasicToJSON(value['taskDispatcherDefinition']),
        'triggerDefinition': TriggerDefinitionBasicToJSON(value['triggerDefinition']),
        'variableOutputResponse': OutputResponseToJSON(value['variableOutputResponse']),
        'workflowNodeName': value['workflowNodeName'],
    };
}

