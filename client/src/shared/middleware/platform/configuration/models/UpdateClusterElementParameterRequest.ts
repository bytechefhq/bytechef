/* tslint:disable */
/* eslint-disable */
/**
 * The Platform Configuration Internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateClusterElementParameterRequest
 */
export interface UpdateClusterElementParameterRequest {
    /**
     * If fromAi should be included in metadata.
     * @type {boolean}
     * @memberof UpdateClusterElementParameterRequest
     */
    fromAiInMetadata?: boolean;
    /**
     * If path and value type should be included in metadata.
     * @type {boolean}
     * @memberof UpdateClusterElementParameterRequest
     */
    includeInMetadata?: boolean;
    /**
     * The workflow node parameter path.
     * @type {string}
     * @memberof UpdateClusterElementParameterRequest
     */
    path: string;
    /**
     * The type of a property.
     * @type {string}
     * @memberof UpdateClusterElementParameterRequest
     */
    type: string;
    /**
     * The value.
     * @type {object}
     * @memberof UpdateClusterElementParameterRequest
     */
    value?: object;
}

/**
 * Check if a given object implements the UpdateClusterElementParameterRequest interface.
 */
export function instanceOfUpdateClusterElementParameterRequest(value: object): value is UpdateClusterElementParameterRequest {
    if (!('path' in value) || value['path'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function UpdateClusterElementParameterRequestFromJSON(json: any): UpdateClusterElementParameterRequest {
    return UpdateClusterElementParameterRequestFromJSONTyped(json, false);
}

export function UpdateClusterElementParameterRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateClusterElementParameterRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'fromAiInMetadata': json['fromAiInMetadata'] == null ? undefined : json['fromAiInMetadata'],
        'includeInMetadata': json['includeInMetadata'] == null ? undefined : json['includeInMetadata'],
        'path': json['path'],
        'type': json['type'],
        'value': json['value'] == null ? undefined : json['value'],
    };
}

export function UpdateClusterElementParameterRequestToJSON(json: any): UpdateClusterElementParameterRequest {
    return UpdateClusterElementParameterRequestToJSONTyped(json, false);
}

export function UpdateClusterElementParameterRequestToJSONTyped(value?: UpdateClusterElementParameterRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fromAiInMetadata': value['fromAiInMetadata'],
        'includeInMetadata': value['includeInMetadata'],
        'path': value['path'],
        'type': value['type'],
        'value': value['value'],
    };
}

