/* tslint:disable */
/* eslint-disable */
/**
 * The Platform Configuration Internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A notification event definition.
 * @export
 * @interface NotificationEvent
 */
export interface NotificationEvent {
    /**
     * Notification Id
     * @type {number}
     * @memberof NotificationEvent
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof NotificationEvent
     */
    type?: NotificationEventTypeEnum;
}


/**
 * @export
 */
export const NotificationEventTypeEnum = {
    JobCancelled: 'JOB_CANCELLED',
    JobCreated: 'JOB_CREATED',
    JobCompleted: 'JOB_COMPLETED',
    JobFailed: 'JOB_FAILED',
    JobStarted: 'JOB_STARTED'
} as const;
export type NotificationEventTypeEnum = typeof NotificationEventTypeEnum[keyof typeof NotificationEventTypeEnum];


/**
 * Check if a given object implements the NotificationEvent interface.
 */
export function instanceOfNotificationEvent(value: object): value is NotificationEvent {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function NotificationEventFromJSON(json: any): NotificationEvent {
    return NotificationEventFromJSONTyped(json, false);
}

export function NotificationEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationEvent {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': json['type'] == null ? undefined : json['type'],
    };
}

export function NotificationEventToJSON(json: any): NotificationEvent {
    return NotificationEventToJSONTyped(json, false);
}

export function NotificationEventToJSONTyped(value?: Omit<NotificationEvent, 'id'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
    };
}

