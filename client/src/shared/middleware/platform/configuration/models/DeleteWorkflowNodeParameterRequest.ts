/* tslint:disable */
/* eslint-disable */
/**
 * The Platform Configuration Internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DeleteWorkflowNodeParameterRequest
 */
export interface DeleteWorkflowNodeParameterRequest {
    /**
     * If path and value type should be included in metadata.
     * @type {boolean}
     * @memberof DeleteWorkflowNodeParameterRequest
     */
    includeInMetadata?: boolean;
    /**
     * The workflow node parameter path.
     * @type {string}
     * @memberof DeleteWorkflowNodeParameterRequest
     */
    path: string;
}

/**
 * Check if a given object implements the DeleteWorkflowNodeParameterRequest interface.
 */
export function instanceOfDeleteWorkflowNodeParameterRequest(value: object): value is DeleteWorkflowNodeParameterRequest {
    if (!('path' in value) || value['path'] === undefined) return false;
    return true;
}

export function DeleteWorkflowNodeParameterRequestFromJSON(json: any): DeleteWorkflowNodeParameterRequest {
    return DeleteWorkflowNodeParameterRequestFromJSONTyped(json, false);
}

export function DeleteWorkflowNodeParameterRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeleteWorkflowNodeParameterRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'includeInMetadata': json['includeInMetadata'] == null ? undefined : json['includeInMetadata'],
        'path': json['path'],
    };
}

export function DeleteWorkflowNodeParameterRequestToJSON(json: any): DeleteWorkflowNodeParameterRequest {
    return DeleteWorkflowNodeParameterRequestToJSONTyped(json, false);
}

export function DeleteWorkflowNodeParameterRequestToJSONTyped(value?: DeleteWorkflowNodeParameterRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'includeInMetadata': value['includeInMetadata'],
        'path': value['path'],
    };
}

